9991 parse: --- defining scenario_editor-can-undo-typing-multiple-2
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"a": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [012]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [012]\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .012a      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .012a      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .a         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .a         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [3]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [3]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .3a        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .3a        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-undo-typing-multiple-2 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- deduce types for recipe scenario_editor-can-undo-typing-multiple-2
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- transform names for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-typing-multiple-2
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- transform braces for recipe scenario_editor-can-undo-typing-multiple-2
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- perform checks for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- checking reply instructions against header for scenario_editor-can-undo-typing-multiple-2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-typing-multiple-2
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1116
9999 mem: storing 7 in location 1117
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9999 mem: storing 1016 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9999 mem: storing 1018 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9999 mem: storing 1020 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9999 mem: storing 1022 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9999 mem: storing 1024 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9999 mem: storing 1026 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9999 mem: storing 1028 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9999 mem: storing 1030 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9999 mem: storing 1032 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9999 mem: storing 1034 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9999 mem: storing 1036 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9999 mem: storing 1038 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9999 mem: storing 1040 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9999 mem: storing 1042 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9999 mem: storing 1044 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9999 mem: storing 1046 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9999 mem: storing 1048 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9999 mem: storing 1050 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9999 mem: storing 1052 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9999 mem: storing 1054 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9999 mem: storing 1056 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9999 mem: storing 1058 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9999 mem: storing 1060 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9999 mem: storing 1062 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9999 mem: storing 1064 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9999 mem: storing 1066 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9999 mem: storing 1068 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9999 mem: storing 1070 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9999 mem: storing 1072 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9999 mem: storing 1074 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9999 mem: storing 1076 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9999 mem: storing 1078 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9999 mem: storing 1080 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9999 mem: storing 1082 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9999 mem: storing 1084 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9999 mem: storing 1086 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9999 mem: storing 1088 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9999 mem: storing 1090 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9999 mem: storing 1092 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9999 mem: storing 1094 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9999 mem: storing 1096 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9999 mem: storing 1098 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9999 mem: storing 1100 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9999 mem: storing 1102 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9999 mem: storing 1104 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9999 mem: storing 1106 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9999 mem: storing 1108 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9999 mem: storing 1110 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9999 mem: storing 1112 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9999 mem: storing 1114 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"a": "literal-string"}
9999 mem: new string alloc: 1125
9999 mem: storing 1125 in location 1
9999 mem: incrementing refcount of 1125: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1125
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1128
9999 mem: storing 11 in location 1129
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1131
9999 mem: incrementing refcount of 1125: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1132
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1133
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1134
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1134 is 10
9999 mem: storing 9 in location 1134
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1141
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1136
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1133 is 0
9999 mem: location 1136 is 1146
9999 mem: storing 0 in location 1146
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1136
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1134 is 9
9999 mem: location 1136 is 1147
9999 mem: storing 9 in location 1147
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1136
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1136 is 1149
9999 mem: storing 1 in location 1149
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1136
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1133 is 0
9999 mem: location 1136 is 1150
9999 mem: storing 0 in location 1150
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1137
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1154
9999 mem: storing 4 in location 1155
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1157
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1160
9999 mem: storing 1160 in location 1159
9999 mem: incrementing refcount of 1160: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1157 is 167
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1159 is 1160
9999 mem: skipping refcount at 1160
9999 mem: storing 167 in location 1161
9999 mem: storing 0 in location 1162
9999 mem: storing 0 in location 1163
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1158 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1159 is 1160
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1160
9999 mem: location 1137 is 1142
9999 mem: storing 1160 in location 1142
9999 mem: incrementing refcount of 1160: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1138
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1137 is 1142
9999 mem: location 1142 is 1160
9999 mem: location 1138 is 1143
9999 mem: storing 1160 in location 1143
9999 mem: incrementing refcount of 1160: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1139
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1137 is 1142
9999 mem: location 1142 is 1160
9999 mem: location 1139 is 1145
9999 mem: storing 1160 in location 1145
9999 mem: incrementing refcount of 1160: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1135 is 1141
9999 mem: location 1131 is 1125
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1164
9999 mem: storing 8 in location 1165
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1167
9999 mem: incrementing refcount of 1141: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1168
9999 mem: incrementing refcount of 1125: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1168 is 1125
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1168 is 1125
9999 mem: skipping refcount at 1125
9999 mem: storing 1 in location 1169
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1169 is 1
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1170
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1167 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1167 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1160
9999 mem: storing 1160 in location 1171
9999 mem: incrementing refcount of 1160: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1170 is 0
9999 mem: location 1169 is 1
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1168 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1170 is 0
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1173
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1173 is 97
9999 mem: location 1171 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1174
9999 mem: storing 5 in location 1175
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1177
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1178
9999 mem: incrementing refcount of 1160: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1181
9999 mem: storing 1181 in location 1179
9999 mem: incrementing refcount of 1181: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1177 is 97
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1182
9999 mem: storing 97 in location 1182
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1180
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1179 is 1181
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1162
9999 mem: storing 1181 in location 1162
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1178 is 1160
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1160 in location 1184
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1180 is 0
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1183
9999 mem: storing 0 in location 1183
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1178 is 1160
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1171 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1185
9999 mem: storing 3 in location 1186
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 7 -> 6
9999 mem: storing 1181 in location 1171
9999 mem: incrementing refcount of 1181: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1170 is 0
9999 mem: storing 1 in location 1170
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1170 is 1
9999 mem: location 1169 is 1
9999 mem: storing 1 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1167 is 1141
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1141: 2 -> 1
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1139
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1137 is 1142
9999 mem: location 1142 is 1160
9999 mem: location 1139 is 1145
9999 mem: decrementing refcount of 1160: 6 -> 5
9999 mem: storing 1160 in location 1145
9999 mem: incrementing refcount of 1160: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1132 is 1008
9999 mem: location 1135 is 1141
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1190
9999 mem: storing 28 in location 1191
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1194
9999 mem: incrementing refcount of 1141: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1194 is 1141
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1195
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1193 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 105 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1196
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1197
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1198
9999 mem: incrementing refcount of 1160: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1160
9999 mem: storing 1160 in location 1199
9999 mem: incrementing refcount of 1160: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 9 -> 8
9999 mem: storing 1181 in location 1198
9999 mem: incrementing refcount of 1181: 4 -> 5
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1200
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1201
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1202
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1203
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1205
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1193 is 1008
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1198 is 1181
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1201 is 1
9999 mem: location 1196 is 5
9999 mem: storing 0 in location 1206
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1206 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1207
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1202 is 0
9999 mem: location 1204 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1208
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1160
9999 mem: location 1205 is 1145
9999 mem: decrementing refcount of 1160: 8 -> 7
9999 mem: storing 1160 in location 1145
9999 mem: incrementing refcount of 1160: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1198 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1198 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1209
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1200 is 7
9999 mem: location 1209 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1220
9999 mem: storing 10 in location 1221
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1224
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1224 is 97
9999 mem: storing 0 in location 1226
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1224 is 97
9999 mem: storing 0 in location 1229
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1200
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1210
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1202 is 0
9999 mem: location 1197 is 9
9999 mem: storing 0 in location 1212
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1193 is 1008
9999 mem: location 1209 is 97
9999 mem: location 1200 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1232
9999 mem: storing 23 in location 1233
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
9990 schedule: print/render/new-editor/scenario_editor-can-undo-typing-multiple-2
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 0
9999 mem: storing 10 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 10
9999 mem: storing 1036 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1036
9999 mem: location 1254 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1181
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
9999 mem: incrementing refcount of 1181: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1189
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 6 -> 5
9999 mem: storing 0 in location 1198
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 9 -> 8
9999 mem: storing 1181 in location 1199
9999 mem: incrementing refcount of 1181: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1202 is 0
9999 mem: storing 1 in location 1202
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1198 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1214
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 0
9999 mem: location 1214 is 1144
9999 mem: storing 0 in location 1144
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1207
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1215
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1207 is 1
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1216
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1217
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1218
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1218 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1219
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1201 is 1
9999 mem: location 1219 is 1148
9999 mem: storing 1 in location 1148
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1201 is 1
9999 mem: location 1202 is 1
9999 mem: location 1193 is 1008
9999 mem: location 1194 is 1141
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 1
9998 run: result 2 is 1008
9998 run: result 3 is 1141
9999 mem: decrementing refcount of 1008: 8 -> 7
9999 mem: storing 1008 in location 1132
9999 mem: incrementing refcount of 1008: 7 -> 8
9999 mem: decrementing refcount of 1141: 3 -> 2
9999 mem: storing 1141 in location 1135
9999 mem: incrementing refcount of 1141: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1135 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1140
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1140 is 1151
9999 mem: storing 1 in location 1151
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1135 is 1141
9999 mem: location 1132 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1141
9999 mem: storing 1141 in location 2
9999 mem: incrementing refcount of 1141: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1141
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 8 -> 9
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1120
9999 mem: incrementing refcount of 1141: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1121
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1122
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1141
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1190
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 9 -> 10
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1194
9999 mem: incrementing refcount of 1141: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1194 is 1141
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1195
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1193 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 105 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1196
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1197
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1198
9999 mem: incrementing refcount of 1160: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1160
9999 mem: storing 1160 in location 1199
9999 mem: incrementing refcount of 1160: 9 -> 10
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 7 -> 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 11 -> 10
9999 mem: storing 1181 in location 1198
9999 mem: incrementing refcount of 1181: 8 -> 9
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1200
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1201
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1202
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1203
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1205
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1193 is 1008
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 11 -> 12
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1198 is 1181
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1201 is 1
9999 mem: location 1196 is 5
9999 mem: storing 0 in location 1206
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1206 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1207
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1202 is 0
9999 mem: location 1204 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1208
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1160
9999 mem: location 1205 is 1145
9999 mem: decrementing refcount of 1160: 10 -> 9
9999 mem: storing 1160 in location 1145
9999 mem: incrementing refcount of 1160: 9 -> 10
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1198 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1198 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1209
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1200 is 7
9999 mem: location 1209 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1220
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1223
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1224
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1223 is 7
9999 mem: storing 1 in location 1225
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1224 is 97
9999 mem: storing 0 in location 1226
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1227
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1224 is 97
9999 mem: storing 0 in location 1229
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1223 is 7
9999 mem: storing 0 in location 1230
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1223 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1200
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1210
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1202 is 0
9999 mem: location 1197 is 9
9999 mem: storing 0 in location 1212
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1193 is 1008
9999 mem: location 1209 is 97
9999 mem: location 1200 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 0
9999 mem: storing 10 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 10
9999 mem: storing 1036 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1036
9999 mem: location 1254 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1181
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
9999 mem: incrementing refcount of 1181: 9 -> 10
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1189
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 10 -> 9
9999 mem: storing 0 in location 1198
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 9 -> 10
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 11 -> 10
9999 mem: storing 1181 in location 1199
9999 mem: incrementing refcount of 1181: 10 -> 11
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1202 is 0
9999 mem: storing 1 in location 1202
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1198 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1214
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 0
9999 mem: location 1214 is 1144
9999 mem: storing 0 in location 1144
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1207
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1215
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1207 is 1
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1216
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1217
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1218
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1218 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1219
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1201 is 1
9999 mem: location 1219 is 1148
9999 mem: storing 1 in location 1148
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1201 is 1
9999 mem: location 1202 is 1
9999 mem: location 1193 is 1008
9999 mem: location 1194 is 1141
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1123
9999 mem: storing 1 in location 1124
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 1
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1164
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 13 -> 14
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1168
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1169
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1170
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1171
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 1
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1
9999 mem: storing 11 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 11
9999 mem: storing 1038 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1038
9999 mem: location 1254 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 14 -> 15
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 1
9999 mem: storing 2 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 2
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 2
9999 mem: storing 12 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 5 -> 6
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 12
9999 mem: storing 1040 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1040
9999 mem: location 1254 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 15 -> 16
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 2
9999 mem: storing 3 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 3
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 3
9999 mem: storing 13 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 13
9999 mem: storing 1042 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1042
9999 mem: location 1254 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 16 -> 17
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 3
9999 mem: storing 4 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 4
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 4
9999 mem: storing 14 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 14
9999 mem: storing 1044 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1044
9999 mem: location 1254 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 17 -> 18
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 4
9999 mem: storing 5 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 5
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 5
9999 mem: storing 15 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-can-undo-typing-multiple-2
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 15
9999 mem: storing 1046 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1046
9999 mem: location 1254 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 5
9999 mem: storing 6 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 6
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 6
9999 mem: storing 16 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 9 -> 10
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 16
9999 mem: storing 1048 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1048
9999 mem: location 1254 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 20 -> 19
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 19 -> 20
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 6
9999 mem: storing 7 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 7
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 7
9999 mem: storing 17 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 17
9999 mem: storing 1050 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1050
9999 mem: location 1254 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 21 -> 20
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 20 -> 21
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 7
9999 mem: storing 8 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 8
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 8
9999 mem: storing 18 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 18
9999 mem: storing 1052 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1052
9999 mem: location 1254 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 22 -> 21
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 21 -> 22
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 8
9999 mem: storing 9 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 9
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 9
9999 mem: storing 19 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 19
9999 mem: storing 1054 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1054
9999 mem: location 1254 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 23 -> 22
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 22 -> 23
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 9
9999 mem: storing 10 in location 1168
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 10
9999 mem: location 1169 is 9
9999 mem: storing 1 in location 1173
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1167 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1257
9999 mem: storing 12 in location 1258
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 23 -> 24
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1261
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1264
9999 mem: storing 1 in location 1265
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1266
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1268
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 2
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 2
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 24 -> 25
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 0
9999 mem: storing 20 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 20
9999 mem: storing 1056 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1056
9999 mem: location 1254 is 1056
9999 mem: storing 9480 in location 1056
9999 mem: storing 245 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 0
9999 mem: storing 1 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 1
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1
9999 mem: storing 21 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 21
9999 mem: storing 1058 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1058
9999 mem: location 1254 is 1058
9999 mem: storing 9480 in location 1058
9999 mem: storing 245 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 1
9999 mem: storing 2 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 2
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 2
9999 mem: storing 22 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 22
9999 mem: storing 1060 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1060
9999 mem: location 1254 is 1060
9999 mem: storing 9480 in location 1060
9999 mem: storing 245 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 2
9999 mem: storing 3 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 3
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 3
9999 mem: storing 23 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 23
9999 mem: storing 1062 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1062
9999 mem: location 1254 is 1062
9999 mem: storing 9480 in location 1062
9999 mem: storing 245 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 3
9999 mem: storing 4 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 4
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-can-undo-typing-multiple-2
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 4
9999 mem: storing 24 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 17 -> 18
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 24
9999 mem: storing 1064 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1064
9999 mem: location 1254 is 1064
9999 mem: storing 9480 in location 1064
9999 mem: storing 245 in location 1065
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 4
9999 mem: storing 5 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 5
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 5
9999 mem: storing 25 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 18 -> 19
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 25
9999 mem: storing 1066 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1066
9999 mem: location 1254 is 1066
9999 mem: storing 9480 in location 1066
9999 mem: storing 245 in location 1067
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 5
9999 mem: storing 6 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 6
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 6
9999 mem: storing 26 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 19 -> 20
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 26
9999 mem: storing 1068 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1068
9999 mem: location 1254 is 1068
9999 mem: storing 9480 in location 1068
9999 mem: storing 245 in location 1069
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 6
9999 mem: storing 7 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 7
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 7
9999 mem: storing 27 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 20 -> 21
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 27
9999 mem: storing 1070 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1070
9999 mem: location 1254 is 1070
9999 mem: storing 9480 in location 1070
9999 mem: storing 245 in location 1071
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 7
9999 mem: storing 8 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 8
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 8
9999 mem: storing 28 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 21 -> 22
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 28
9999 mem: storing 1072 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1072
9999 mem: location 1254 is 1072
9999 mem: storing 9480 in location 1072
9999 mem: storing 245 in location 1073
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 8
9999 mem: storing 9 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 9
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 9
9999 mem: storing 29 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 29
9999 mem: storing 1074 in location 1254
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1074
9999 mem: location 1254 is 1074
9999 mem: storing 9480 in location 1074
9999 mem: storing 245 in location 1075
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 9
9999 mem: storing 10 in location 1262
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 10
9999 mem: location 1263 is 9
9999 mem: storing 0 in location 1270
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 3
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 36 -> 37
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1164
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1169
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1170
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1171
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 0
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 38 -> 39
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 0
9999 mem: storing 30 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 23 -> 24
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 30
9999 mem: storing 1076 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1076
9999 mem: location 1254 is 1076
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 0
9999 mem: storing 1 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 1
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1
9999 mem: storing 31 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 24 -> 25
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 31
9999 mem: storing 1078 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1078
9999 mem: location 1254 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 1
9999 mem: storing 2 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 2
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 2
9999 mem: storing 32 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 25 -> 26
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 32
9999 mem: storing 1080 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1080
9999 mem: location 1254 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 40 -> 41
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 2
9999 mem: storing 3 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 3
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 41 -> 42
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/scenario_editor-can-undo-typing-multiple-2
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 3
9999 mem: storing 33 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 26 -> 27
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 33
9999 mem: storing 1082 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1082
9999 mem: location 1254 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 3
9999 mem: storing 4 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 4
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 42 -> 43
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 4
9999 mem: storing 34 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 27 -> 28
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 34
9999 mem: storing 1084 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1084
9999 mem: location 1254 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 4
9999 mem: storing 5 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 5
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 43 -> 44
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 5
9999 mem: storing 35 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 28 -> 29
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 35
9999 mem: storing 1086 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1086
9999 mem: location 1254 is 1086
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 5
9999 mem: storing 6 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 6
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 44 -> 45
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 6
9999 mem: storing 36 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 29 -> 30
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 36
9999 mem: storing 1088 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1088
9999 mem: location 1254 is 1088
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 6
9999 mem: storing 7 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 7
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 7
9999 mem: storing 37 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 30 -> 31
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 37
9999 mem: storing 1090 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1090
9999 mem: location 1254 is 1090
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 45 -> 46
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 7
9999 mem: storing 8 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 8
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 46 -> 47
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 8
9999 mem: storing 38 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 31 -> 32
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 38
9999 mem: storing 1092 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1092
9999 mem: location 1254 is 1092
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 8
9999 mem: storing 9 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 9
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 47 -> 48
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 9
9999 mem: storing 39 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 32 -> 33
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 39
9999 mem: storing 1094 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1094
9999 mem: location 1254 is 1094
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 47 -> 48
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 9
9999 mem: storing 10 in location 1168
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 10
9999 mem: location 1169 is 9
9999 mem: storing 1 in location 1173
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1167 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1271
9999 mem: storing 7 in location 1272
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1274
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1275
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1276
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1277
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1275 is 3
9999 mem: storing 4 in location 1275
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1274 is 1008
9999 mem: location 1275 is 4
9999 mem: location 1276 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 49 -> 50
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1158
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 4
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 50 -> 49
9999 mem: storing 1008 in location 1274
9999 mem: incrementing refcount of 1008: 49 -> 50
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1274 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 50 -> 51
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 106 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1278
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1275 is 4
9999 mem: location 1278 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1274 is 1008
9999 mem: location 1275 is 4
9999 mem: location 1276 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 51 -> 52
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1158
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 4
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1274
9999 mem: incrementing refcount of 1008: 51 -> 52
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1274 is 1008
9999 mem: location 1276 is 0
9999 mem: location 1277 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1164
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 52 -> 53
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1169
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1170
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1171
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 0
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 0
9999 mem: storing 40 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 33 -> 34
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 40
9999 mem: storing 1096 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1096
9999 mem: location 1254 is 1096
9999 mem: storing 32 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 53 -> 54
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 0
9999 mem: storing 1 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 1
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1
9999 mem: storing 41 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario_editor-can-undo-typing-multiple-2
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 41
9999 mem: storing 1098 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1098
9999 mem: location 1254 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 1
9999 mem: storing 2 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 2
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 2
9999 mem: storing 42 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 42
9999 mem: storing 1100 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1100
9999 mem: location 1254 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 2
9999 mem: storing 3 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 3
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 3
9999 mem: storing 43 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 43
9999 mem: storing 1102 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1102
9999 mem: location 1254 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 3
9999 mem: storing 4 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 4
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 4
9999 mem: storing 44 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 44
9999 mem: storing 1104 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1104
9999 mem: location 1254 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 4
9999 mem: storing 5 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 5
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 5
9999 mem: storing 45 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 45
9999 mem: storing 1106 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1106
9999 mem: location 1254 is 1106
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 5
9999 mem: storing 6 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 6
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 6
9999 mem: storing 46 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 46
9999 mem: storing 1108 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1108
9999 mem: location 1254 is 1108
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 6
9999 mem: storing 7 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 7
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 7
9999 mem: storing 47 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 47
9999 mem: storing 1110 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1110
9999 mem: location 1254 is 1110
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 7
9999 mem: storing 8 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 8
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 8
9999 mem: storing 48 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 41 -> 42
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 48
9999 mem: storing 1112 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1112
9999 mem: location 1254 is 1112
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 8
9999 mem: storing 9 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 9
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 9
9999 mem: storing 49 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 42 -> 43
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 49
9999 mem: storing 1114 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1114
9999 mem: location 1254 is 1114
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 63 -> 62
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 62 -> 63
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 9
9999 mem: storing 10 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 10
9999 mem: location 1169 is 9
9999 mem: storing 1 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1167 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1275 is 4
9999 mem: storing 5 in location 1275
 105 run: jump {: "offset"}
9998 run: jumping to instruction 9
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1275 is 5
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1274 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1141
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    type [012]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"012": "literal-string"}
9992 load: after rewriting: type {"012": "literal-string"}
9999 mem: storing 'type' event starting at 1282
9999 mem: storing 'text' tag at 1282
9999 mem: storing character 48 at 1283
9999 mem: storing 'text' tag at 1286
9999 mem: storing character 49 at 1287
9999 mem: storing 'text' tag at 1290
9999 mem: storing character 50 at 1291
9999 mem: storing console in 1294
9999 mem: storing console data in 1296
 102 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1294
9999 mem: location 2 is 1141
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1297
9999 mem: storing 14 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 63 -> 64
 103 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1301
9999 mem: incrementing refcount of 1294: 0 -> 1
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 6 -> 7
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1304
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 64 -> 65
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 64 -> 65
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1294
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1260
9999 mem: incrementing refcount of 1294: 1 -> 2
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1294
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "number"
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1261
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1296 is 1280
9999 mem: storing 1280 in location 1262
9999 mem: incrementing refcount of 1280: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9999 mem: storing 3 in location 1263
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 0
9999 mem: location 1263 is 3
9999 mem: storing 0 in location 1264
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9998 run: base address is 1281
9999 mem: location 1261 is 0
9998 run: address to copy is 1282
9998 run: its type is event
9999 mem: location 1282 is 0
9999 mem: location 1283 is 48
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 48 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1261 is 0
9999 mem: storing 1 in location 1261
 104 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1280
9999 mem: location 1261 is 1
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1295
9999 mem: storing 1 in location 1295
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 48
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1260 is 1294
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1305
9999 mem: storing 48 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1294: 2 -> 1
9999 mem: storing 1294 in location 1301
9999 mem: incrementing refcount of 1294: 1 -> 2
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1305 is 0
9999 mem: location 1306 is 48
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1311
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1300 is 1008
9999 mem: location 1302 is 1141
9999 mem: location 1305 is 0
9999 mem: location 1306 is 48
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1313
9999 mem: storing 85 in location 1314
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 65 -> 66
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 7 -> 8
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1318
9999 mem: storing 48 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1317 is 1141
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
9990 schedule: screen-width/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-typing-multiple-2
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1189
 105 run: return {width: "number"}
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1323
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 105 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1324
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1325
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1326
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1327
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1328
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1329
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1330
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1331
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 48
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 1319 in location 1332
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1332 is 1319
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1333
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1344
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1349
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1365
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1366
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1371
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1372
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1373
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1374
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1378
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 0 in location 1382
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: storing 1 in location 1385
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1367
9999 mem: incrementing refcount of 1160: 10 -> 11
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1160
9999 mem: storing 1160 in location 1379
9999 mem: incrementing refcount of 1160: 11 -> 12
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1317 is 1141
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 48
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1400
9999 mem: storing 31 in location 1401
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1403
9999 mem: incrementing refcount of 1141: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1404
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1405
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1406
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1404 is 48
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1160
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1174
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1177
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1178
9999 mem: incrementing refcount of 1160: 12 -> 13
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1433
9999 mem: storing 1433 in location 1179
9999 mem: incrementing refcount of 1433: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1179 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1177 is 48
9999 mem: location 1179 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy to is 1434
9999 mem: storing 48 in location 1434
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1180
9999 mem: incrementing refcount of 1181: 11 -> 12
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1179 is 1433
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1162
9999 mem: storing 1433 in location 1162
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1178 is 1160
9999 mem: location 1179 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy to is 1436
9999 mem: storing 1160 in location 1436
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 0
9999 mem: location 1436 is 1160
9999 mem: location 1180 is 1181
9999 mem: location 1179 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy to is 1435
9999 mem: storing 1181 in location 1435
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1181
9998 run: jumping to instruction 11
 106 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1179 is 1433
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1433 in location 1184
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1178 is 1160
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1160
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1433
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1433
9999 mem: storing 1433 in location 1189
9999 mem: incrementing refcount of 1433: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1433
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1433
9999 mem: location 1406 is 1145
9999 mem: decrementing refcount of 1160: 14 -> 13
9999 mem: storing 1433 in location 1145
9999 mem: incrementing refcount of 1433: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1407
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1408
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1409
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1407 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1412
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1189
 106 run: return {width: "number"}
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1413
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 106 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1414
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1410 is 9
9999 mem: storing 8 in location 1415
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1415 is 8
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1408 is 1150
9999 mem: storing 1 in location 1150
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1433
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1188
9999 mem: incrementing refcount of 1433: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1433
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1181
9999 mem: location 1436 is 1160
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1435
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1435 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1423
9999 mem: incrementing refcount of 1181: 13 -> 14
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1423 is 1181
9999 mem: storing 0 in location 1424
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1181
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 1
9999 mem: location 1413 is 10
9999 mem: storing 0 in location 1427
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1433
9999 mem: storing 1433 in location 1429
9999 mem: incrementing refcount of 1433: 4 -> 5
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1405 is 1008
9999 mem: location 1411 is 1
9999 mem: location 1412 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 71 -> 72
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1430
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 0
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1433
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1181
9999 mem: location 1436 is 1160
9999 mem: location 1429 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1434
9998 run: its type is "character"
9999 mem: location 1434 is 48
9999 mem: storing 48 in location 1431
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 48
9999 mem: storing 0 in location 1432
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 48
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 72 -> 73
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 48
  90 print-character: 48 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 48
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 0
9999 mem: storing 10 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 48
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 10
9999 mem: storing 1036 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 48
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1036
9999 mem: location 1254 is 1036
9999 mem: storing 48 in location 1036
9999 mem: storing 7 in location 1037
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 0
9999 mem: storing 1 in location 1430
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1433
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1188
9999 mem: incrementing refcount of 1433: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1433
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1181
9999 mem: location 1436 is 1160
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1435
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1435 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1433: 6 -> 5
9999 mem: storing 1181 in location 1429
9999 mem: incrementing refcount of 1181: 15 -> 16
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 1
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1181
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1433
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1431
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 97
9999 mem: storing 0 in location 1432
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 73 -> 74
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1
9999 mem: storing 11 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 11
9999 mem: storing 1038 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1038
9999 mem: location 1254 is 1038
9999 mem: storing 97 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 1
9999 mem: storing 2 in location 1430
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1181
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
9999 mem: incrementing refcount of 1181: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1433
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1189
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 17 -> 16
9999 mem: storing 0 in location 1429
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 2
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 77
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1403 is 1141
9999 mem: location 1405 is 1008
9999 mem: location 1422 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1141: 9 -> 8
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 8 -> 9
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 73 -> 74
9999 mem: storing 0 in location 1322
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1369
9999 mem: incrementing refcount of 1160: 13 -> 14
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1336
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 0
9998 run: jumping to instruction 429
 104 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1188
9999 mem: incrementing refcount of 1160: 14 -> 15
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1433
9999 mem: location 1163 is 0
9999 mem: location 1188 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1433
9999 mem: storing 1433 in location 1189
9999 mem: incrementing refcount of 1433: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1433
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1433
9999 mem: storing 1433 in location 1343
9999 mem: incrementing refcount of 1433: 6 -> 7
 104 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1433
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1188
9999 mem: incrementing refcount of 1433: 7 -> 8
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1433
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1181
9999 mem: location 1436 is 1160
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1435
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1435 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 16 -> 17
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1381
9999 mem: incrementing refcount of 1181: 17 -> 18
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1220
9999 mem: storing 1220 in location 1335
9999 mem: incrementing refcount of 1220: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1330 is 1
9999 mem: location 1331 is 0
9999 mem: location 1367 is 1160
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 1
9999 mem: location 1369 is 1160
9999 mem: location 1343 is 1433
9999 mem: location 1381 is 1181
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 1 in location 1222
9999 mem: storing 0 in location 1223
9999 mem: storing 1160 in location 1224
9999 mem: storing 1 in location 1225
9999 mem: storing 1 in location 1226
9999 mem: storing 1160 in location 1227
9999 mem: storing 1433 in location 1228
9999 mem: storing 1181 in location 1229
9999 mem: storing 1 in location 1230
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1317 is 1141
9999 mem: location 1335 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1174
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1177
9999 mem: incrementing refcount of 1141: 9 -> 10
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1178
9999 mem: incrementing refcount of 1220: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1179
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1178 is 1220
9999 mem: location 1179 is 1152
9999 mem: location 1152 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1157
9999 mem: incrementing refcount of 1220: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1437
9999 mem: storing 1437 in location 1159
9999 mem: incrementing refcount of 1437: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1157 is 1220
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1437
9999 mem: skipping refcount at 1437
9999 mem: location 1159 is 1437
9999 mem: skipping refcount at 1437
9999 mem: storing 1220 in location 1438
9999 mem: storing 0 in location 1439
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1159 is 1437
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1437
9999 mem: location 1179 is 1152
9999 mem: storing 1437 in location 1152
9999 mem: incrementing refcount of 1437: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1180
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1180 is 1153
9999 mem: storing 0 in location 1153
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1177 is 1141
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1141: 10 -> 9
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 9 -> 10
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1316 is 1008
9999 mem: location 1317 is 1141
9999 mem: location 1322 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1141
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 73 -> 74
9999 mem: decrementing refcount of 1141: 10 -> 9
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 9 -> 10
9999 mem: storing 0 in location 1312
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1304
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 74 -> 75
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1159
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 74 -> 75
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1294
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1260
9999 mem: incrementing refcount of 1294: 2 -> 3
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1294
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 1
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "number"
9999 mem: location 1295 is 1
9999 mem: storing 1 in location 1261
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 1
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1296 is 1280
9999 mem: storing 1280 in location 1262
9999 mem: incrementing refcount of 1280: 2 -> 3
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9999 mem: storing 3 in location 1263
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 3
9999 mem: storing 0 in location 1264
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9998 run: base address is 1281
9999 mem: location 1261 is 1
9998 run: address to copy is 1286
9998 run: its type is event
9999 mem: location 1286 is 0
9999 mem: location 1287 is 49
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 49 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1261 is 1
9999 mem: storing 2 in location 1261
 104 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 1
9999 mem: location 1296 is 1280
9999 mem: location 1261 is 2
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1295
9999 mem: storing 2 in location 1295
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 49
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1260 is 1294
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 49, 0, 0]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1305
9999 mem: storing 49 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1294: 3 -> 2
9999 mem: storing 1294 in location 1301
9999 mem: incrementing refcount of 1294: 2 -> 3
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1305 is 0
9999 mem: location 1306 is 49
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1311
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1300 is 1008
9999 mem: location 1302 is 1141
9999 mem: location 1305 is 0
9999 mem: location 1306 is 49
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1313
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 10 -> 11
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1318
9999 mem: storing 49 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1317 is 1141
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1189
 105 run: return {width: "number"}
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1323
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 105 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1324
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1325
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1326
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1327
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1328
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1329
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1330
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1331
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 49
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 1319 in location 1332
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1332 is 1319
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1333
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1344
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1349
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1365
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1366
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1371
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1372
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1373
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1374
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1378
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 0 in location 1382
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: storing 1 in location 1385
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1367
9999 mem: incrementing refcount of 1160: 15 -> 16
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1433
9999 mem: storing 1433 in location 1379
9999 mem: incrementing refcount of 1433: 8 -> 9
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1317 is 1141
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 49
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1400
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1403
9999 mem: incrementing refcount of 1141: 11 -> 12
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1404
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1405
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1433
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1406
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1404 is 49
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1433
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1174
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1177
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1178
9999 mem: incrementing refcount of 1433: 9 -> 10
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1440
9999 mem: storing 1440 in location 1179
9999 mem: incrementing refcount of 1440: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1179 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: location 1177 is 49
9999 mem: location 1179 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy to is 1441
9999 mem: storing 49 in location 1441
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1178 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1181
9999 mem: location 1436 is 1160
9999 mem: location 1178 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1435
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1435 is 1181
9999 mem: storing 1181 in location 1180
9999 mem: incrementing refcount of 1181: 18 -> 19
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1178 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1181
9999 mem: location 1436 is 1160
9999 mem: location 1179 is 1440
9999 mem: location 1178 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy to is 1435
9999 mem: storing 1440 in location 1435
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: location 1178 is 1433
9999 mem: location 1179 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy to is 1443
9999 mem: storing 1433 in location 1443
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 0
9999 mem: location 1443 is 1433
9999 mem: location 1180 is 1181
9999 mem: location 1179 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy to is 1442
9999 mem: storing 1181 in location 1442
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1181
9998 run: jumping to instruction 11
 106 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1433
9999 mem: location 1179 is 1440
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1440 in location 1184
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1178 is 1433
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1433
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1188
9999 mem: incrementing refcount of 1433: 10 -> 11
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1433
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1440
9999 mem: location 1436 is 1160
9999 mem: location 1188 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1435
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1435 is 1440
9999 mem: storing 1440 in location 1189
9999 mem: incrementing refcount of 1440: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1440
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1440
9999 mem: location 1406 is 1145
9999 mem: decrementing refcount of 1433: 11 -> 10
9999 mem: storing 1440 in location 1145
9999 mem: incrementing refcount of 1440: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1407
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1408
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1409
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1407 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1412
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1189
 106 run: return {width: "number"}
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1413
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 106 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1414
9990 schedule: insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-typing-multiple-2
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1410 is 9
9999 mem: storing 8 in location 1415
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 1
9999 mem: location 1415 is 8
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 1
9999 mem: location 1408 is 1150
9999 mem: storing 2 in location 1150
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1440
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1188
9999 mem: incrementing refcount of 1440: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1440
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1181
9999 mem: location 1443 is 1433
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1442
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1442 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 19 -> 20
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1423
9999 mem: incrementing refcount of 1181: 20 -> 21
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1423 is 1181
9999 mem: storing 0 in location 1424
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1181
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 2
9999 mem: location 1413 is 10
9999 mem: storing 0 in location 1427
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1440
9999 mem: storing 1440 in location 1429
9999 mem: incrementing refcount of 1440: 4 -> 5
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1405 is 1008
9999 mem: location 1411 is 1
9999 mem: location 1412 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1159
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1412 is 1
9999 mem: storing 1 in location 1430
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 1
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1440
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1181
9999 mem: location 1443 is 1433
9999 mem: location 1429 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1441
9998 run: its type is "character"
9999 mem: location 1441 is 49
9999 mem: storing 49 in location 1431
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 49
9999 mem: storing 0 in location 1432
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 49
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 49
  90 print-character: 49 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 49
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1
9999 mem: storing 11 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 45 -> 46
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 49
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 11
9999 mem: storing 1038 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 49
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1038
9999 mem: location 1254 is 1038
9999 mem: storing 49 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 1
9999 mem: storing 2 in location 1430
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1440
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1188
9999 mem: incrementing refcount of 1440: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1440
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1181
9999 mem: location 1443 is 1433
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1442
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1442 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 21 -> 22
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1440: 6 -> 5
9999 mem: storing 1181 in location 1429
9999 mem: incrementing refcount of 1181: 22 -> 23
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 2
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1181
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1440
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1431
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 97
9999 mem: storing 0 in location 1432
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 2
9999 mem: storing 12 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 46 -> 47
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 12
9999 mem: storing 1040 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1040
9999 mem: location 1254 is 1040
9999 mem: storing 97 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 2
9999 mem: storing 3 in location 1430
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1181
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
9999 mem: incrementing refcount of 1181: 23 -> 24
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1440
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1189
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 24 -> 23
9999 mem: storing 0 in location 1429
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 3
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 77
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1403 is 1141
9999 mem: location 1405 is 1008
9999 mem: location 1422 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1141: 12 -> 11
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 11 -> 12
9999 mem: decrementing refcount of 1008: 84 -> 83
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: storing 0 in location 1322
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1369
9999 mem: incrementing refcount of 1160: 16 -> 17
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1336
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1188
9999 mem: incrementing refcount of 1437: 2 -> 3
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1188 is 1437
9999 mem: skipping refcount at 1437
9999 mem: location 1438 is 1220
9999 mem: location 1439 is 0
9999 mem: location 1188 is 1437
9999 mem: skipping refcount at 1437
9998 run: address to copy is 1438
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1438 is 1220
9999 mem: storing 1220 in location 1189
9999 mem: incrementing refcount of 1220: 3 -> 4
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1189 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: storing 1220 in location 1335
9999 mem: incrementing refcount of 1220: 4 -> 5
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1231 is 0
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 1222 in location 1342
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1342 is 1222
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1230
9998 run: its type is "number"
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1359
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1359 is 1
9998 run: jump-unless fell through
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1380
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1440
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1188
9999 mem: incrementing refcount of 1440: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1440
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1181
9999 mem: location 1443 is 1433
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1442
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1442 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 23 -> 24
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: location 1380 is 1229
9999 mem: decrementing refcount of 1181: 24 -> 23
9999 mem: storing 1181 in location 1229
9999 mem: incrementing refcount of 1181: 23 -> 24
 104 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1225
9999 mem: storing 1225 in location 1361
 104 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1361 is 1225
9999 mem: storing 1 in location 1225
 104 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1226
9999 mem: storing 1226 in location 1362
 104 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 2
9999 mem: location 1362 is 1226
9999 mem: storing 2 in location 1226
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 2
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1227
9999 mem: storing 1227 in location 1363
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: location 1363 is 1227
9999 mem: decrementing refcount of 1160: 17 -> 16
9999 mem: storing 1160 in location 1227
9999 mem: incrementing refcount of 1160: 16 -> 17
 104 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1316 is 1008
9999 mem: location 1317 is 1141
9999 mem: location 1322 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1141
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 84 -> 83
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: decrementing refcount of 1141: 12 -> 11
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 11 -> 12
9999 mem: storing 0 in location 1312
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 2
9999 mem: storing 2 in location 1304
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 2
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 84 -> 85
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1159
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 2
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 85 -> 84
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 84 -> 85
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1294
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1260
9999 mem: incrementing refcount of 1294: 3 -> 4
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1294
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 2
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "number"
9999 mem: location 1295 is 2
9999 mem: storing 2 in location 1261
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 2
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1296 is 1280
9999 mem: storing 1280 in location 1262
9999 mem: incrementing refcount of 1280: 3 -> 4
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9999 mem: storing 3 in location 1263
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 2
9999 mem: location 1263 is 3
9999 mem: storing 0 in location 1264
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9998 run: base address is 1281
9999 mem: location 1261 is 2
9998 run: address to copy is 1290
9998 run: its type is event
9999 mem: location 1290 is 0
9999 mem: location 1291 is 50
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 50 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1261 is 2
9999 mem: storing 3 in location 1261
 104 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 2
9999 mem: location 1296 is 1280
9999 mem: location 1261 is 3
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1295
9999 mem: storing 3 in location 1295
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 50
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1260 is 1294
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 50, 0, 0]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1305
9999 mem: storing 50 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1294: 4 -> 3
9999 mem: storing 1294 in location 1301
9999 mem: incrementing refcount of 1294: 3 -> 4
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1305 is 0
9999 mem: location 1306 is 50
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1311
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1300 is 1008
9999 mem: location 1302 is 1141
9999 mem: location 1305 is 0
9999 mem: location 1306 is 50
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1313
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 85 -> 86
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 12 -> 13
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1318
9999 mem: storing 50 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1317 is 1141
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1189
 105 run: return {width: "number"}
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1323
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 105 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1324
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1325
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1326
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1327
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1328
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1329
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1330
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 2
9999 mem: storing 2 in location 1331
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 50
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 1319 in location 1332
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1332 is 1319
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1333
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1344
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1349
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1365
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1366
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1371
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1372
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1373
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1374
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1378
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 0 in location 1382
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: storing 1 in location 1385
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1367
9999 mem: incrementing refcount of 1160: 17 -> 18
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1440
9999 mem: storing 1440 in location 1379
9999 mem: incrementing refcount of 1440: 6 -> 7
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1317 is 1141
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 50
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1400
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1403
9999 mem: incrementing refcount of 1141: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1404
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1405
9999 mem: incrementing refcount of 1008: 88 -> 89
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1440
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1406
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1404 is 50
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1440
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1174
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1177
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1178
9999 mem: incrementing refcount of 1440: 7 -> 8
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1444
9999 mem: storing 1444 in location 1179
9999 mem: incrementing refcount of 1444: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1179 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 0
9999 mem: location 1446 is 0
9999 mem: location 1447 is 0
9999 mem: location 1177 is 50
9999 mem: location 1179 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy to is 1445
9999 mem: storing 50 in location 1445
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1178 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1181
9999 mem: location 1443 is 1433
9999 mem: location 1178 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1442
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1442 is 1181
9999 mem: storing 1181 in location 1180
9999 mem: incrementing refcount of 1181: 24 -> 25
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1178 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1181
9999 mem: location 1443 is 1433
9999 mem: location 1179 is 1444
9999 mem: location 1178 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy to is 1442
9999 mem: storing 1444 in location 1442
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 0
9999 mem: location 1447 is 0
9999 mem: location 1178 is 1440
9999 mem: location 1179 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy to is 1447
9999 mem: storing 1440 in location 1447
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 0
9999 mem: location 1447 is 1440
9999 mem: location 1180 is 1181
9999 mem: location 1179 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy to is 1446
9999 mem: storing 1181 in location 1446
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1181
9998 run: jumping to instruction 11
 106 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1440
9999 mem: location 1179 is 1444
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1444 in location 1184
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1178 is 1440
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1440
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1188
9999 mem: incrementing refcount of 1440: 8 -> 9
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1440
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9999 mem: location 1441 is 49
9999 mem: location 1442 is 1444
9999 mem: location 1443 is 1433
9999 mem: location 1188 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1442
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1442 is 1444
9999 mem: storing 1444 in location 1189
9999 mem: incrementing refcount of 1444: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1444
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1444
9999 mem: location 1406 is 1145
9999 mem: decrementing refcount of 1440: 9 -> 8
9999 mem: storing 1444 in location 1145
9999 mem: incrementing refcount of 1444: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1407
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1408
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1409
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 2
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1407 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 2
9999 mem: storing 2 in location 1412
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1189
 106 run: return {width: "number"}
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1413
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1188
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1188 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1189
 106 run: return {height: "number"}
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1414
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1410 is 9
9999 mem: storing 8 in location 1415
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 2
9999 mem: location 1415 is 8
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 2
9999 mem: location 1408 is 1150
9999 mem: storing 3 in location 1150
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1444
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1444 in location 1188
9999 mem: incrementing refcount of 1444: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1444
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 1181
9999 mem: location 1447 is 1440
9999 mem: location 1188 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy is 1446
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1446 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 25 -> 26
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1423
9999 mem: incrementing refcount of 1181: 26 -> 27
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1423 is 1181
9999 mem: storing 0 in location 1424
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1181
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 3
9999 mem: location 1413 is 10
9999 mem: storing 0 in location 1427
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1444
9999 mem: storing 1444 in location 1429
9999 mem: incrementing refcount of 1444: 4 -> 5
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1405 is 1008
9999 mem: location 1411 is 1
9999 mem: location 1412 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 91 -> 92
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1159
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 2
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1412 is 2
9999 mem: storing 2 in location 1430
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 2
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1444
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 1181
9999 mem: location 1447 is 1440
9999 mem: location 1429 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy is 1445
9998 run: its type is "character"
9999 mem: location 1445 is 50
9999 mem: storing 50 in location 1431
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 50
9999 mem: storing 0 in location 1432
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 50
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 92 -> 93
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 50
  90 print-character: 50 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 50
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 2
9999 mem: storing 12 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 47 -> 48
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 50
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 12
9999 mem: storing 1040 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 50
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1040
9999 mem: location 1254 is 1040
9999 mem: storing 50 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 2
9999 mem: storing 3 in location 1430
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1444
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1444 in location 1188
9999 mem: incrementing refcount of 1444: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1444
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 1181
9999 mem: location 1447 is 1440
9999 mem: location 1188 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy is 1446
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1446 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 27 -> 28
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1444: 6 -> 5
9999 mem: storing 1181 in location 1429
9999 mem: incrementing refcount of 1181: 28 -> 29
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 3
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1181
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1444
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1431
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 97
9999 mem: storing 0 in location 1432
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-typing-multiple-2
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 3
9999 mem: storing 13 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 48 -> 49
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 13
9999 mem: storing 1042 in location 1254
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1042
9999 mem: location 1254 is 1042
9999 mem: storing 97 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 3
9999 mem: storing 4 in location 1430
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1181
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
9999 mem: incrementing refcount of 1181: 29 -> 30
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1444
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1189
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 30 -> 29
9999 mem: storing 0 in location 1429
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 4
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 77
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1403 is 1141
9999 mem: location 1405 is 1008
9999 mem: location 1422 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1141: 14 -> 13
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 13 -> 14
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 93 -> 94
9999 mem: storing 0 in location 1322
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1369
9999 mem: incrementing refcount of 1160: 18 -> 19
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1336
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1188
9999 mem: incrementing refcount of 1437: 3 -> 4
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1188 is 1437
9999 mem: skipping refcount at 1437
9999 mem: location 1438 is 1220
9999 mem: location 1439 is 0
9999 mem: location 1188 is 1437
9999 mem: skipping refcount at 1437
9998 run: address to copy is 1438
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1438 is 1220
9999 mem: storing 1220 in location 1189
9999 mem: incrementing refcount of 1220: 5 -> 6
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1189 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: storing 1220 in location 1335
9999 mem: incrementing refcount of 1220: 6 -> 7
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 2
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1231 is 0
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 1222 in location 1342
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1342 is 1222
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 2
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1230
9998 run: its type is "number"
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1359
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1359 is 1
9998 run: jump-unless fell through
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 2
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1380
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1444
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1444 in location 1188
9999 mem: incrementing refcount of 1444: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1444
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 1181
9999 mem: location 1447 is 1440
9999 mem: location 1188 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy is 1446
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1446 is 1181
9999 mem: storing 1181 in location 1189
9999 mem: incrementing refcount of 1181: 29 -> 30
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: location 1380 is 1229
9999 mem: decrementing refcount of 1181: 30 -> 29
9999 mem: storing 1181 in location 1229
9999 mem: incrementing refcount of 1181: 29 -> 30
 104 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 2
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1225
9999 mem: storing 1225 in location 1361
 104 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1361 is 1225
9999 mem: storing 1 in location 1225
 104 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 2
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1226
9999 mem: storing 1226 in location 1362
 104 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 3
9999 mem: location 1362 is 1226
9999 mem: storing 3 in location 1226
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1227
9999 mem: storing 1227 in location 1363
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: location 1363 is 1227
9999 mem: decrementing refcount of 1160: 19 -> 18
9999 mem: storing 1160 in location 1227
9999 mem: incrementing refcount of 1160: 18 -> 19
 104 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1316 is 1008
9999 mem: location 1317 is 1141
9999 mem: location 1322 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1141
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 93 -> 94
9999 mem: decrementing refcount of 1141: 14 -> 13
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 13 -> 14
9999 mem: storing 0 in location 1312
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 3
9999 mem: storing 3 in location 1304
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 3
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 94 -> 95
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1159
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 3
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 94 -> 95
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1294
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1260
9999 mem: incrementing refcount of 1294: 4 -> 5
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1294
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 3
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "number"
9999 mem: location 1295 is 3
9999 mem: storing 3 in location 1261
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 3
9999 mem: location 1296 is 1280
9999 mem: location 1260 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1296 is 1280
9999 mem: storing 1280 in location 1262
9999 mem: incrementing refcount of 1280: 4 -> 5
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1280
9999 mem: skipping refcount at 1280
9999 mem: storing 3 in location 1263
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 3
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1185
9999 mem: storing 1185 in location 1265
9999 mem: incrementing refcount of 1185: 0 -> 1
 104 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1265 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1260 is 1294
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1294: 5 -> 4
9999 mem: storing 1294 in location 1301
9999 mem: incrementing refcount of 1294: 4 -> 5
9999 mem: storing 1 in location 1309
9999 mem: storing 1 in location 1310
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1300 is 1008
9999 mem: location 1301 is 1294
9999 mem: location 1302 is 1141
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .012a      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1450
9999 mem: storing console in 1454
9999 mem: storing console data in 1456
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1454
9999 mem: location 2 is 1141
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1297
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 95 -> 96
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1454 in location 1301
9999 mem: incrementing refcount of 1454: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 14 -> 15
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 3
9999 mem: storing 3 in location 1304
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 3
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1454
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1454 in location 1260
9999 mem: incrementing refcount of 1454: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1454
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1448
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9998 run: address to copy is 1455
9998 run: its type is "number"
9999 mem: location 1455 is 0
9999 mem: storing 0 in location 1261
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1448
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9998 run: address to copy is 1456
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1456 is 1448
9999 mem: storing 1448 in location 1262
9999 mem: incrementing refcount of 1448: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1448
9999 mem: skipping refcount at 1448
9999 mem: storing 1 in location 1263
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 0
9999 mem: location 1263 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1262 is 1448
9999 mem: skipping refcount at 1448
9998 run: base address is 1449
9999 mem: location 1261 is 0
9998 run: address to copy is 1450
9998 run: its type is event
9999 mem: location 1450 is 0
9999 mem: location 1451 is 26
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 26 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1261 is 0
9999 mem: storing 1 in location 1261
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1448
9999 mem: location 1261 is 1
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9998 run: address to copy to is 1455
9999 mem: storing 1 in location 1455
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 26
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1260 is 1454
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1454
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1305
9999 mem: storing 26 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1454: 2 -> 1
9999 mem: storing 1454 in location 1301
9999 mem: incrementing refcount of 1454: 1 -> 2
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1305 is 0
9999 mem: location 1306 is 26
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1311
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1300 is 1008
9999 mem: location 1302 is 1141
9999 mem: location 1305 is 0
9999 mem: location 1306 is 26
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1313
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 97 -> 98
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 15 -> 16
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1318
9999 mem: storing 26 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1317 is 1141
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1457
9999 mem: storing 3 in location 1458
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1460
9999 mem: incrementing refcount of 1008: 98 -> 99
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1460 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1461
 106 run: return {width: "number"}
9999 mem: location 1461 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1323
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1460
9999 mem: incrementing refcount of 1008: 99 -> 100
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1460 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1461
 106 run: return {height: "number"}
9999 mem: location 1461 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1324
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1325
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1326
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1327
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1328
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1329
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1330
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 3
9999 mem: storing 3 in location 1331
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 26
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 1319 in location 1332
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1332 is 1319
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 26
9999 mem: storing 0 in location 1333
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 26
9999 mem: storing 1 in location 1344
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1437
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1336
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1460
9999 mem: incrementing refcount of 1437: 4 -> 5
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1460 is 1437
9999 mem: skipping refcount at 1437
9999 mem: location 1438 is 1220
9999 mem: location 1439 is 0
9999 mem: location 1460 is 1437
9999 mem: skipping refcount at 1437
9998 run: address to copy is 1438
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1438 is 1220
9999 mem: storing 1220 in location 1461
9999 mem: incrementing refcount of 1220: 7 -> 8
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1461 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1220
9999 mem: storing 1220 in location 1335
9999 mem: incrementing refcount of 1220: 8 -> 9
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 1437
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1460
9999 mem: incrementing refcount of 1437: 5 -> 6
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1460 is 1437
9999 mem: skipping refcount at 1437
9999 mem: location 1438 is 1220
9999 mem: location 1439 is 0
9999 mem: location 1460 is 1437
9999 mem: skipping refcount at 1437
9998 run: address to copy is 1439
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1439 is 0
9999 mem: storing 0 in location 1461
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1461 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1336 is 1152
9999 mem: decrementing refcount of 1437: 6 -> 5
9999 mem: storing 0 in location 1152
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1444
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 3
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1334
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1335 is 1220
9999 mem: location 1334 is 1153
9999 mem: location 1153 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1157
9999 mem: incrementing refcount of 1220: 9 -> 10
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1462
9999 mem: storing 1462 in location 1159
9999 mem: incrementing refcount of 1462: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1157 is 1220
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1462
9999 mem: skipping refcount at 1462
9999 mem: location 1159 is 1462
9999 mem: skipping refcount at 1462
9999 mem: storing 1220 in location 1463
9999 mem: storing 0 in location 1464
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1159 is 1462
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1462
9999 mem: location 1334 is 1153
9999 mem: storing 1462 in location 1153
9999 mem: incrementing refcount of 1462: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1231 is 0
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 0 in location 1337
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 86
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1231 is 0
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 0 in location 1341
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 94
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1231 is 0
9999 mem: location 1335 is 1220
9999 mem: skipping refcount at 1220
9999 mem: storing 1222 in location 1342
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1342 is 1222
9998 run: jump-unless fell through
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-from: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1433
9999 mem: storing 1433 in location 1338
9999 mem: incrementing refcount of 1433: 10 -> 11
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1181
9999 mem: storing 1181 in location 1339
9999 mem: incrementing refcount of 1181: 30 -> 31
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1338 is 1433
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1433 in location 1460
9999 mem: incrementing refcount of 1433: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1460 is 1433
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1460 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1440
9999 mem: location 1436 is 1160
9999 mem: location 1460 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1160
9999 mem: storing 1160 in location 1461
9999 mem: incrementing refcount of 1160: 19 -> 20
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1461 is 1160
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1160
9999 mem: location 1327 is 1145
9999 mem: decrementing refcount of 1444: 6 -> 5
9999 mem: storing 1160 in location 1145
9999 mem: incrementing refcount of 1160: 20 -> 21
 105 run: remove-between_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1160
9999 mem: location 1339 is 1181
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1003
9999 mem: incrementing refcount of 1160: 21 -> 22
 106 run: {end: ("address" "shared" "duplex-list" "character"), "contained-in": "start"} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1004
9999 mem: incrementing refcount of 1181: 31 -> 32
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1003 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1433
9999 mem: location 1163 is 0
9999 mem: location 1003 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1433
9999 mem: storing 1433 in location 1005
9999 mem: incrementing refcount of 1433: 12 -> 13
 106 run: {nothing-to-delete?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1433
9999 mem: location 1004 is 1181
9999 mem: storing 0 in location 1006
 106 run: jump-unless {nothing-to-delete?: "boolean"}, {1: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 7
 106 run: assert {next: ("address" "shared" "duplex-list" "character")}, {"malformed duplex list": "literal-string"}
9999 mem: location 1005 is 1433
 106 run: {next: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1005 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 48
9999 mem: location 1435 is 1440
9999 mem: location 1436 is 1160
9999 mem: location 1005 is 1433
9999 mem: skipping refcount at 1433
9998 run: address to copy to is 1436
9999 mem: storing 0 in location 1436
 106 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1433
9999 mem: location 1163 is 0
9999 mem: location 1004 is 1181
9999 mem: location 1003 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1162
9999 mem: storing 1181 in location 1162
 106 run: jump-if {end: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1004 is 1181
9998 run: jumping to instruction 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- get {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1004 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1444
9999 mem: location 1004 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1184
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1184 is 1444
9999 mem: storing 1444 in location 1007
9999 mem: incrementing refcount of 1444: 5 -> 6
 106 run: assert {prev: ("address" "shared" "duplex-list" "character")}, {"malformed duplex list - 2": "literal-string"}
9999 mem: location 1007 is 1444
 106 run: {prev: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {prev: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {0: "literal"}
9999 mem: location 1007 is 1444
9999 mem: skipping refcount at 1444
9999 mem: location 1445 is 50
9999 mem: location 1446 is 1181
9999 mem: location 1447 is 1440
9999 mem: location 1007 is 1444
9999 mem: skipping refcount at 1444
9998 run: address to copy to is 1446
9999 mem: storing 0 in location 1446
 106 run: {end: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1004 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1444
9999 mem: location 1003 is 1160
9999 mem: location 1004 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1160 in location 1184
 106 run: reply {start: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1160
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1222
9998 run: its type is "number"
9999 mem: location 1222 is 1
9999 mem: location 1328 is 1149
9999 mem: storing 1 in location 1149
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1223
9998 run: its type is "number"
9999 mem: location 1223 is 0
9999 mem: location 1329 is 1150
9999 mem: storing 0 in location 1150
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1340
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1342 is 1222
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1160
9999 mem: location 1225 is 1
9999 mem: location 1226 is 3
9999 mem: location 1227 is 1160
9999 mem: location 1228 is 1433
9999 mem: location 1229 is 1181
9999 mem: location 1230 is 1
9999 mem: location 1342 is 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1160
9999 mem: location 1340 is 1143
9999 mem: decrementing refcount of 1160: 22 -> 21
9999 mem: storing 1160 in location 1143
9999 mem: incrementing refcount of 1160: 21 -> 22
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1316 is 1008
9999 mem: location 1317 is 1141
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1141
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 99 -> 100
9999 mem: decrementing refcount of 1141: 16 -> 15
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 15 -> 16
9999 mem: storing 1 in location 1312
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1300 is 1008
9999 mem: location 1302 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 100 -> 101
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1120
9999 mem: incrementing refcount of 1141: 16 -> 17
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1120 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1141
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1190
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1194
9999 mem: incrementing refcount of 1141: 17 -> 18
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1194 is 1141
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1195
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1193 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1460
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1460 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1461
 107 run: return {height: "number"}
9999 mem: location 1461 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1196
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1197
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1198
9999 mem: incrementing refcount of 1160: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1160
9999 mem: storing 1160 in location 1199
9999 mem: incrementing refcount of 1160: 23 -> 24
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1160
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1460
9999 mem: incrementing refcount of 1160: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1460 is 1160
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1460 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1460 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1461
9999 mem: incrementing refcount of 1181: 32 -> 33
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1461 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 25 -> 24
9999 mem: storing 1181 in location 1198
9999 mem: incrementing refcount of 1181: 33 -> 34
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1200
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1201
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1202
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1203
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1205
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1193 is 1008
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1198 is 1181
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1201 is 1
9999 mem: location 1196 is 5
9999 mem: storing 0 in location 1206
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1206 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1207
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1202 is 0
9999 mem: location 1204 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1208
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1160
9999 mem: location 1205 is 1145
9999 mem: decrementing refcount of 1160: 24 -> 23
9999 mem: storing 1160 in location 1145
9999 mem: incrementing refcount of 1160: 23 -> 24
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1198 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1198 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1209
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1200 is 7
9999 mem: location 1209 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1465
9999 mem: storing 10 in location 1466
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1468
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1469
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1469 is 97
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1469 is 97
9999 mem: storing 0 in location 1474
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1468 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1200
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1210
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1202 is 0
9999 mem: location 1197 is 9
9999 mem: storing 0 in location 1212
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1193 is 1008
9999 mem: location 1209 is 97
9999 mem: location 1200 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 0
9999 mem: storing 10 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 10
9999 mem: storing 1036 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1036
9999 mem: location 1254 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1460
9999 mem: incrementing refcount of 1181: 34 -> 35
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1460 is 1181
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1460 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1460 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1461
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1461 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 35 -> 34
9999 mem: storing 0 in location 1198
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1160
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1460
9999 mem: incrementing refcount of 1160: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1460 is 1160
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1460 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1460 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1461
9999 mem: incrementing refcount of 1181: 34 -> 35
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1461 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1160: 25 -> 24
9999 mem: storing 1181 in location 1199
9999 mem: incrementing refcount of 1181: 35 -> 36
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1202 is 0
9999 mem: storing 1 in location 1202
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1198 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1214
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 0
9999 mem: location 1214 is 1144
9999 mem: storing 0 in location 1144
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1207
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1215
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1207 is 1
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1216
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1201 is 1
9999 mem: location 1203 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1217
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1218
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1218 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1194 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1219
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1201 is 1
9999 mem: location 1219 is 1148
9999 mem: storing 1 in location 1148
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1201 is 1
9999 mem: location 1202 is 1
9999 mem: location 1193 is 1008
9999 mem: location 1194 is 1141
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1123
9999 mem: storing 1 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 1
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1164
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1168
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1169
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1170
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1171
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 1
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1
9999 mem: storing 11 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 11
9999 mem: storing 1038 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1038
9999 mem: location 1254 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 1
9999 mem: storing 2 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 2
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 2
9999 mem: storing 12 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 12
9999 mem: storing 1040 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1040
9999 mem: location 1254 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 2
9999 mem: storing 3 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 3
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 3
9999 mem: storing 13 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 13
9999 mem: storing 1042 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1042
9999 mem: location 1254 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 108 -> 109
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 3
9999 mem: storing 4 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 4
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 4
9999 mem: storing 14 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 14
9999 mem: storing 1044 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1044
9999 mem: location 1254 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 109 -> 110
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 4
9999 mem: storing 5 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 5
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 5
9999 mem: storing 15 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 15
9999 mem: storing 1046 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1046
9999 mem: location 1254 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 110 -> 111
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 5
9999 mem: storing 6 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 6
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 6
9999 mem: storing 16 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 16
9999 mem: storing 1048 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1048
9999 mem: location 1254 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 111 -> 112
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 6
9999 mem: storing 7 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 7
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 7
9999 mem: storing 17 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 17
9999 mem: storing 1050 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1050
9999 mem: location 1254 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 7
9999 mem: storing 8 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 8
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 8
9999 mem: storing 18 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 18
9999 mem: storing 1052 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1052
9999 mem: location 1254 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 113 -> 114
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 8
9999 mem: storing 9 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 9
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 9
9999 mem: storing 19 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 19
9999 mem: storing 1054 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1054
9999 mem: location 1254 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 115 -> 114
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 114 -> 115
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 9
9999 mem: storing 10 in location 1168
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 10
9999 mem: location 1169 is 9
9999 mem: storing 1 in location 1173
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1167 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1261
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1266
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1268
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 2
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1158
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 2
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 116 -> 117
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 0
9999 mem: storing 20 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 20
9999 mem: storing 1056 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1056
9999 mem: location 1254 is 1056
9999 mem: storing 9480 in location 1056
9999 mem: storing 245 in location 1057
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 0
9999 mem: storing 1 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 1
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1
9999 mem: storing 21 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 21
9999 mem: storing 1058 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1058
9999 mem: location 1254 is 1058
9999 mem: storing 9480 in location 1058
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 1
9999 mem: storing 2 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 2
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 2
9999 mem: storing 22 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 22
9999 mem: storing 1060 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1060
9999 mem: location 1254 is 1060
9999 mem: storing 9480 in location 1060
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 2
9999 mem: storing 3 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 3
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 3
9999 mem: storing 23 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 23
9999 mem: storing 1062 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1062
9999 mem: location 1254 is 1062
9999 mem: storing 9480 in location 1062
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 3
9999 mem: storing 4 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 4
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 4
9999 mem: storing 24 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 24
9999 mem: storing 1064 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1064
9999 mem: location 1254 is 1064
9999 mem: storing 9480 in location 1064
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 4
9999 mem: storing 5 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 5
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 5
9999 mem: storing 25 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 25
9999 mem: storing 1066 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1066
9999 mem: location 1254 is 1066
9999 mem: storing 9480 in location 1066
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 5
9999 mem: storing 6 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 6
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 6
9999 mem: storing 26 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 26
9999 mem: storing 1068 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1068
9999 mem: location 1254 is 1068
9999 mem: storing 9480 in location 1068
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 6
9999 mem: storing 7 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 7
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 7
9999 mem: storing 27 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 27
9999 mem: storing 1070 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1070
9999 mem: location 1254 is 1070
9999 mem: storing 9480 in location 1070
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 7
9999 mem: storing 8 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 8
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 8
9999 mem: storing 28 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 28
9999 mem: storing 1072 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1072
9999 mem: location 1254 is 1072
9999 mem: storing 9480 in location 1072
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 8
9999 mem: storing 9 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 9
9999 mem: location 1263 is 9
9999 mem: storing 1 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1264 is 9480
9999 mem: location 1266 is 245
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 9
9999 mem: storing 29 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 29
9999 mem: storing 1074 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 9480
9999 mem: location 1237 is 245
9999 mem: location 1254 is 1074
9999 mem: location 1254 is 1074
9999 mem: storing 9480 in location 1074
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1262 is 9
9999 mem: storing 10 in location 1262
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1262 is 10
9999 mem: location 1263 is 9
9999 mem: storing 0 in location 1270
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 127 -> 128
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
9990 schedule: move-cursor/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1158
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 3
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 128 -> 129
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1164
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1169
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1170
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1171
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 0
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 130 -> 131
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 0
9999 mem: storing 30 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 69 -> 70
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 30
9999 mem: storing 1076 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1076
9999 mem: location 1254 is 1076
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 131 -> 130
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 0
9999 mem: storing 1 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 1
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 131 -> 132
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1
9999 mem: storing 31 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 70 -> 71
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 31
9999 mem: storing 1078 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1078
9999 mem: location 1254 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 1
9999 mem: storing 2 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 2
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 132 -> 133
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 2
9999 mem: storing 32 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 71 -> 72
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 32
9999 mem: storing 1080 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1080
9999 mem: location 1254 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 133 -> 132
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 2
9999 mem: storing 3 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 3
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 133 -> 134
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 3
9999 mem: storing 33 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 72 -> 73
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 33
9999 mem: storing 1082 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1082
9999 mem: location 1254 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 3
9999 mem: storing 4 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 4
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 134 -> 135
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 4
9999 mem: storing 34 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 34
9999 mem: storing 1084 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1084
9999 mem: location 1254 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 135 -> 134
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 4
9999 mem: storing 5 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 5
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 135 -> 136
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 5
9999 mem: storing 35 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 74 -> 75
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 35
9999 mem: storing 1086 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1086
9999 mem: location 1254 is 1086
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 136 -> 135
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 5
9999 mem: storing 6 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 6
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 6
9999 mem: storing 36 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 36
9999 mem: storing 1088 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1088
9999 mem: location 1254 is 1088
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 6
9999 mem: storing 7 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 7
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 137 -> 138
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 7
9999 mem: storing 37 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 37
9999 mem: storing 1090 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1090
9999 mem: location 1254 is 1090
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 7
9999 mem: storing 8 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 8
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 138 -> 139
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 8
9999 mem: storing 38 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 38
9999 mem: storing 1092 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1092
9999 mem: location 1254 is 1092
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 139 -> 138
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 138 -> 139
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 8
9999 mem: storing 9 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 9
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 139 -> 140
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 9
9999 mem: storing 39 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 39
9999 mem: storing 1094 in location 1254
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1094
9999 mem: location 1254 is 1094
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 9
9999 mem: storing 10 in location 1168
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 10
9999 mem: location 1169 is 9
9999 mem: storing 1 in location 1173
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1167 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1271
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1274
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1275
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1276
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1277
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1275 is 3
9999 mem: storing 4 in location 1275
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1274 is 1008
9999 mem: location 1275 is 4
9999 mem: location 1276 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1158
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 4
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1274
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1274 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1460
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1460 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1460 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1461
 108 run: return {height: "number"}
9999 mem: location 1461 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1278
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1275 is 4
9999 mem: location 1278 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1274 is 1008
9999 mem: location 1275 is 4
9999 mem: location 1276 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 143 -> 144
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1158
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 4
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1274
9999 mem: incrementing refcount of 1008: 143 -> 144
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1274 is 1008
9999 mem: location 1276 is 0
9999 mem: location 1277 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1164
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 144 -> 145
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1169
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1170
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1171
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 0
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 145 -> 146
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 0
9999 mem: storing 40 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 79 -> 80
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 40
9999 mem: storing 1096 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1096
9999 mem: location 1254 is 1096
9999 mem: storing 32 in location 1096
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 146 -> 145
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 145 -> 146
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 0
9999 mem: storing 1 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 1
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 146 -> 147
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1
9999 mem: storing 41 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 80 -> 81
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 41
9999 mem: storing 1098 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1098
9999 mem: location 1254 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 147 -> 146
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 146 -> 147
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 1
9999 mem: storing 2 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 2
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 147 -> 148
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 2
9999 mem: storing 42 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 81 -> 82
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 42
9999 mem: storing 1100 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1100
9999 mem: location 1254 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 3
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 148 -> 147
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 147 -> 148
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 2
9999 mem: storing 3 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 3
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 148 -> 149
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 3
9999 mem: storing 43 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 82 -> 83
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 43
9999 mem: storing 1102 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1102
9999 mem: location 1254 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 4
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 3
9999 mem: storing 4 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 4
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 149 -> 150
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 4
9999 mem: storing 44 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 83 -> 84
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 44
9999 mem: storing 1104 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1104
9999 mem: location 1254 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 5
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 149 -> 150
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 4
9999 mem: storing 5 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 5
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 150 -> 151
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 5
9999 mem: storing 45 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 84 -> 85
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 45
9999 mem: storing 1106 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1106
9999 mem: location 1254 is 1106
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 6
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 150 -> 151
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 5
9999 mem: storing 6 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 6
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 151 -> 152
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 6
9999 mem: storing 46 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 85 -> 86
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 46
9999 mem: storing 1108 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1108
9999 mem: location 1254 is 1108
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 7
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 151 -> 152
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 6
9999 mem: storing 7 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 7
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 152 -> 153
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 7
9999 mem: storing 47 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 86 -> 87
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 47
9999 mem: storing 1110 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1110
9999 mem: location 1254 is 1110
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 7
9999 mem: storing 8 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 8
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 152 -> 153
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 7
9999 mem: storing 8 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 8
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 153 -> 154
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 8
9999 mem: storing 48 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 87 -> 88
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 48
9999 mem: storing 1112 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1112
9999 mem: location 1254 is 1112
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 8
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 8
9999 mem: storing 9 in location 1245
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 9
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 153 -> 154
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 8
9999 mem: storing 9 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 9
9999 mem: location 1169 is 9
9999 mem: storing 0 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1167 is 1008
9999 mem: location 1170 is 32
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 154 -> 155
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1243
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 4
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1245
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 9
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 9
9999 mem: storing 49 in location 1249
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 88 -> 89
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 49
9999 mem: storing 1114 in location 1254
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 32
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1114
9999 mem: location 1254 is 1114
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 9
9999 mem: location 1255 is 9
9999 mem: storing 1 in location 1256
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 154 -> 155
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1168 is 9
9999 mem: storing 10 in location 1168
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1168 is 10
9999 mem: location 1169 is 9
9999 mem: storing 1 in location 1173
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1173 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1167 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1275 is 4
9999 mem: storing 5 in location 1275
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1275 is 5
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1274 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1141
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 154 -> 155
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1304
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 155 -> 156
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 155 -> 156
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1454
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1454 in location 1260
9999 mem: incrementing refcount of 1454: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1454
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9999 mem: location 1455 is 1
9999 mem: location 1456 is 1448
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9998 run: address to copy is 1455
9998 run: its type is "number"
9999 mem: location 1455 is 1
9999 mem: storing 1 in location 1261
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9999 mem: location 1455 is 1
9999 mem: location 1456 is 1448
9999 mem: location 1260 is 1454
9999 mem: skipping refcount at 1454
9998 run: address to copy is 1456
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1456 is 1448
9999 mem: storing 1448 in location 1262
9999 mem: incrementing refcount of 1448: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1448
9999 mem: skipping refcount at 1448
9999 mem: storing 1 in location 1263
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1457
9999 mem: storing 1457 in location 1265
9999 mem: incrementing refcount of 1457: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1265 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 0
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1461 is 0
9999 mem: location 1260 is 1454
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1454
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1454: 3 -> 2
9999 mem: storing 1454 in location 1301
9999 mem: incrementing refcount of 1454: 2 -> 3
9999 mem: storing 1 in location 1309
9999 mem: storing 1 in location 1310
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1300 is 1008
9999 mem: location 1301 is 1454
9999 mem: location 1302 is 1141
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .a         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: assume-console {"\n    type [3]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"3": "literal-string"}
9992 load: after rewriting: type {"3": "literal-string"}
9999 mem: storing 'type' event starting at 1479
9999 mem: storing 'text' tag at 1479
9999 mem: storing character 51 at 1480
9999 mem: storing console in 1483
9999 mem: storing console data in 1485
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1483
9999 mem: location 2 is 1141
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1297
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 156 -> 157
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1301
9999 mem: incrementing refcount of 1483: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 18 -> 19
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1304
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 157 -> 158
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 157 -> 158
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1483
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1260
9999 mem: incrementing refcount of 1483: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1483
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9999 mem: location 1484 is 0
9999 mem: location 1485 is 1477
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9998 run: its type is "number"
9999 mem: location 1484 is 0
9999 mem: storing 0 in location 1261
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9999 mem: location 1484 is 0
9999 mem: location 1485 is 1477
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1485
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1485 is 1477
9999 mem: storing 1477 in location 1262
9999 mem: incrementing refcount of 1477: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 1 in location 1263
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 0
9999 mem: location 1263 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1262 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1261 is 0
9998 run: address to copy is 1479
9998 run: its type is event
9999 mem: location 1479 is 0
9999 mem: location 1480 is 51
9999 mem: location 1481 is 0
9999 mem: location 1482 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 51 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1261 is 0
9999 mem: storing 1 in location 1261
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9999 mem: location 1484 is 0
9999 mem: location 1485 is 1477
9999 mem: location 1261 is 1
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy to is 1484
9999 mem: storing 1 in location 1484
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 51
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1260 is 1483
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 51, 0, 0]
9998 run: result 1 is 1483
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1305
9999 mem: storing 51 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1483: 2 -> 1
9999 mem: storing 1483 in location 1301
9999 mem: incrementing refcount of 1483: 1 -> 2
9999 mem: storing 1 in location 1309
9999 mem: storing 0 in location 1310
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1305 is 0
9999 mem: location 1306 is 51
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1311
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1300 is 1008
9999 mem: location 1302 is 1141
9999 mem: location 1305 is 0
9999 mem: location 1306 is 51
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1313
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 158 -> 159
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 19 -> 20
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1318
9999 mem: storing 51 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1317 is 1141
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1486
9999 mem: storing 3 in location 1487
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1489
9999 mem: incrementing refcount of 1008: 159 -> 160
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1489 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1490
 106 run: return {width: "number"}
9999 mem: location 1490 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1323
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1489
9999 mem: incrementing refcount of 1008: 160 -> 161
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1489 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1490
 106 run: return {height: "number"}
9999 mem: location 1490 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1324
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1325
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1326
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1327
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1328
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1329
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1330
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1331
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 51
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 1319 in location 1332
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1332 is 1319
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1333
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1344
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1349
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1365
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1366
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1371
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1372
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1373
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1374
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1378
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 0 in location 1382
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: storing 1 in location 1385
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1322
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1367
9999 mem: incrementing refcount of 1160: 24 -> 25
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1327 is 1145
9999 mem: location 1145 is 1160
9999 mem: storing 1160 in location 1379
9999 mem: incrementing refcount of 1160: 25 -> 26
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1317 is 1141
9999 mem: location 1332 is 1319
9999 mem: location 1319 is 51
9999 mem: location 1316 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1400
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1403
9999 mem: incrementing refcount of 1141: 20 -> 21
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1404
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1405
9999 mem: incrementing refcount of 1008: 161 -> 162
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1160
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1406
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1404 is 51
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1160
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1174
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1178
9999 mem: incrementing refcount of 1160: 26 -> 27
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1491
9999 mem: storing 1491 in location 1179
9999 mem: incrementing refcount of 1491: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1179 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 0
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1177 is 51
9999 mem: location 1179 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy to is 1492
9999 mem: storing 51 in location 1492
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1181
9999 mem: storing 1181 in location 1180
9999 mem: incrementing refcount of 1181: 36 -> 37
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1181
9999 mem: location 1163 is 0
9999 mem: location 1179 is 1491
9999 mem: location 1178 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1162
9999 mem: storing 1491 in location 1162
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 51
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1178 is 1160
9999 mem: location 1179 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy to is 1494
9999 mem: storing 1160 in location 1494
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 51
9999 mem: location 1493 is 0
9999 mem: location 1494 is 1160
9999 mem: location 1180 is 1181
9999 mem: location 1179 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy to is 1493
9999 mem: storing 1181 in location 1493
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1181
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1160
9999 mem: location 1179 is 1491
9999 mem: location 1180 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1491 in location 1184
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1178 is 1160
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1160
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1489
9999 mem: incrementing refcount of 1160: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1489 is 1160
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1489 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1491
9999 mem: location 1163 is 0
9999 mem: location 1489 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1491
9999 mem: storing 1491 in location 1490
9999 mem: incrementing refcount of 1491: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1490 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1491
9999 mem: location 1406 is 1145
9999 mem: decrementing refcount of 1160: 28 -> 27
9999 mem: storing 1491 in location 1145
9999 mem: incrementing refcount of 1491: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1407
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1408
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1409
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1403 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 9
9999 mem: storing 9 in location 1410
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1407 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1411
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1412
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1489
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1489 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1490
 107 run: return {width: "number"}
9999 mem: location 1490 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1413
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1405 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1489
9999 mem: incrementing refcount of 1008: 163 -> 164
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1489 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1489 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1490
 107 run: return {height: "number"}
9999 mem: location 1490 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1414
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1410 is 9
9999 mem: storing 8 in location 1415
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1415 is 8
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 0
9999 mem: location 1408 is 1150
9999 mem: storing 1 in location 1150
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1489
9999 mem: incrementing refcount of 1491: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1489 is 1491
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1489 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 51
9999 mem: location 1493 is 1181
9999 mem: location 1494 is 1160
9999 mem: location 1489 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1493
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1493 is 1181
9999 mem: storing 1181 in location 1490
9999 mem: incrementing refcount of 1181: 37 -> 38
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1490 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1423
9999 mem: incrementing refcount of 1181: 38 -> 39
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1423 is 1181
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1181
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 1
9999 mem: location 1413 is 10
9999 mem: storing 0 in location 1427
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1406 is 1145
9999 mem: location 1145 is 1491
9999 mem: storing 1491 in location 1429
9999 mem: incrementing refcount of 1491: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1405 is 1008
9999 mem: location 1411 is 1
9999 mem: location 1412 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 164 -> 165
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1159
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 0
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1430
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 0
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1491
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 51
9999 mem: location 1493 is 1181
9999 mem: location 1494 is 1160
9999 mem: location 1429 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1492
9998 run: its type is "character"
9999 mem: location 1492 is 51
9999 mem: storing 51 in location 1431
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 51
9999 mem: storing 0 in location 1432
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 51
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 51
  90 print-character: 51 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 51
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 0
9999 mem: storing 10 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 89 -> 90
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 51
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 10
9999 mem: storing 1036 in location 1254
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 51
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1036
9999 mem: location 1254 is 1036
9999 mem: storing 51 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 0
9999 mem: storing 1 in location 1430
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1491
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1489
9999 mem: incrementing refcount of 1491: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1489 is 1491
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1489 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 51
9999 mem: location 1493 is 1181
9999 mem: location 1494 is 1160
9999 mem: location 1489 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1493
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1493 is 1181
9999 mem: storing 1181 in location 1490
9999 mem: incrementing refcount of 1181: 39 -> 40
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1490 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1491: 6 -> 5
9999 mem: storing 1181 in location 1429
9999 mem: incrementing refcount of 1181: 40 -> 41
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 1
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1181
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1491
9999 mem: location 1429 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1431
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1431 is 97
9999 mem: storing 0 in location 1432
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1405 is 1008
9999 mem: location 1431 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1
9999 mem: storing 11 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1250
9999 mem: incrementing refcount of 1014: 90 -> 91
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1249 is 11
9999 mem: storing 1038 in location 1254
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-can-undo-typing-multiple-2
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1236 is 97
9999 mem: location 1237 is 7
9999 mem: location 1254 is 1038
9999 mem: location 1254 is 1038
9999 mem: storing 97 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1255
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1255 is 9
9999 mem: storing 0 in location 1256
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 2
9999 mem: location 1235 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1430 is 1
9999 mem: storing 2 in location 1430
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1489
9999 mem: incrementing refcount of 1181: 41 -> 42
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1489 is 1181
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1489 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 97
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1491
9999 mem: location 1489 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1490
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1490 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1181: 42 -> 41
9999 mem: storing 0 in location 1429
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1422
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1430 is 2
9999 mem: location 1410 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1403 is 1141
9999 mem: location 1405 is 1008
9999 mem: location 1422 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1141
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1141: 21 -> 20
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 20 -> 21
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1316
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: storing 0 in location 1322
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1143 is 1160
9999 mem: storing 1160 in location 1369
9999 mem: incrementing refcount of 1160: 27 -> 28
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1317 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1336
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1336 is 1152
9999 mem: location 1152 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1160
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1489
9999 mem: incrementing refcount of 1160: 28 -> 29
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1489 is 1160
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1489 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 167
9999 mem: location 1162 is 1491
9999 mem: location 1163 is 0
9999 mem: location 1489 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1491
9999 mem: storing 1491 in location 1490
9999 mem: incrementing refcount of 1491: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1490 is 1491
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1491
9999 mem: storing 1491 in location 1343
9999 mem: incrementing refcount of 1491: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1489
9999 mem: incrementing refcount of 1491: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1489 is 1491
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1489 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1492 is 51
9999 mem: location 1493 is 1181
9999 mem: location 1494 is 1160
9999 mem: location 1489 is 1491
9999 mem: skipping refcount at 1491
9998 run: address to copy is 1493
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1493 is 1181
9999 mem: storing 1181 in location 1490
9999 mem: incrementing refcount of 1181: 41 -> 42
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1490 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1381
9999 mem: incrementing refcount of 1181: 42 -> 43
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1465
9999 mem: storing 1465 in location 1335
9999 mem: incrementing refcount of 1465: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1330 is 1
9999 mem: location 1331 is 0
9999 mem: location 1367 is 1160
9999 mem: location 1328 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1329 is 1150
9999 mem: location 1150 is 1
9999 mem: location 1369 is 1160
9999 mem: location 1343 is 1491
9999 mem: location 1381 is 1181
9999 mem: location 1335 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1335 is 1465
9999 mem: skipping refcount at 1465
9999 mem: storing 0 in location 1466
9999 mem: storing 1 in location 1467
9999 mem: storing 0 in location 1468
9999 mem: storing 1160 in location 1469
9999 mem: storing 1 in location 1470
9999 mem: storing 1 in location 1471
9999 mem: storing 1160 in location 1472
9999 mem: storing 1491 in location 1473
9999 mem: storing 1181 in location 1474
9999 mem: storing 1 in location 1475
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1317 is 1141
9999 mem: location 1335 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1174
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1177
9999 mem: incrementing refcount of 1141: 21 -> 22
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1178
9999 mem: incrementing refcount of 1465: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1462
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1179
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1178 is 1465
9999 mem: location 1179 is 1152
9999 mem: location 1152 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1157
9999 mem: incrementing refcount of 1465: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1495
9999 mem: storing 1495 in location 1159
9999 mem: incrementing refcount of 1495: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1157 is 1465
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1495
9999 mem: skipping refcount at 1495
9999 mem: location 1159 is 1495
9999 mem: skipping refcount at 1495
9999 mem: storing 1465 in location 1496
9999 mem: storing 0 in location 1497
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1159 is 1495
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1495
9999 mem: location 1179 is 1152
9999 mem: storing 1495 in location 1152
9999 mem: incrementing refcount of 1495: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1495
9999 mem: location 1153 is 1462
9999 mem: location 1177 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1180
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1180 is 1153
9999 mem: decrementing refcount of 1462: 2 -> 1
9999 mem: storing 0 in location 1153
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1177 is 1141
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1141: 22 -> 21
9999 mem: storing 1141 in location 1317
9999 mem: incrementing refcount of 1141: 21 -> 22
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1316 is 1008
9999 mem: location 1317 is 1141
9999 mem: location 1322 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1141
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: decrementing refcount of 1141: 22 -> 21
9999 mem: storing 1141 in location 1302
9999 mem: incrementing refcount of 1141: 21 -> 22
9999 mem: storing 0 in location 1312
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1495
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1303
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9999 mem: location 1142 is 1160
9999 mem: location 1143 is 1160
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1491
9999 mem: location 1146 is 0
9999 mem: location 1147 is 9
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 1495
9999 mem: location 1153 is 0
9999 mem: location 1302 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1304
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1300 is 1008
9999 mem: location 1303 is 1
9999 mem: location 1304 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1154
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1157
9999 mem: incrementing refcount of 1008: 167 -> 168
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1159
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1157 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1159 is 1
9999 mem: location 1157 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1157 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 168 -> 167
9999 mem: storing 1008 in location 1300
9999 mem: incrementing refcount of 1008: 167 -> 168
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1301 is 1483
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1257
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1483 in location 1260
9999 mem: incrementing refcount of 1483: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1260 is 1483
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9999 mem: location 1484 is 1
9999 mem: location 1485 is 1477
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1484
9998 run: its type is "number"
9999 mem: location 1484 is 1
9999 mem: storing 1 in location 1261
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9999 mem: location 1484 is 1
9999 mem: location 1485 is 1477
9999 mem: location 1260 is 1483
9999 mem: skipping refcount at 1483
9998 run: address to copy is 1485
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1485 is 1477
9999 mem: storing 1477 in location 1262
9999 mem: incrementing refcount of 1477: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1262 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 1 in location 1263
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1486
9999 mem: storing 1486 in location 1265
9999 mem: incrementing refcount of 1486: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1265 is 1486
9999 mem: skipping refcount at 1486
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1260 is 1483
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1483
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: decrementing refcount of 1483: 3 -> 2
9999 mem: storing 1483 in location 1301
9999 mem: incrementing refcount of 1483: 2 -> 3
9999 mem: storing 1 in location 1309
9999 mem: storing 1 in location 1310
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1300 is 1008
9999 mem: location 1301 is 1483
9999 mem: location 1302 is 1141
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .3a        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
