9991 parse: --- defining scenario_editor-can-undo-typing-multiple-2
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": "literal-string"}
9993 parse:   product: {1: ("address" "array" "character")}
9992 load: after rewriting: {1: ("address" "array" "character")} <- new {"a": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "editor-data")}
9992 load: after rewriting: {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [012]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [012]\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .012a      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .012a      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .a         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .a         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [3]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [3]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .3a        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .3a        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-undo-typing-multiple-2 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- deduce types for recipe scenario_editor-can-undo-typing-multiple-2
9992 transform: screen => ("address" "screen")
9992 transform: screen <= ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- transform names for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-typing-multiple-2
9992 transform: instruction {screen: ("address" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "screen")}
9992 transform: instruction {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "array" "character")} {screen: ("address" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "editor-data")} {screen: ("address" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "screen")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {editor: ("address" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- transform braces for recipe scenario_editor-can-undo-typing-multiple-2
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-undo-typing-multiple-2
9991 transform: --- checking reply instructions against header for scenario_editor-can-undo-typing-multiple-2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-typing-multiple-2
 102 run: {screen: ("address" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 0 in location 1000
9999 mem: storing 0 in location 1001
9999 mem: storing 0 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 0 in location 1008
9999 mem: storing 0 in location 1009
9999 mem: storing 0 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 0 in location 1013
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 0 in location 1014
9999 mem: storing 0 in location 1015
9999 mem: storing 0 in location 1016
9999 mem: storing 0 in location 1017
9999 mem: storing 0 in location 1018
9999 mem: storing 0 in location 1019
9999 mem: storing 0 in location 1020
9999 mem: storing 0 in location 1021
9999 mem: storing 0 in location 1022
9999 mem: storing 0 in location 1023
9999 mem: storing 0 in location 1024
9999 mem: storing 0 in location 1025
9999 mem: storing 0 in location 1026
9999 mem: storing 0 in location 1027
9999 mem: storing 0 in location 1028
9999 mem: storing 0 in location 1029
9999 mem: storing 0 in location 1030
9999 mem: storing 0 in location 1031
9999 mem: storing 0 in location 1032
9999 mem: storing 0 in location 1033
9999 mem: storing 0 in location 1034
9999 mem: storing 0 in location 1035
9999 mem: storing 0 in location 1036
9999 mem: storing 0 in location 1037
9999 mem: storing 0 in location 1038
9999 mem: storing 0 in location 1039
9999 mem: storing 0 in location 1040
9999 mem: storing 0 in location 1041
9999 mem: storing 0 in location 1042
9999 mem: storing 0 in location 1043
9999 mem: storing 0 in location 1044
9999 mem: storing 0 in location 1045
9999 mem: storing 0 in location 1046
9999 mem: storing 0 in location 1047
9999 mem: storing 0 in location 1048
9999 mem: storing 0 in location 1049
9999 mem: storing 0 in location 1050
9999 mem: storing 0 in location 1051
9999 mem: storing 0 in location 1052
9999 mem: storing 0 in location 1053
9999 mem: storing 0 in location 1054
9999 mem: storing 0 in location 1055
9999 mem: storing 0 in location 1056
9999 mem: storing 0 in location 1057
9999 mem: storing 0 in location 1058
9999 mem: storing 0 in location 1059
9999 mem: storing 0 in location 1060
9999 mem: storing 0 in location 1061
9999 mem: storing 0 in location 1062
9999 mem: storing 0 in location 1063
9999 mem: storing 0 in location 1064
9999 mem: storing 0 in location 1065
9999 mem: storing 0 in location 1066
9999 mem: storing 0 in location 1067
9999 mem: storing 0 in location 1068
9999 mem: storing 0 in location 1069
9999 mem: storing 0 in location 1070
9999 mem: storing 0 in location 1071
9999 mem: storing 0 in location 1072
9999 mem: storing 0 in location 1073
9999 mem: storing 0 in location 1074
9999 mem: storing 0 in location 1075
9999 mem: storing 0 in location 1076
9999 mem: storing 0 in location 1077
9999 mem: storing 0 in location 1078
9999 mem: storing 0 in location 1079
9999 mem: storing 0 in location 1080
9999 mem: storing 0 in location 1081
9999 mem: storing 0 in location 1082
9999 mem: storing 0 in location 1083
9999 mem: storing 0 in location 1084
9999 mem: storing 0 in location 1085
9999 mem: storing 0 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 0 in location 1089
9999 mem: storing 0 in location 1090
9999 mem: storing 0 in location 1091
9999 mem: storing 0 in location 1092
9999 mem: storing 0 in location 1093
9999 mem: storing 0 in location 1094
9999 mem: storing 0 in location 1095
9999 mem: storing 0 in location 1096
9999 mem: storing 0 in location 1097
9999 mem: storing 0 in location 1098
9999 mem: storing 0 in location 1099
9999 mem: storing 0 in location 1100
9999 mem: storing 0 in location 1101
9999 mem: storing 0 in location 1102
9999 mem: storing 0 in location 1103
9999 mem: storing 0 in location 1104
9999 mem: storing 0 in location 1105
9999 mem: storing 0 in location 1106
9999 mem: storing 0 in location 1107
9999 mem: storing 0 in location 1108
9999 mem: storing 0 in location 1109
9999 mem: storing 0 in location 1110
9999 mem: storing 0 in location 1111
9999 mem: storing 0 in location 1112
9999 mem: storing 0 in location 1113
9999 mem: storing 0 in location 1114
9999 mem: storing 0 in location 1115
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "screen")} <- clear-screen {result: ("address" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1116
9999 mem: storing 0 in location 1116
9999 mem: storing 0 in location 1117
9999 mem: storing 0 in location 1118
9999 mem: storing 0 in location 1119
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 0 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
9999 mem: storing 0 in location 1125
9999 mem: storing 8 in location 1117
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9998 run: address to copy to is 1016
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9998 run: address to copy to is 1018
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9998 run: address to copy to is 1020
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9998 run: address to copy to is 1022
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9998 run: address to copy to is 1024
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9998 run: address to copy to is 1026
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9998 run: address to copy to is 1028
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9998 run: address to copy to is 1030
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9998 run: address to copy to is 1032
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9998 run: address to copy to is 1034
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9998 run: address to copy to is 1036
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9998 run: address to copy to is 1038
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9998 run: address to copy to is 1040
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9998 run: address to copy to is 1042
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9998 run: address to copy to is 1044
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9998 run: address to copy to is 1046
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9998 run: address to copy to is 1048
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9998 run: address to copy to is 1050
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9998 run: address to copy to is 1052
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9998 run: address to copy to is 1054
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9998 run: address to copy to is 1056
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9998 run: address to copy to is 1058
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9998 run: address to copy to is 1060
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9998 run: address to copy to is 1062
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9998 run: address to copy to is 1064
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9998 run: address to copy to is 1066
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9998 run: address to copy to is 1068
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9998 run: address to copy to is 1070
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9998 run: address to copy to is 1072
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9998 run: address to copy to is 1074
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9998 run: address to copy to is 1076
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9998 run: address to copy to is 1078
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9998 run: address to copy to is 1080
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9998 run: address to copy to is 1082
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9998 run: address to copy to is 1084
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9998 run: address to copy to is 1086
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9998 run: address to copy to is 1088
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9998 run: address to copy to is 1090
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9998 run: address to copy to is 1092
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9998 run: address to copy to is 1094
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9998 run: address to copy to is 1096
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9998 run: address to copy to is 1098
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9998 run: address to copy to is 1100
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9998 run: address to copy to is 1102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9998 run: address to copy to is 1104
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9998 run: address to copy to is 1106
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9998 run: address to copy to is 1108
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9998 run: address to copy to is 1110
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9998 run: address to copy to is 1112
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9998 run: address to copy to is 1114
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "array" "character")} <- new {"a": "literal-string"}
9999 mem: new string alloc: 1126
9999 mem: storing 1126 in location 1
9999 mem: incrementing refcount of 1126: 0 -> 1
 102 run: {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1126
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1129
9999 mem: storing 0 in location 1129
9999 mem: storing 0 in location 1130
9999 mem: storing 0 in location 1131
9999 mem: storing 0 in location 1132
9999 mem: storing 0 in location 1133
9999 mem: storing 0 in location 1134
9999 mem: storing 0 in location 1135
9999 mem: storing 0 in location 1136
9999 mem: storing 0 in location 1137
9999 mem: storing 7 in location 1130
 103 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1126 in location 1132
9999 mem: incrementing refcount of 1126: 1 -> 2
 103 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1133
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1134
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1135
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1135 is 10
9999 mem: storing 9 in location 1135
 103 run: {result: ("address" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1138
9999 mem: storing 0 in location 1138
9999 mem: storing 0 in location 1139
9999 mem: storing 0 in location 1140
9999 mem: storing 0 in location 1141
9999 mem: storing 0 in location 1142
9999 mem: storing 0 in location 1143
9999 mem: storing 0 in location 1144
9999 mem: storing 0 in location 1145
9999 mem: storing 0 in location 1146
9999 mem: storing 0 in location 1147
9999 mem: storing 0 in location 1148
9999 mem: storing 0 in location 1149
9999 mem: storing 0 in location 1150
9999 mem: storing 1138 in location 1136
9999 mem: incrementing refcount of 1138: 0 -> 1
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {left: "offset"}, {left: "number"}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1134 is 0
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1143
9999 mem: storing 0 in location 1143
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {right: "offset"}, {right: "number"}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1135 is 9
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1144
9999 mem: storing 9 in location 1144
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {1: "literal", "top": ()}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1146
9999 mem: storing 1 in location 1146
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {left: "number"}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1134 is 0
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 0 in location 1147
 103 run: {init: ("address" "duplex-list" "character")} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1151
9999 mem: storing 0 in location 1151
9999 mem: storing 0 in location 1152
9999 mem: storing 0 in location 1153
9999 mem: storing 0 in location 1154
9999 mem: storing 0 in location 1155
9999 mem: storing 0 in location 1156
9999 mem: storing 4 in location 1152
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1154
 104 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1155
 104 run: {result: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1157
9999 mem: storing 0 in location 1157
9999 mem: storing 0 in location 1158
9999 mem: storing 0 in location 1159
9999 mem: storing 0 in location 1160
9999 mem: storing 1157 in location 1156
9999 mem: incrementing refcount of 1157: 0 -> 1
 104 run: {result: ("address" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1154 is 167
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1156 is 1157
9999 mem: skipping refcount at 1157
9999 mem: storing 167 in location 1158
9999 mem: storing 0 in location 1159
9999 mem: storing 0 in location 1160
 104 run: jump-unless {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1155 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1156 is 1157
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1157
9999 mem: storing 1157 in location 1137
9999 mem: incrementing refcount of 1157: 1 -> 2
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {data: "offset"}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1137 is 1157
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1139
9999 mem: storing 1157 in location 1139
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1137 is 1157
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1140
9999 mem: storing 1157 in location 1140
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1137 is 1157
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1157 in location 1142
 103 run: {result: ("address" "editor-data")} <- insert-text {result: ("address" "editor-data")}, {s: ("address" "array" "character")}
9999 mem: location 1136 is 1138
9999 mem: location 1132 is 1126
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1119
9999 mem: incrementing refcount of 1138: 1 -> 2
 104 run: {text: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1126 in location 1120
9999 mem: incrementing refcount of 1126: 2 -> 3
 104 run: jump-if {text: ("address" "array" "character")}, {: "offset"}
9999 mem: location 1120 is 1126
9998 run: jumping to instruction 6
 104 run: {len: "number"} <- length {text: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9999 mem: storing 1 in location 1121
 104 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1121 is 1
9998 run: jumping to instruction 11
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1119 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1139
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1139 is 1157
9999 mem: storing 1157 in location 1123
9999 mem: incrementing refcount of 1157: 2 -> 3
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 0
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 97
9999 mem: storing 97 in location 1125
 104 run: insert_2 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 97
9999 mem: location 1123 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1161
9999 mem: storing 0 in location 1161
9999 mem: storing 0 in location 1162
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
9999 mem: storing 0 in location 1167
9999 mem: storing 5 in location 1162
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1164
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1165
9999 mem: incrementing refcount of 1157: 3 -> 4
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1168
9999 mem: storing 0 in location 1168
9999 mem: storing 0 in location 1169
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
9999 mem: storing 1168 in location 1166
9999 mem: incrementing refcount of 1168: 0 -> 1
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1166 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1164 is 97
9999 mem: location 1166 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1169
9999 mem: storing 97 in location 1169
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1167
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1168
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy to is 1159
9999 mem: storing 1168 in location 1159
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1165 is 1157
9999 mem: location 1166 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1171
9999 mem: storing 1157 in location 1171
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1167 is 0
9999 mem: location 1166 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1170
9999 mem: storing 0 in location 1170
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1157
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1172
9999 mem: storing 0 in location 1172
9999 mem: storing 0 in location 1173
9999 mem: storing 0 in location 1174
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
9999 mem: storing 3 in location 1173
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 4 -> 5
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 1 -> 2
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 5 -> 4
9999 mem: storing 1168 in location 1123
9999 mem: incrementing refcount of 1168: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 22
 104 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1119 is 1138
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1138
9999 mem: decrementing refcount of 1138: 2 -> 1
9999 mem: storing 1138 in location 1136
9999 mem: incrementing refcount of 1138: 1 -> 2
 103 run: _, _, {screen: ("address" "screen")}, {result: ("address" "editor-data")} <- render {screen: ("address" "screen")}, {result: ("address" "editor-data")}
9999 mem: location 1133 is 1008
9999 mem: location 1136 is 1138
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1177
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
9999 mem: storing 0 in location 1190
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
9999 mem: storing 0 in location 1193
9999 mem: storing 0 in location 1194
9999 mem: storing 0 in location 1195
9999 mem: storing 0 in location 1196
9999 mem: storing 0 in location 1197
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
9999 mem: storing 0 in location 1203
9999 mem: storing 0 in location 1204
9999 mem: storing 26 in location 1178
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1181
9999 mem: incrementing refcount of 1138: 2 -> 3
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1181 is 1138
9998 run: jumping to instruction 6
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1182
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1180 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 105 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1183
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1184
 104 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1185
9999 mem: incrementing refcount of 1157: 4 -> 5
 104 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1157
9999 mem: storing 1157 in location 1186
9999 mem: incrementing refcount of 1157: 5 -> 6
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 6 -> 7
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 3 -> 4
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 7 -> 6
9999 mem: storing 1168 in location 1185
9999 mem: incrementing refcount of 1168: 4 -> 5
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1187
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1188
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1182 is 0
9999 mem: storing 0 in location 1189
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1190
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1191
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1192
9999 mem: incrementing refcount of 1157: 6 -> 7
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1180 is 1008
9999 mem: location 1188 is 1
9999 mem: location 1189 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1168
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1183 is 5
9999 mem: storing 0 in location 1193
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 1 in location 1194
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1194 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1189 is 0
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1195
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1157
9999 mem: decrementing refcount of 1157: 7 -> 6
9999 mem: storing 1157 in location 1192
9999 mem: incrementing refcount of 1157: 6 -> 7
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1185 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1185 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1196
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1187 is 7
9999 mem: location 1196 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1205
9999 mem: storing 0 in location 1205
9999 mem: storing 0 in location 1206
9999 mem: storing 0 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 0 in location 1209
9999 mem: storing 0 in location 1210
9999 mem: storing 0 in location 1211
9999 mem: storing 0 in location 1212
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
9999 mem: storing 10 in location 1206
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1187
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1196 is 97
9999 mem: storing 0 in location 1197
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1189 is 0
9999 mem: location 1184 is 9
9999 mem: storing 0 in location 1199
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1199 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1180 is 1008
9999 mem: location 1196 is 97
9999 mem: location 1187 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1217
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
9999 mem: storing 0 in location 1241
9999 mem: storing 0 in location 1242
9999 mem: storing 24 in location 1218
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
9990 schedule: print/render/new-editor/scenario_editor-can-undo-typing-multiple-2
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 0
9999 mem: storing 10 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9998 run: address to copy to is 1036
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1168
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1175
9999 mem: incrementing refcount of 1168: 5 -> 6
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1168
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1176
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 6 -> 5
9999 mem: storing 0 in location 1185
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 7 -> 8
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 5 -> 6
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 8 -> 7
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1189 is 0
9999 mem: storing 1 in location 1189
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jumping to instruction 70
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1185 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1141
9999 mem: storing 0 in location 1141
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 1 in location 1194
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1189 is 1
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1201
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1194 is 1
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1202
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 0 in location 1203
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1204
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 0
9998 run: jumping to instruction 82
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1188 is 1
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1145
9999 mem: storing 1 in location 1145
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1190 is 1
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1146
9999 mem: storing 1 in location 1146
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1191 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 0 in location 1147
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1192 is 1157
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1157 in location 1142
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1188 is 1
9999 mem: location 1189 is 1
9999 mem: location 1180 is 1008
9999 mem: location 1181 is 1138
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 1
9998 run: result 2 is 1008
9998 run: result 3 is 1138
9999 mem: decrementing refcount of 1008: 8 -> 7
9999 mem: storing 1008 in location 1133
9999 mem: incrementing refcount of 1008: 7 -> 8
9999 mem: decrementing refcount of 1138: 3 -> 2
9999 mem: storing 1138 in location 1136
9999 mem: incrementing refcount of 1138: 2 -> 3
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {indent?: "offset"}, {1: "literal", "true": ()}
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1136 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1148
9999 mem: storing 1 in location 1148
 103 run: reply {result: ("address" "editor-data")}, {screen: ("address" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1136 is 1138
9999 mem: location 1133 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1138
9999 mem: storing 1138 in location 2
9999 mem: incrementing refcount of 1138: 3 -> 4
 102 run: editor-render {screen: ("address" "screen")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1138
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1129
 103 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1132
9999 mem: incrementing refcount of 1008: 8 -> 9
 103 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1133
9999 mem: incrementing refcount of 1138: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1134
 103 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1135
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1132 is 1008
9999 mem: location 1133 is 1138
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1177
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 9 -> 10
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1181
9999 mem: incrementing refcount of 1138: 5 -> 6
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1181 is 1138
9998 run: jumping to instruction 6
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1182
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1180 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 105 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1183
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1184
 104 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1185
9999 mem: incrementing refcount of 1157: 7 -> 8
 104 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1157
9999 mem: storing 1157 in location 1186
9999 mem: incrementing refcount of 1157: 8 -> 9
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 9 -> 10
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 7 -> 8
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 10 -> 9
9999 mem: storing 1168 in location 1185
9999 mem: incrementing refcount of 1168: 8 -> 9
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1187
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1188
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1182 is 0
9999 mem: storing 0 in location 1189
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1190
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1191
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1192
9999 mem: incrementing refcount of 1157: 9 -> 10
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1180 is 1008
9999 mem: location 1188 is 1
9999 mem: location 1189 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 11 -> 12
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1168
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1183 is 5
9999 mem: storing 0 in location 1193
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 1 in location 1194
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1194 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1189 is 0
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1195
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1157
9999 mem: decrementing refcount of 1157: 10 -> 9
9999 mem: storing 1157 in location 1192
9999 mem: incrementing refcount of 1157: 9 -> 10
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1185 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1185 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1196
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1187 is 7
9999 mem: location 1196 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1187
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1196 is 97
9999 mem: storing 0 in location 1197
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1189 is 0
9999 mem: location 1184 is 9
9999 mem: storing 0 in location 1199
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1199 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1180 is 1008
9999 mem: location 1196 is 97
9999 mem: location 1187 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 0
9999 mem: storing 10 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9998 run: address to copy to is 1036
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1168
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1175
9999 mem: incrementing refcount of 1168: 9 -> 10
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1168
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1176
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 10 -> 9
9999 mem: storing 0 in location 1185
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 10 -> 11
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 9 -> 10
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 11 -> 10
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 10 -> 11
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1189 is 0
9999 mem: storing 1 in location 1189
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jumping to instruction 70
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1185 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1141
9999 mem: storing 0 in location 1141
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 1 in location 1194
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1189 is 1
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1201
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1194 is 1
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1202
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 0 in location 1203
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1204
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 0
9998 run: jumping to instruction 82
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1188 is 1
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1145
9999 mem: storing 1 in location 1145
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1190 is 1
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1146
9999 mem: storing 1 in location 1146
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1191 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 0 in location 1147
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1192 is 1157
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1157 in location 1142
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1188 is 1
9999 mem: location 1189 is 1
9999 mem: location 1180 is 1008
9999 mem: location 1181 is 1138
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1136
9999 mem: storing 1 in location 1137
 103 run: clear-line-delimited {screen: ("address" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1132 is 1008
9999 mem: location 1137 is 1
9999 mem: location 1135 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 13 -> 14
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1120
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1121
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1
9999 mem: storing 11 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9998 run: address to copy to is 1038
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 14 -> 15
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 2
9999 mem: storing 12 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 5 -> 6
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 12
9998 run: address to copy to is 1040
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 15 -> 16
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 3
9999 mem: storing 13 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 13
9998 run: address to copy to is 1042
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 16 -> 17
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-can-undo-typing-multiple-2
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 4
9999 mem: storing 14 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 14
9998 run: address to copy to is 1044
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 17 -> 18
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 5
9999 mem: storing 15 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 15
9998 run: address to copy to is 1046
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 6
9999 mem: storing 16 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 9 -> 10
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 16
9998 run: address to copy to is 1048
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 20 -> 19
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 19 -> 20
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 7
9999 mem: storing 17 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 17
9998 run: address to copy to is 1050
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 21 -> 20
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 20 -> 21
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 8
9999 mem: storing 18 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 18
9998 run: address to copy to is 1052
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 22 -> 21
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 21 -> 22
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 9
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 9
9999 mem: storing 19 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 19
9998 run: address to copy to is 1054
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 23 -> 22
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 22 -> 23
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 10
9999 mem: location 1121 is 9
9999 mem: storing 1 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 103 run: draw-horizontal {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1132 is 1008
9999 mem: location 1136 is 2
9999 mem: location 1134 is 0
9999 mem: location 1135 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1243
9999 mem: storing 0 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 12 in location 1244
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1246
9999 mem: incrementing refcount of 1008: 23 -> 24
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1247
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1248
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1249
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1250
9999 mem: storing 1 in location 1251
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1252
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1254
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1247 is 2
9999 mem: location 1248 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 2
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1246
9999 mem: incrementing refcount of 1008: 24 -> 25
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 0
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 0
9999 mem: storing 20 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 20
9998 run: address to copy to is 1056
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1056
9999 mem: storing 245 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 0
9999 mem: storing 1 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 1
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 1
9999 mem: storing 21 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 21
9998 run: address to copy to is 1058
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1058
9999 mem: storing 245 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 1
9999 mem: storing 2 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 2
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-can-undo-typing-multiple-2
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 2
9999 mem: storing 22 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 22
9998 run: address to copy to is 1060
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1060
9999 mem: storing 245 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 2
9999 mem: storing 3 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 3
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 3
9999 mem: storing 23 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 23
9998 run: address to copy to is 1062
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1062
9999 mem: storing 245 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 3
9999 mem: storing 4 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 4
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 4
9999 mem: storing 24 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 17 -> 18
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 24
9998 run: address to copy to is 1064
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1064
9999 mem: storing 245 in location 1065
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 4
9999 mem: storing 5 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 5
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 5
9999 mem: storing 25 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 18 -> 19
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 25
9998 run: address to copy to is 1066
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1066
9999 mem: storing 245 in location 1067
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 5
9999 mem: storing 6 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 6
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 6
9999 mem: storing 26 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 19 -> 20
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 26
9998 run: address to copy to is 1068
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1068
9999 mem: storing 245 in location 1069
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 6
9999 mem: storing 7 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 7
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 7
9999 mem: storing 27 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 20 -> 21
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 27
9998 run: address to copy to is 1070
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1070
9999 mem: storing 245 in location 1071
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 7
9999 mem: storing 8 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 8
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 8
9999 mem: storing 28 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 21 -> 22
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 28
9998 run: address to copy to is 1072
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1072
9999 mem: storing 245 in location 1073
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 8
9999 mem: storing 9 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 9
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 9
9999 mem: storing 29 in location 1234
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 29
9998 run: address to copy to is 1074
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1074
9999 mem: storing 245 in location 1075
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 9
9999 mem: storing 10 in location 1248
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 10
9999 mem: location 1249 is 9
9999 mem: storing 0 in location 1256
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1246 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1136 is 2
9999 mem: storing 3 in location 1136
 103 run: clear-screen-from {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1132 is 1008
9999 mem: location 1136 is 3
9999 mem: location 1134 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 104 run: jump-if {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 3
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 36 -> 37
 104 run: clear-line-delimited {screen: ("address" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 37 -> 38
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/scenario_editor-can-undo-typing-multiple-2
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1120
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 0
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 38 -> 39
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 0
9999 mem: storing 30 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 23 -> 24
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 30
9998 run: address to copy to is 1076
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 1
9999 mem: storing 31 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 24 -> 25
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 31
9998 run: address to copy to is 1078
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 2
9999 mem: storing 32 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 25 -> 26
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 32
9998 run: address to copy to is 1080
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 40 -> 41
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 41 -> 42
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 3
9999 mem: storing 33 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 26 -> 27
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 33
9998 run: address to copy to is 1082
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 42 -> 43
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 4
9999 mem: storing 34 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 27 -> 28
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 34
9998 run: address to copy to is 1084
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 43 -> 44
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 5
9999 mem: storing 35 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 28 -> 29
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 35
9998 run: address to copy to is 1086
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 44 -> 45
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 6
9999 mem: storing 36 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 29 -> 30
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 36
9998 run: address to copy to is 1088
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 7
9999 mem: storing 37 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 30 -> 31
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 37
9998 run: address to copy to is 1090
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 45 -> 46
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/scenario_editor-can-undo-typing-multiple-2
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 46 -> 47
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 8
9999 mem: storing 38 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 31 -> 32
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 38
9998 run: address to copy to is 1092
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 9
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 47 -> 48
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 9
9999 mem: storing 39 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 32 -> 33
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 39
9998 run: address to copy to is 1094
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 47 -> 48
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 10
9999 mem: location 1121 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1257
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 7 in location 1258
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 49 -> 50
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1155
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 4
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 50 -> 49
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 49 -> 50
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 50 -> 51
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 106 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 51 -> 52
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1155
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 4
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 51 -> 52
 105 run: clear-line-delimited {screen: ("address" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 52 -> 53
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1120
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 0
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 0
9999 mem: storing 40 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 33 -> 34
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 40
9998 run: address to copy to is 1096
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 53 -> 54
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 1
9999 mem: storing 41 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 41
9998 run: address to copy to is 1098
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 2
9999 mem: storing 42 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 42
9998 run: address to copy to is 1100
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 3
9999 mem: storing 43 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 43
9998 run: address to copy to is 1102
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 4
9999 mem: storing 44 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 44
9998 run: address to copy to is 1104
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario_editor-can-undo-typing-multiple-2
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 5
9999 mem: storing 45 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 45
9998 run: address to copy to is 1106
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 6
9999 mem: storing 46 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 46
9998 run: address to copy to is 1108
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 7
9999 mem: storing 47 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 47
9998 run: address to copy to is 1110
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 8
9999 mem: storing 48 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 41 -> 42
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 48
9998 run: address to copy to is 1112
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 9
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 9
9999 mem: storing 49 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 42 -> 43
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 49
9998 run: address to copy to is 1114
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 63 -> 62
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 62 -> 63
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 10
9999 mem: location 1121 is 9
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 105 run: jump {: "offset"}
9998 run: jumping to instruction 9
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1132 is 1008
9999 mem: location 1133 is 1138
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    type [012]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"012": "literal-string"}
9992 load: after rewriting: type {"012": "literal-string"}
9999 mem: storing 'type' event starting at 1268
9999 mem: storing 'text' tag at 1268
9999 mem: storing character 48 at 1269
9999 mem: storing 'text' tag at 1272
9999 mem: storing character 49 at 1273
9999 mem: storing 'text' tag at 1276
9999 mem: storing character 50 at 1277
9999 mem: storing console in 1280
9999 mem: storing console data in 1282
 102 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1280
9999 mem: location 2 is 1138
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1283
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 17 in location 1284
 103 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 63 -> 64
 103 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1287
9999 mem: incrementing refcount of 1280: 0 -> 1
 103 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 6 -> 7
 103 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 103 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1290
 103 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 64 -> 65
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 64 -> 65
 103 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1280
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1246
9999 mem: incrementing refcount of 1280: 1 -> 2
 104 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1280
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "number"
9999 mem: location 1281 is 0
9999 mem: storing 0 in location 1247
 104 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "array" "event")
9999 mem: location 1282 is 1266
9999 mem: storing 1266 in location 1248
9999 mem: incrementing refcount of 1266: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 3 in location 1249
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 0
9999 mem: location 1249 is 3
9999 mem: storing 0 in location 1250
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1247 is 0
9998 run: address to copy is 1268
9998 run: its type is event
9999 mem: location 1268 is 0
9999 mem: location 1269 is 48
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: storing 0 in location 1252
9999 mem: storing 48 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1247 is 0
9999 mem: storing 1 in location 1247
 104 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1266
9999 mem: location 1247 is 1
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1281
9999 mem: storing 1 in location 1281
 104 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 48
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1246 is 1280
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1291
9999 mem: storing 48 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1280: 2 -> 1
9999 mem: storing 1280 in location 1287
9999 mem: incrementing refcount of 1280: 1 -> 2
9999 mem: storing 1 in location 1295
9999 mem: storing 0 in location 1296
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1291 is 0
9999 mem: location 1292 is 48
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1300
 103 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1286 is 1008
9999 mem: location 1288 is 1138
9999 mem: location 1291 is 0
9999 mem: location 1292 is 48
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 mem: new alloc: 1302
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: storing 0 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: storing 0 in location 1379
9999 mem: storing 0 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: storing 102 in location 1303
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 65 -> 66
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 7 -> 8
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1307
9999 mem: storing 48 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1306 is 1138
9998 run: jumping to instruction 8
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1176
 105 run: return {width: "number"}
9999 mem: location 1176 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1312
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 105 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1313
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1314
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1315
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1316
9999 mem: incrementing refcount of 1157: 10 -> 11
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1318
 104 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1319
 104 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1320
 104 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1307 is 0
9999 mem: location 1308 is 48
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 48 in location 1321
9999 mem: storing 1 in location 1322
 104 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1323
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 73
 104 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1361
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 128
 104 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1365
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 167
 104 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1376
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 206
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1377
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 227
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1380
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 249
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1381
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 285
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1382
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 321
 104 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1383
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 361
 104 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1386
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 399
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1321 is 48
9999 mem: storing 0 in location 1390
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 421
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1321 is 48
9999 mem: storing 1 in location 1391
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 104 run: jump-if {regular-character?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jumping to instruction 427
 104 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1369
9999 mem: incrementing refcount of 1157: 11 -> 12
 104 run: {cursor-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1387
9999 mem: incrementing refcount of 1157: 12 -> 13
 104 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "editor-data")}, {c: "character"}, {screen: ("address" "screen")}
9999 mem: location 1306 is 1138
9999 mem: location 1321 is 48
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1406
9999 mem: storing 0 in location 1406
9999 mem: storing 0 in location 1407
9999 mem: storing 0 in location 1408
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 31 in location 1407
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1409
9999 mem: incrementing refcount of 1138: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1410
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1411
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1412
9999 mem: incrementing refcount of 1157: 13 -> 14
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1410 is 48
9999 mem: location 1412 is 1157
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1161
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1164
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1165
9999 mem: incrementing refcount of 1157: 14 -> 15
 106 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1439
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 1439 in location 1166
9999 mem: incrementing refcount of 1439: 0 -> 1
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1166 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1164 is 48
9999 mem: location 1166 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1440
9999 mem: storing 48 in location 1440
 106 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1167
9999 mem: incrementing refcount of 1168: 11 -> 12
 106 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1439
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy to is 1159
9999 mem: storing 1439 in location 1159
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1165 is 1157
9999 mem: location 1166 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1442
9999 mem: storing 1157 in location 1442
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1157
9999 mem: location 1167 is 1168
9999 mem: location 1166 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1441
9999 mem: storing 1168 in location 1441
 106 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1167 is 1168
9998 run: jumping to instruction 12
 106 run: {next-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1166 is 1439
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1171
9999 mem: storing 1439 in location 1171
 106 run: reply {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1157
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1157
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 15 -> 16
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1439
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1439
9999 mem: storing 1439 in location 1176
9999 mem: incrementing refcount of 1439: 1 -> 2
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1439
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1439
9999 mem: decrementing refcount of 1157: 16 -> 15
9999 mem: storing 1439 in location 1412
9999 mem: incrementing refcount of 1439: 2 -> 3
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1412 is 1439
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1439 in location 1142
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1413
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1414
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1415
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1416
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1413 is 1
9999 mem: storing 1 in location 1417
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1418
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1176
 106 run: return {width: "number"}
9999 mem: location 1176 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1419
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 106 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1420
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1416 is 9
9999 mem: storing 8 in location 1421
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1421 is 8
9999 mem: storing 0 in location 1422
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 47
 105 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1414 is 1
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 1 in location 1147
 105 run: {next: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1175
9999 mem: incrementing refcount of 1439: 3 -> 4
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1439
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1168
9999 mem: location 1442 is 1157
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1441 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 12 -> 13
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1429
9999 mem: incrementing refcount of 1168: 13 -> 14
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1429 is 1168
9999 mem: storing 0 in location 1430
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 63
 105 run: jump-unless {next: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1168
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1419 is 10
9999 mem: storing 0 in location 1433
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1439
9999 mem: storing 1439 in location 1435
9999 mem: incrementing refcount of 1439: 4 -> 5
 105 run: move-cursor {screen: ("address" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1411 is 1008
9999 mem: location 1417 is 1
9999 mem: location 1418 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 71 -> 72
9990 schedule: move-cursor/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-typing-multiple-2
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1418 is 0
9999 mem: storing 0 in location 1436
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 0
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1439
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1168
9999 mem: location 1442 is 1157
9999 mem: location 1435 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1440
9998 run: its type is "character"
9999 mem: location 1440 is 48
9999 mem: storing 48 in location 1437
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 48
9999 mem: storing 0 in location 1438
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 48
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 72 -> 73
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 48
  90 print-character: 48 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 48
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 0
9999 mem: storing 10 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 48
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 48
9999 mem: location 1222 is 7
9999 mem: storing 48 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9998 run: address to copy to is 1036
9999 mem: location 1239 is 48
9999 mem: location 1240 is 7
9999 mem: storing 48 in location 1036
9999 mem: storing 7 in location 1037
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 0
9999 mem: storing 1 in location 1436
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1175
9999 mem: incrementing refcount of 1439: 5 -> 6
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1439
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1168
9999 mem: location 1442 is 1157
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1441 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 14 -> 15
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1439: 6 -> 5
9999 mem: storing 1168 in location 1435
9999 mem: incrementing refcount of 1168: 15 -> 16
 105 run: jump {: "offset"}
9998 run: jumping to instruction 72
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 1
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1168
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1439
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1437
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 97
9999 mem: storing 0 in location 1438
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 73 -> 74
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1
9999 mem: storing 11 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9998 run: address to copy to is 1038
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 1
9999 mem: storing 2 in location 1436
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1168
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1175
9999 mem: incrementing refcount of 1168: 16 -> 17
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1168
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1439
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1176
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 17 -> 16
9999 mem: storing 0 in location 1435
 105 run: jump {: "offset"}
9998 run: jumping to instruction 72
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 2
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 86
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1428
 105 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1409 is 1138
9999 mem: location 1411 is 1008
9999 mem: location 1428 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1138
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1138: 9 -> 8
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 8 -> 9
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 73 -> 74
9999 mem: storing 0 in location 1311
 104 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1371
9999 mem: incrementing refcount of 1157: 15 -> 16
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 1
9999 mem: storing 1 in location 1318
 104 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1326
 104 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jumping to instruction 451
 104 run: {insert-from: ("address" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "duplex-list" "character")}
9999 mem: location 1387 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1175
9999 mem: incrementing refcount of 1157: 16 -> 17
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1157
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1439
9999 mem: location 1160 is 0
9999 mem: location 1175 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1439
9999 mem: storing 1439 in location 1176
9999 mem: incrementing refcount of 1439: 5 -> 6
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1439
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1439
9999 mem: storing 1439 in location 1360
9999 mem: incrementing refcount of 1439: 6 -> 7
 104 run: {insert-to: ("address" "duplex-list" "character")} <- next_2 {insert-from: ("address" "duplex-list" "character")}
9999 mem: location 1360 is 1439
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1175
9999 mem: incrementing refcount of 1439: 7 -> 8
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1439
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1168
9999 mem: location 1442 is 1157
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1441 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 16 -> 17
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1389
9999 mem: incrementing refcount of 1168: 17 -> 18
 104 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
9999 mem: storing 1205 in location 1325
9999 mem: incrementing refcount of 1205: 0 -> 1
 104 run: {op: ("address" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {insert-from: ("address" "duplex-list" "character")}, {insert-to: ("address" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 mem: location 1369 is 1157
9999 mem: location 1317 is 1
9999 mem: location 1318 is 1
9999 mem: location 1371 is 1157
9999 mem: location 1360 is 1439
9999 mem: location 1389 is 1168
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 0 in location 1206
9999 mem: storing 1 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 1157 in location 1209
9999 mem: storing 1 in location 1210
9999 mem: storing 1 in location 1211
9999 mem: storing 1157 in location 1212
9999 mem: storing 1439 in location 1213
9999 mem: storing 1168 in location 1214
9999 mem: storing 1 in location 1215
 104 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1306 is 1138
9999 mem: location 1325 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1161
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1164
9999 mem: incrementing refcount of 1138: 9 -> 10
 105 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1165
9999 mem: incrementing refcount of 1205: 1 -> 2
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1166
 105 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1165 is 1205
9999 mem: location 1166 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1154
9999 mem: incrementing refcount of 1205: 2 -> 3
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1155
 106 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1443
9999 mem: storing 0 in location 1443
9999 mem: storing 0 in location 1444
9999 mem: storing 0 in location 1445
9999 mem: storing 1443 in location 1156
9999 mem: incrementing refcount of 1443: 0 -> 1
 106 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1154 is 1205
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1156 is 1443
9999 mem: skipping refcount at 1443
9999 mem: storing 1205 in location 1444
9999 mem: storing 0 in location 1445
 106 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1156 is 1443
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1443
9999 mem: storing 1443 in location 1166
9999 mem: incrementing refcount of 1443: 1 -> 2
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1166 is 1443
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1149
9999 mem: storing 1443 in location 1149
 105 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1150
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1167
 105 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1167
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1167 is 0
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1150
9999 mem: storing 0 in location 1150
 105 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1164 is 1138
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1138
9999 mem: decrementing refcount of 1138: 10 -> 9
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 9 -> 10
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1305 is 1008
9999 mem: location 1306 is 1138
9999 mem: location 1311 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1138
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 73 -> 74
9999 mem: decrementing refcount of 1138: 10 -> 9
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 9 -> 10
9999 mem: storing 0 in location 1301
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 103 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 1
9999 mem: storing 1 in location 1290
 103 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 74 -> 75
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1156
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 74 -> 75
 103 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1280
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1246
9999 mem: incrementing refcount of 1280: 2 -> 3
 104 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1280
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 1
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "number"
9999 mem: location 1281 is 1
9999 mem: storing 1 in location 1247
 104 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 1
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "array" "event")
9999 mem: location 1282 is 1266
9999 mem: storing 1266 in location 1248
9999 mem: incrementing refcount of 1266: 2 -> 3
 104 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 3 in location 1249
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 1
9999 mem: location 1249 is 3
9999 mem: storing 0 in location 1250
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1247 is 1
9998 run: address to copy is 1272
9998 run: its type is event
9999 mem: location 1272 is 0
9999 mem: location 1273 is 49
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: storing 0 in location 1252
9999 mem: storing 49 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1247 is 1
9999 mem: storing 2 in location 1247
 104 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 1
9999 mem: location 1282 is 1266
9999 mem: location 1247 is 2
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1281
9999 mem: storing 2 in location 1281
 104 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 49
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1246 is 1280
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 49, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1291
9999 mem: storing 49 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1280: 3 -> 2
9999 mem: storing 1280 in location 1287
9999 mem: incrementing refcount of 1280: 2 -> 3
9999 mem: storing 1 in location 1295
9999 mem: storing 0 in location 1296
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1291 is 0
9999 mem: location 1292 is 49
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1300
 103 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1286 is 1008
9999 mem: location 1288 is 1138
9999 mem: location 1291 is 0
9999 mem: location 1292 is 49
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1302
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 10 -> 11
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1307
9999 mem: storing 49 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1306 is 1138
9998 run: jumping to instruction 8
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1176
 105 run: return {width: "number"}
9999 mem: location 1176 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1312
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 105 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1313
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1314
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1315
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1439
9999 mem: storing 1439 in location 1316
9999 mem: incrementing refcount of 1439: 8 -> 9
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 1
9999 mem: storing 1 in location 1318
 104 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1319
 104 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1318 is 1
9999 mem: storing 1 in location 1320
 104 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1307 is 0
9999 mem: location 1308 is 49
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 49 in location 1321
9999 mem: storing 1 in location 1322
 104 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1323
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 73
 104 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1361
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 128
 104 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1365
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 167
 104 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1376
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 206
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1377
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 227
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1380
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 249
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1381
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 285
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1382
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 321
 104 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1383
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 361
 104 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1386
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 399
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1321 is 49
9999 mem: storing 0 in location 1390
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 421
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1321 is 49
9999 mem: storing 1 in location 1391
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 104 run: jump-if {regular-character?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jumping to instruction 427
 104 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1369
9999 mem: incrementing refcount of 1157: 17 -> 18
 104 run: {cursor-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1439
9999 mem: storing 1439 in location 1387
9999 mem: incrementing refcount of 1439: 9 -> 10
 104 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "editor-data")}, {c: "character"}, {screen: ("address" "screen")}
9999 mem: location 1306 is 1138
9999 mem: location 1321 is 49
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1406
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1409
9999 mem: incrementing refcount of 1138: 11 -> 12
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1410
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1411
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1439
9999 mem: storing 1439 in location 1412
9999 mem: incrementing refcount of 1439: 10 -> 11
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1410 is 49
9999 mem: location 1412 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1161
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1164
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1165
9999 mem: incrementing refcount of 1439: 11 -> 12
 106 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1446
9999 mem: storing 0 in location 1446
9999 mem: storing 0 in location 1447
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
9999 mem: storing 1446 in location 1166
9999 mem: incrementing refcount of 1446: 0 -> 1
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1166 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 0
9999 mem: location 1448 is 0
9999 mem: location 1449 is 0
9999 mem: location 1164 is 49
9999 mem: location 1166 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy to is 1447
9999 mem: storing 49 in location 1447
 106 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1165 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1168
9999 mem: location 1442 is 1157
9999 mem: location 1165 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1441 is 1168
9999 mem: storing 1168 in location 1167
9999 mem: incrementing refcount of 1168: 18 -> 19
 106 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1165 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1168
9999 mem: location 1442 is 1157
9999 mem: location 1166 is 1446
9999 mem: location 1165 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1441
9999 mem: storing 1446 in location 1441
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 0
9999 mem: location 1449 is 0
9999 mem: location 1165 is 1439
9999 mem: location 1166 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy to is 1449
9999 mem: storing 1439 in location 1449
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 0
9999 mem: location 1449 is 1439
9999 mem: location 1167 is 1168
9999 mem: location 1166 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy to is 1448
9999 mem: storing 1168 in location 1448
 106 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1167 is 1168
9998 run: jumping to instruction 12
 106 run: {next-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1439
9999 mem: location 1166 is 1446
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1171
9999 mem: storing 1446 in location 1171
 106 run: reply {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1439
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1175
9999 mem: incrementing refcount of 1439: 12 -> 13
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1439
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1446
9999 mem: location 1442 is 1157
9999 mem: location 1175 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1441 is 1446
9999 mem: storing 1446 in location 1176
9999 mem: incrementing refcount of 1446: 1 -> 2
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1446
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1446
9999 mem: decrementing refcount of 1439: 13 -> 12
9999 mem: storing 1446 in location 1412
9999 mem: incrementing refcount of 1446: 2 -> 3
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1439
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1412 is 1446
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1446 in location 1142
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1413
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 1
9999 mem: storing 1 in location 1414
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1415
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1416
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1413 is 1
9999 mem: storing 1 in location 1417
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1414 is 1
9999 mem: storing 1 in location 1418
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1176
 106 run: return {width: "number"}
9999 mem: location 1176 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1419
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 106 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1420
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1416 is 9
9999 mem: storing 8 in location 1421
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1421 is 8
9999 mem: storing 0 in location 1422
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 47
 105 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1414 is 1
9999 mem: storing 2 in location 1414
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1414 is 2
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 2 in location 1147
 105 run: {next: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1175
9999 mem: incrementing refcount of 1446: 3 -> 4
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1446
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1168
9999 mem: location 1449 is 1439
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1448 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 19 -> 20
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1429
9999 mem: incrementing refcount of 1168: 20 -> 21
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1429 is 1168
9999 mem: storing 0 in location 1430
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 63
 105 run: jump-unless {next: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1168
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1419 is 10
9999 mem: storing 0 in location 1433
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1446
9999 mem: storing 1446 in location 1435
9999 mem: incrementing refcount of 1446: 4 -> 5
 105 run: move-cursor {screen: ("address" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1411 is 1008
9999 mem: location 1417 is 1
9999 mem: location 1418 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1156
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1418 is 1
9999 mem: storing 1 in location 1436
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 1
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1446
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1168
9999 mem: location 1449 is 1439
9999 mem: location 1435 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1447
9998 run: its type is "character"
9999 mem: location 1447 is 49
9999 mem: storing 49 in location 1437
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 49
9999 mem: storing 0 in location 1438
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 49
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 49
  90 print-character: 49 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 49
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1
9999 mem: storing 11 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 45 -> 46
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 49
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 49
9999 mem: location 1222 is 7
9999 mem: storing 49 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9998 run: address to copy to is 1038
9999 mem: location 1239 is 49
9999 mem: location 1240 is 7
9999 mem: storing 49 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-typing-multiple-2
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 1
9999 mem: storing 2 in location 1436
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1175
9999 mem: incrementing refcount of 1446: 5 -> 6
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1446
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1168
9999 mem: location 1449 is 1439
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1448 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 21 -> 22
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1446: 6 -> 5
9999 mem: storing 1168 in location 1435
9999 mem: incrementing refcount of 1168: 22 -> 23
 105 run: jump {: "offset"}
9998 run: jumping to instruction 72
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 2
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1168
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1446
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1437
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 97
9999 mem: storing 0 in location 1438
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 2
9999 mem: storing 12 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 46 -> 47
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 12
9998 run: address to copy to is 1040
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 2
9999 mem: storing 3 in location 1436
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1168
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1175
9999 mem: incrementing refcount of 1168: 23 -> 24
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1168
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1446
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1176
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 24 -> 23
9999 mem: storing 0 in location 1435
 105 run: jump {: "offset"}
9998 run: jumping to instruction 72
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 3
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 86
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1428
 105 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1409 is 1138
9999 mem: location 1411 is 1008
9999 mem: location 1428 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1138
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1138: 12 -> 11
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 11 -> 12
9999 mem: decrementing refcount of 1008: 84 -> 83
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: storing 0 in location 1311
 104 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1371
9999 mem: incrementing refcount of 1157: 18 -> 19
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 2
9999 mem: storing 2 in location 1318
 104 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 1443
9999 mem: storing 1443 in location 1326
9999 mem: incrementing refcount of 1443: 2 -> 3
 104 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1326 is 1443
9998 run: jump-unless fell through
 104 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1326 is 1443
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1443 in location 1175
9999 mem: incrementing refcount of 1443: 3 -> 4
 105 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1444 is 1205
9999 mem: location 1445 is 0
9999 mem: location 1175 is 1443
9999 mem: skipping refcount at 1443
9998 run: address to copy is 1444
9998 run: its type is ("address" "operation")
9999 mem: location 1444 is 1205
9999 mem: storing 1205 in location 1176
9999 mem: incrementing refcount of 1205: 3 -> 4
 105 run: reply {result: ("address" "operation")}
9999 mem: location 1176 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: storing 1205 in location 1325
9999 mem: incrementing refcount of 1205: 4 -> 5
 104 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1157
9999 mem: location 1210 is 1
9999 mem: location 1211 is 1
9999 mem: location 1212 is 1157
9999 mem: location 1213 is 1439
9999 mem: location 1214 is 1168
9999 mem: location 1215 is 1
9999 mem: location 1216 is 0
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 1 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 1157 in location 1352
9999 mem: storing 1 in location 1353
9999 mem: storing 1 in location 1354
9999 mem: storing 1157 in location 1355
9999 mem: storing 1439 in location 1356
9999 mem: storing 1168 in location 1357
9999 mem: storing 1 in location 1358
9999 mem: storing 1 in location 1359
 104 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 1
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: "insert-operation"}, {tag: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1358
9998 run: its type is "number"
9999 mem: location 1358 is 1
9999 mem: storing 1 in location 1372
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1446
9999 mem: decrementing refcount of 1439: 12 -> 11
9999 mem: storing 1446 in location 1316
9999 mem: incrementing refcount of 1446: 5 -> 6
 104 run: {insert-until: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1316 is 1446
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1175
9999 mem: incrementing refcount of 1446: 6 -> 7
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1446
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1168
9999 mem: location 1449 is 1439
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1448 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 23 -> 24
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1388
9999 mem: incrementing refcount of 1168: 24 -> 25
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {insert-until: "offset"}, {insert-until: ("address" "duplex-list" "character")}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1388 is 1168
9998 run: address to copy to is 1357
9999 mem: storing 1168 in location 1357
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1317 is 1
9998 run: address to copy to is 1353
9999 mem: storing 1 in location 1353
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1318 is 2
9998 run: address to copy to is 1354
9999 mem: storing 2 in location 1354
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-top-of-screen: "offset"}, {top-after: ("address" "duplex-list" "character")}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1371 is 1157
9998 run: address to copy to is 1355
9999 mem: storing 1157 in location 1355
 104 run: {op: ("address" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {typing: "insert-operation"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 0 in location 1206
9999 mem: storing 1 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 1157 in location 1209
9999 mem: storing 1 in location 1210
9999 mem: storing 2 in location 1211
9999 mem: storing 1157 in location 1212
9999 mem: storing 1439 in location 1213
9999 mem: storing 1168 in location 1214
9999 mem: storing 1 in location 1215
 104 run: jump {+handle-keyboard-event_0_31+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 458
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1305 is 1008
9999 mem: location 1306 is 1138
9999 mem: location 1311 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1138
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 84 -> 83
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: decrementing refcount of 1138: 12 -> 11
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 11 -> 12
9999 mem: storing 0 in location 1301
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 103 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 2
9999 mem: storing 2 in location 1290
 103 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 2
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 84 -> 85
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1156
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 2
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 85 -> 84
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 84 -> 85
 103 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1280
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1246
9999 mem: incrementing refcount of 1280: 3 -> 4
 104 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1280
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 2
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "number"
9999 mem: location 1281 is 2
9999 mem: storing 2 in location 1247
 104 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 2
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "array" "event")
9999 mem: location 1282 is 1266
9999 mem: storing 1266 in location 1248
9999 mem: incrementing refcount of 1266: 3 -> 4
 104 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 3 in location 1249
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 2
9999 mem: location 1249 is 3
9999 mem: storing 0 in location 1250
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1247 is 2
9998 run: address to copy is 1276
9998 run: its type is event
9999 mem: location 1276 is 0
9999 mem: location 1277 is 50
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1252
9999 mem: storing 50 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1247 is 2
9999 mem: storing 3 in location 1247
 104 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 2
9999 mem: location 1282 is 1266
9999 mem: location 1247 is 3
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1281
9999 mem: storing 3 in location 1281
 104 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 50
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1246 is 1280
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 50, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1291
9999 mem: storing 50 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1280: 4 -> 3
9999 mem: storing 1280 in location 1287
9999 mem: incrementing refcount of 1280: 3 -> 4
9999 mem: storing 1 in location 1295
9999 mem: storing 0 in location 1296
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1291 is 0
9999 mem: location 1292 is 50
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1300
 103 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1286 is 1008
9999 mem: location 1288 is 1138
9999 mem: location 1291 is 0
9999 mem: location 1292 is 50
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1302
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 85 -> 86
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 12 -> 13
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1307
9999 mem: storing 50 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1306 is 1138
9998 run: jumping to instruction 8
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1176
 105 run: return {width: "number"}
9999 mem: location 1176 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1312
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 105 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1313
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1314
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1315
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1446
9999 mem: storing 1446 in location 1316
9999 mem: incrementing refcount of 1446: 7 -> 8
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 2
9999 mem: storing 2 in location 1318
 104 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1319
 104 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1318 is 2
9999 mem: storing 2 in location 1320
 104 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1307 is 0
9999 mem: location 1308 is 50
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 50 in location 1321
9999 mem: storing 1 in location 1322
 104 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1323
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 73
 104 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1361
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 128
 104 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1365
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 167
 104 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1376
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 206
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1377
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 227
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1380
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 249
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1381
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 285
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1382
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 321
 104 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1383
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 361
 104 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1386
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 399
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1321 is 50
9999 mem: storing 0 in location 1390
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 421
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1321 is 50
9999 mem: storing 1 in location 1391
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 104 run: jump-if {regular-character?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jumping to instruction 427
 104 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1369
9999 mem: incrementing refcount of 1157: 19 -> 20
 104 run: {cursor-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1446
9999 mem: storing 1446 in location 1387
9999 mem: incrementing refcount of 1446: 8 -> 9
 104 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "editor-data")}, {c: "character"}, {screen: ("address" "screen")}
9999 mem: location 1306 is 1138
9999 mem: location 1321 is 50
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1406
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1409
9999 mem: incrementing refcount of 1138: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1410
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1411
9999 mem: incrementing refcount of 1008: 88 -> 89
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1446
9999 mem: storing 1446 in location 1412
9999 mem: incrementing refcount of 1446: 9 -> 10
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1410 is 50
9999 mem: location 1412 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1161
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1164
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1165
9999 mem: incrementing refcount of 1446: 10 -> 11
 106 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1450
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 0 in location 1453
9999 mem: storing 1450 in location 1166
9999 mem: incrementing refcount of 1450: 0 -> 1
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1166 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1164 is 50
9999 mem: location 1166 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy to is 1451
9999 mem: storing 50 in location 1451
 106 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1165 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1168
9999 mem: location 1449 is 1439
9999 mem: location 1165 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1448 is 1168
9999 mem: storing 1168 in location 1167
9999 mem: incrementing refcount of 1168: 25 -> 26
 106 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1165 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1168
9999 mem: location 1449 is 1439
9999 mem: location 1166 is 1450
9999 mem: location 1165 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy to is 1448
9999 mem: storing 1450 in location 1448
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1165 is 1446
9999 mem: location 1166 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy to is 1453
9999 mem: storing 1446 in location 1453
 106 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1446
9999 mem: location 1167 is 1168
9999 mem: location 1166 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy to is 1452
9999 mem: storing 1168 in location 1452
 106 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1167 is 1168
9998 run: jumping to instruction 12
 106 run: {next-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1446
9999 mem: location 1166 is 1450
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1171
9999 mem: storing 1450 in location 1171
 106 run: reply {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1446
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1446
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1175
9999 mem: incrementing refcount of 1446: 11 -> 12
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1446
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 49
9999 mem: location 1448 is 1450
9999 mem: location 1449 is 1439
9999 mem: location 1175 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1448 is 1450
9999 mem: storing 1450 in location 1176
9999 mem: incrementing refcount of 1450: 1 -> 2
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1450
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1450
9999 mem: decrementing refcount of 1446: 12 -> 11
9999 mem: storing 1450 in location 1412
9999 mem: incrementing refcount of 1450: 2 -> 3
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1446
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1412 is 1450
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1450 in location 1142
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1413
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 2
9999 mem: storing 2 in location 1414
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1415
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1416
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1413 is 1
9999 mem: storing 1 in location 1417
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1414 is 2
9999 mem: storing 2 in location 1418
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1176
 106 run: return {width: "number"}
9999 mem: location 1176 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1419
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1175 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1176
 106 run: return {height: "number"}
9999 mem: location 1176 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1420
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1416 is 9
9999 mem: storing 8 in location 1421
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1421 is 8
9999 mem: storing 0 in location 1422
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 47
 105 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1414 is 2
9999 mem: storing 3 in location 1414
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 2
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1414 is 3
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 3 in location 1147
 105 run: {next: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1450
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1175
9999 mem: incrementing refcount of 1450: 3 -> 4
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1450
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 1168
9999 mem: location 1453 is 1446
9999 mem: location 1175 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1452
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1452 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 26 -> 27
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1429
9999 mem: incrementing refcount of 1168: 27 -> 28
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1429 is 1168
9999 mem: storing 0 in location 1430
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 63
 105 run: jump-unless {next: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1168
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1414 is 3
9999 mem: location 1419 is 10
9999 mem: storing 0 in location 1433
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1450
9999 mem: storing 1450 in location 1435
9999 mem: incrementing refcount of 1450: 4 -> 5
 105 run: move-cursor {screen: ("address" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1411 is 1008
9999 mem: location 1417 is 1
9999 mem: location 1418 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 91 -> 92
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1156
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 2
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1418 is 2
9999 mem: storing 2 in location 1436
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 2
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1450
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 1168
9999 mem: location 1453 is 1446
9999 mem: location 1435 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1451
9998 run: its type is "character"
9999 mem: location 1451 is 50
9999 mem: storing 50 in location 1437
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 50
9999 mem: storing 0 in location 1438
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 50
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 92 -> 93
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 50
  90 print-character: 50 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 50
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 2
9999 mem: storing 12 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 47 -> 48
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 50
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 50
9999 mem: location 1222 is 7
9999 mem: storing 50 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 12
9998 run: address to copy to is 1040
9999 mem: location 1239 is 50
9999 mem: location 1240 is 7
9999 mem: storing 50 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 2
9999 mem: storing 3 in location 1436
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1450
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1175
9999 mem: incrementing refcount of 1450: 5 -> 6
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1450
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 1168
9999 mem: location 1453 is 1446
9999 mem: location 1175 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1452
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1452 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 28 -> 29
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1450: 6 -> 5
9999 mem: storing 1168 in location 1435
9999 mem: incrementing refcount of 1168: 29 -> 30
 105 run: jump {: "offset"}
9998 run: jumping to instruction 72
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 3
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1168
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1450
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1437
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 97
9999 mem: storing 0 in location 1438
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 3
9999 mem: storing 13 in location 1234
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 48 -> 49
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 13
9998 run: address to copy to is 1042
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 3
9999 mem: storing 4 in location 1436
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1168
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1175
9999 mem: incrementing refcount of 1168: 30 -> 31
9990 schedule: next_2/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-typing-multiple-2
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1168
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1450
9999 mem: location 1175 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1176
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 31 -> 30
9999 mem: storing 0 in location 1435
 105 run: jump {: "offset"}
9998 run: jumping to instruction 72
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 4
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 86
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1428
 105 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1409 is 1138
9999 mem: location 1411 is 1008
9999 mem: location 1428 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1138
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1138: 14 -> 13
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 13 -> 14
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 93 -> 94
9999 mem: storing 0 in location 1311
 104 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1371
9999 mem: incrementing refcount of 1157: 20 -> 21
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 3
9999 mem: storing 3 in location 1318
 104 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 1443
9999 mem: storing 1443 in location 1326
9999 mem: incrementing refcount of 1443: 4 -> 5
 104 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1326 is 1443
9998 run: jump-unless fell through
 104 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1326 is 1443
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1443 in location 1175
9999 mem: incrementing refcount of 1443: 5 -> 6
 105 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1444 is 1205
9999 mem: location 1445 is 0
9999 mem: location 1175 is 1443
9999 mem: skipping refcount at 1443
9998 run: address to copy is 1444
9998 run: its type is ("address" "operation")
9999 mem: location 1444 is 1205
9999 mem: storing 1205 in location 1176
9999 mem: incrementing refcount of 1205: 5 -> 6
 105 run: reply {result: ("address" "operation")}
9999 mem: location 1176 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: storing 1205 in location 1325
9999 mem: incrementing refcount of 1205: 6 -> 7
 104 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1157
9999 mem: location 1210 is 1
9999 mem: location 1211 is 2
9999 mem: location 1212 is 1157
9999 mem: location 1213 is 1439
9999 mem: location 1214 is 1168
9999 mem: location 1215 is 1
9999 mem: location 1216 is 0
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 1 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 1157 in location 1352
9999 mem: storing 1 in location 1353
9999 mem: storing 2 in location 1354
9999 mem: storing 1157 in location 1355
9999 mem: storing 1439 in location 1356
9999 mem: storing 1168 in location 1357
9999 mem: storing 1 in location 1358
9999 mem: storing 1 in location 1359
 104 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 1
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: "insert-operation"}, {tag: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1358
9998 run: its type is "number"
9999 mem: location 1358 is 1
9999 mem: storing 1 in location 1372
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1450
9999 mem: decrementing refcount of 1446: 11 -> 10
9999 mem: storing 1450 in location 1316
9999 mem: incrementing refcount of 1450: 5 -> 6
 104 run: {insert-until: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1316 is 1450
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1175
9999 mem: incrementing refcount of 1450: 6 -> 7
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1450
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 1168
9999 mem: location 1453 is 1446
9999 mem: location 1175 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1452
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1452 is 1168
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 30 -> 31
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1388
9999 mem: incrementing refcount of 1168: 31 -> 32
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {insert-until: "offset"}, {insert-until: ("address" "duplex-list" "character")}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1388 is 1168
9998 run: address to copy to is 1357
9999 mem: storing 1168 in location 1357
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1317 is 1
9998 run: address to copy to is 1353
9999 mem: storing 1 in location 1353
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1318 is 3
9998 run: address to copy to is 1354
9999 mem: storing 3 in location 1354
 104 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-top-of-screen: "offset"}, {top-after: ("address" "duplex-list" "character")}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1371 is 1157
9998 run: address to copy to is 1355
9999 mem: storing 1157 in location 1355
 104 run: {op: ("address" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {typing: "insert-operation"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 0 in location 1206
9999 mem: storing 1 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 1157 in location 1209
9999 mem: storing 1 in location 1210
9999 mem: storing 3 in location 1211
9999 mem: storing 1157 in location 1212
9999 mem: storing 1439 in location 1213
9999 mem: storing 1168 in location 1214
9999 mem: storing 1 in location 1215
 104 run: jump {+handle-keyboard-event_0_31+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 458
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1305 is 1008
9999 mem: location 1306 is 1138
9999 mem: location 1311 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1138
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 93 -> 94
9999 mem: decrementing refcount of 1138: 14 -> 13
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 13 -> 14
9999 mem: storing 0 in location 1301
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 103 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 3
9999 mem: storing 3 in location 1290
 103 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 3
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 94 -> 95
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1156
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 3
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 94 -> 95
 103 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1280
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1246
9999 mem: incrementing refcount of 1280: 4 -> 5
 104 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1280
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 3
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "number"
9999 mem: location 1281 is 3
9999 mem: storing 3 in location 1247
 104 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 3
9999 mem: location 1282 is 1266
9999 mem: location 1246 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "array" "event")
9999 mem: location 1282 is 1266
9999 mem: storing 1266 in location 1248
9999 mem: incrementing refcount of 1266: 4 -> 5
 104 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 3 in location 1249
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 3
9999 mem: location 1249 is 3
9999 mem: storing 1 in location 1250
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1172
9999 mem: storing 1172 in location 1251
9999 mem: incrementing refcount of 1172: 0 -> 1
 104 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1251 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1246 is 1280
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1280: 5 -> 4
9999 mem: storing 1280 in location 1287
9999 mem: incrementing refcount of 1280: 4 -> 5
9999 mem: storing 1 in location 1295
9999 mem: storing 1 in location 1296
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1286 is 1008
9999 mem: location 1287 is 1280
9999 mem: location 1288 is 1138
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .012a      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1456
9999 mem: storing console in 1460
9999 mem: storing console data in 1462
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1460
9999 mem: location 2 is 1138
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
9999 mem: new alloc from free list: 1283
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 95 -> 96
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1460 in location 1287
9999 mem: incrementing refcount of 1460: 0 -> 1
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 14 -> 15
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 3
9999 mem: storing 3 in location 1290
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 3
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1460
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1460 in location 1246
9999 mem: incrementing refcount of 1460: 1 -> 2
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1460
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9999 mem: location 1461 is 0
9999 mem: location 1462 is 1454
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9998 run: address to copy is 1461
9998 run: its type is "number"
9999 mem: location 1461 is 0
9999 mem: storing 0 in location 1247
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9999 mem: location 1461 is 0
9999 mem: location 1462 is 1454
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9998 run: address to copy is 1462
9998 run: its type is ("address" "array" "event")
9999 mem: location 1462 is 1454
9999 mem: storing 1454 in location 1248
9999 mem: incrementing refcount of 1454: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1454
9999 mem: skipping refcount at 1454
9999 mem: storing 1 in location 1249
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 0
9999 mem: location 1249 is 1
9999 mem: storing 0 in location 1250
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1248 is 1454
9999 mem: skipping refcount at 1454
9998 run: base address is 1455
9999 mem: location 1247 is 0
9998 run: address to copy is 1456
9998 run: its type is event
9999 mem: location 1456 is 0
9999 mem: location 1457 is 26
9999 mem: location 1458 is 0
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1252
9999 mem: storing 26 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1247 is 0
9999 mem: storing 1 in location 1247
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9999 mem: location 1461 is 0
9999 mem: location 1462 is 1454
9999 mem: location 1247 is 1
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9998 run: address to copy to is 1461
9999 mem: storing 1 in location 1461
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 26
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1246 is 1460
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1460
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1291
9999 mem: storing 26 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1460: 2 -> 1
9999 mem: storing 1460 in location 1287
9999 mem: incrementing refcount of 1460: 1 -> 2
9999 mem: storing 1 in location 1295
9999 mem: storing 0 in location 1296
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1291 is 0
9999 mem: location 1292 is 26
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1300
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1286 is 1008
9999 mem: location 1288 is 1138
9999 mem: location 1291 is 0
9999 mem: location 1292 is 26
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1302
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 97 -> 98
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 15 -> 16
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1307
9999 mem: storing 26 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1306 is 1138
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1463
9999 mem: storing 0 in location 1463
9999 mem: storing 0 in location 1464
9999 mem: storing 0 in location 1465
9999 mem: storing 0 in location 1466
9999 mem: storing 0 in location 1467
9999 mem: storing 3 in location 1464
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1466
9999 mem: incrementing refcount of 1008: 98 -> 99
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1466 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1467
 106 run: return {width: "number"}
9999 mem: location 1467 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1312
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1466
9999 mem: incrementing refcount of 1008: 99 -> 100
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1466 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1467
 106 run: return {height: "number"}
9999 mem: location 1467 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1313
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1314
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1315
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1450
9999 mem: storing 1450 in location 1316
9999 mem: incrementing refcount of 1450: 7 -> 8
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 3
9999 mem: storing 3 in location 1318
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1319
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1318 is 3
9999 mem: storing 3 in location 1320
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1307 is 0
9999 mem: location 1308 is 26
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 26 in location 1321
9999 mem: storing 1 in location 1322
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1321 is 26
9999 mem: storing 0 in location 1323
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 73
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1321 is 26
9999 mem: storing 1 in location 1361
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 1443
9999 mem: storing 1443 in location 1326
9999 mem: incrementing refcount of 1443: 6 -> 7
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1326 is 1443
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1326 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1443 in location 1466
9999 mem: incrementing refcount of 1443: 7 -> 8
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1466 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1444 is 1205
9999 mem: location 1445 is 0
9999 mem: location 1466 is 1443
9999 mem: skipping refcount at 1443
9998 run: address to copy is 1444
9998 run: its type is ("address" "operation")
9999 mem: location 1444 is 1205
9999 mem: storing 1205 in location 1467
9999 mem: incrementing refcount of 1205: 7 -> 8
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1467 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1205
9999 mem: storing 1205 in location 1325
9999 mem: incrementing refcount of 1205: 8 -> 9
 105 run: {undo: ("address" "list" "address" "operation")} <- rest_2 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1326 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1443 in location 1466
9999 mem: incrementing refcount of 1443: 8 -> 9
 106 run: {result: ("address" "list" "address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1466 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1444 is 1205
9999 mem: location 1445 is 0
9999 mem: location 1466 is 1443
9999 mem: skipping refcount at 1443
9998 run: address to copy is 1445
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1467
 106 run: reply {result: ("address" "list" "address" "operation"), "contained-in": "in"}
9999 mem: location 1467 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1443: 9 -> 8
9999 mem: storing 0 in location 1326
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1443
9999 mem: location 1150 is 0
9999 mem: location 1326 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1149
9999 mem: storing 0 in location 1149
 105 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1150
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1324
 105 run: {redo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1325 is 1205
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 106 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1154
9999 mem: incrementing refcount of 1205: 9 -> 10
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1155
 106 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1468
9999 mem: storing 0 in location 1468
9999 mem: storing 0 in location 1469
9999 mem: storing 0 in location 1470
9999 mem: storing 1468 in location 1156
9999 mem: incrementing refcount of 1468: 0 -> 1
 106 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1154 is 1205
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1468
9999 mem: skipping refcount at 1468
9999 mem: location 1156 is 1468
9999 mem: skipping refcount at 1468
9999 mem: storing 1205 in location 1469
9999 mem: storing 0 in location 1470
 106 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1156 is 1468
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1468
9999 mem: storing 1468 in location 1324
9999 mem: incrementing refcount of 1468: 1 -> 2
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1324 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1150
9999 mem: storing 1468 in location 1150
 105 run: {deletion: "delete-operation"}, {is-delete?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1157
9999 mem: location 1210 is 1
9999 mem: location 1211 is 3
9999 mem: location 1212 is 1157
9999 mem: location 1213 is 1439
9999 mem: location 1214 is 1168
9999 mem: location 1215 is 1
9999 mem: location 1216 is 0
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 0 in location 1337
 105 run: jump-unless {is-delete?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 101
 105 run: {move: "move-operation"}, {is-move?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1157
9999 mem: location 1210 is 1
9999 mem: location 1211 is 3
9999 mem: location 1212 is 1157
9999 mem: location 1213 is 1439
9999 mem: location 1214 is 1168
9999 mem: location 1215 is 1
9999 mem: location 1216 is 0
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 0 in location 1349
 105 run: jump-unless {is-move?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 111
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1157
9999 mem: location 1210 is 1
9999 mem: location 1211 is 3
9999 mem: location 1212 is 1157
9999 mem: location 1213 is 1439
9999 mem: location 1214 is 1168
9999 mem: location 1215 is 1
9999 mem: location 1216 is 0
9999 mem: location 1325 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 1 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 1157 in location 1352
9999 mem: storing 1 in location 1353
9999 mem: storing 3 in location 1354
9999 mem: storing 1157 in location 1355
9999 mem: storing 1439 in location 1356
9999 mem: storing 1168 in location 1357
9999 mem: storing 1 in location 1358
9999 mem: storing 1 in location 1359
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 1
9998 run: jump-unless fell through
 105 run: {start: ("address" "duplex-list" "character")} <- get {typing: "insert-operation"}, {insert-from: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1356
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1356 is 1439
9999 mem: storing 1439 in location 1338
9999 mem: incrementing refcount of 1439: 11 -> 12
 105 run: {end: ("address" "duplex-list" "character")} <- get {typing: "insert-operation"}, {insert-until: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1357
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1357 is 1168
9999 mem: storing 1168 in location 1339
9999 mem: incrementing refcount of 1168: 32 -> 33
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- prev_2 {start: ("address" "duplex-list" "character")}
9999 mem: location 1338 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1466
9999 mem: incrementing refcount of 1439: 12 -> 13
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1466 is 1439
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1466 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1446
9999 mem: location 1442 is 1157
9999 mem: location 1466 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1442
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1442 is 1157
9999 mem: storing 1157 in location 1467
9999 mem: incrementing refcount of 1157: 21 -> 22
 106 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1467 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1450: 8 -> 7
9999 mem: storing 1157 in location 1316
9999 mem: incrementing refcount of 1157: 22 -> 23
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1450
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1316 is 1157
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1157 in location 1142
 105 run: remove-between_2 {before-cursor: ("address" "duplex-list" "character")}, {end: ("address" "duplex-list" "character")}
9999 mem: location 1316 is 1157
9999 mem: location 1339 is 1168
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {start: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1003
9999 mem: incrementing refcount of 1157: 23 -> 24
 106 run: {end: ("address" "duplex-list" "character"), "contained-in": "start"} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1004
9999 mem: incrementing refcount of 1168: 33 -> 34
 106 run: {next: ("address" "duplex-list" "character")} <- get {start: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1003 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1439
9999 mem: location 1160 is 0
9999 mem: location 1003 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1439
9999 mem: storing 1439 in location 1005
9999 mem: incrementing refcount of 1439: 13 -> 14
 106 run: {nothing-to-delete?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {end: ("address" "duplex-list" "character")}
9999 mem: location 1005 is 1439
9999 mem: location 1004 is 1168
9999 mem: storing 0 in location 1006
 106 run: jump-unless {nothing-to-delete?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 8
 106 run: assert {next: ("address" "duplex-list" "character")}, {"malformed duplex list": "literal-string"}
9999 mem: location 1005 is 1439
 106 run: {next: ("address" "duplex-list" "character"), "lookup": ()} <- put {next: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1005 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1446
9999 mem: location 1442 is 1157
9999 mem: location 1005 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1442
9999 mem: storing 0 in location 1442
 106 run: {start: ("address" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {end: ("address" "duplex-list" "character")}
9999 mem: location 1003 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1439
9999 mem: location 1160 is 0
9999 mem: location 1004 is 1168
9999 mem: location 1003 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy to is 1159
9999 mem: storing 1168 in location 1159
 106 run: jump-if {end: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1004 is 1168
9998 run: jumping to instruction 15
 106 run: {prev: ("address" "duplex-list" "character")} <- get {end: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1004 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1450
9999 mem: location 1004 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1171
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1171 is 1450
9999 mem: storing 1450 in location 1007
9999 mem: incrementing refcount of 1450: 7 -> 8
 106 run: assert {prev: ("address" "duplex-list" "character")}, {"malformed duplex list - 2": "literal-string"}
9999 mem: location 1007 is 1450
 106 run: {prev: ("address" "duplex-list" "character"), "lookup": ()} <- put {prev: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {0: "literal"}
9999 mem: location 1007 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 50
9999 mem: location 1452 is 1168
9999 mem: location 1453 is 1446
9999 mem: location 1007 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy to is 1452
9999 mem: storing 0 in location 1452
 106 run: {end: ("address" "duplex-list" "character"), "lookup": ()} <- put {end: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {start: ("address" "duplex-list" "character")}
9999 mem: location 1004 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1450
9999 mem: location 1003 is 1157
9999 mem: location 1004 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1171
9999 mem: storing 1157 in location 1171
 106 run: reply {start: ("address" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1157
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {cursor-row: "number"} <- get {typing: "insert-operation"}, {before-row: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1350
9998 run: its type is "number"
9999 mem: location 1350 is 1
9999 mem: storing 1 in location 1317
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1317 is 1
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1146
9999 mem: storing 1 in location 1146
 105 run: {cursor-column: "number"} <- get {typing: "insert-operation"}, {before-column: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1351
9998 run: its type is "number"
9999 mem: location 1351 is 0
9999 mem: storing 0 in location 1318
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 3
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1318 is 0
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 0 in location 1147
 105 run: {top: ("address" "duplex-list" "character")} <- get {typing: "insert-operation"}, {before-top-of-screen: "offset"}
9999 mem: location 1350 is 1
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1157
9999 mem: location 1353 is 1
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1157
9999 mem: location 1356 is 1439
9999 mem: location 1357 is 1168
9999 mem: location 1358 is 1
9998 run: address to copy is 1352
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1352 is 1157
9999 mem: storing 1157 in location 1341
9999 mem: incrementing refcount of 1157: 24 -> 25
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top: ("address" "duplex-list" "character")}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1341 is 1157
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1140
9999 mem: storing 1157 in location 1140
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1305 is 1008
9999 mem: location 1306 is 1138
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1138
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 99 -> 100
9999 mem: decrementing refcount of 1138: 16 -> 15
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 15 -> 16
9999 mem: storing 1 in location 1301
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen")} <- editor-render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1286 is 1008
9999 mem: location 1288 is 1138
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1129
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1132
9999 mem: incrementing refcount of 1008: 100 -> 101
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1133
9999 mem: incrementing refcount of 1138: 16 -> 17
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1134
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1133 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1135
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1132 is 1008
9999 mem: location 1133 is 1138
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1177
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1181
9999 mem: incrementing refcount of 1138: 17 -> 18
 106 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1181 is 1138
9998 run: jumping to instruction 6
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1182
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1180 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1466
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1466 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1467
 107 run: return {height: "number"}
9999 mem: location 1467 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1183
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1184
 106 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1185
9999 mem: incrementing refcount of 1157: 25 -> 26
 106 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1157
9999 mem: storing 1157 in location 1186
9999 mem: incrementing refcount of 1157: 26 -> 27
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1466
9999 mem: incrementing refcount of 1157: 27 -> 28
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1466 is 1157
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1466 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1466 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1467
9999 mem: incrementing refcount of 1168: 34 -> 35
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1467 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 28 -> 27
9999 mem: storing 1168 in location 1185
9999 mem: incrementing refcount of 1168: 35 -> 36
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1187
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1188
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1182 is 0
9999 mem: storing 0 in location 1189
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1191
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1192
9999 mem: incrementing refcount of 1157: 27 -> 28
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1180 is 1008
9999 mem: location 1188 is 1
9999 mem: location 1189 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1168
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1183 is 5
9999 mem: storing 0 in location 1193
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 1 in location 1194
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1194 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1189 is 0
9999 mem: location 1191 is 0
9999 mem: storing 1 in location 1195
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1157
9999 mem: decrementing refcount of 1157: 28 -> 27
9999 mem: storing 1157 in location 1192
9999 mem: incrementing refcount of 1157: 27 -> 28
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1185 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1185 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1196
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1187 is 7
9999 mem: location 1196 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1471
9999 mem: storing 0 in location 1471
9999 mem: storing 0 in location 1472
9999 mem: storing 0 in location 1473
9999 mem: storing 0 in location 1474
9999 mem: storing 0 in location 1475
9999 mem: storing 0 in location 1476
9999 mem: storing 0 in location 1477
9999 mem: storing 0 in location 1478
9999 mem: storing 0 in location 1479
9999 mem: storing 0 in location 1480
9999 mem: storing 0 in location 1481
9999 mem: storing 0 in location 1482
9999 mem: storing 10 in location 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1474
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1475
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1474 is 7
9999 mem: storing 1 in location 1476
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1475 is 97
9999 mem: storing 0 in location 1477
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1474 is 7
9999 mem: storing 0 in location 1478
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1475 is 97
9999 mem: storing 0 in location 1480
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1480 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1474 is 7
9999 mem: storing 0 in location 1481
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1474 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1187
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1196 is 97
9999 mem: storing 0 in location 1197
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1189 is 0
9999 mem: location 1184 is 9
9999 mem: storing 0 in location 1199
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1199 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1180 is 1008
9999 mem: location 1196 is 97
9999 mem: location 1187 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 0
9999 mem: storing 10 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9998 run: address to copy to is 1036
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1185 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1466
9999 mem: incrementing refcount of 1168: 36 -> 37
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1466 is 1168
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1466 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1466 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1467
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1467 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 37 -> 36
9999 mem: storing 0 in location 1185
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1466
9999 mem: incrementing refcount of 1157: 28 -> 29
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1466 is 1157
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1466 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1466 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1467
9999 mem: incrementing refcount of 1168: 36 -> 37
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1467 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1157: 29 -> 28
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 37 -> 38
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1189 is 0
9999 mem: storing 1 in location 1189
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jumping to instruction 70
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1185 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1141
9999 mem: storing 0 in location 1141
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 1 in location 1194
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1189 is 1
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1201
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1194 is 1
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1202
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1188 is 1
9999 mem: location 1190 is 1
9999 mem: storing 0 in location 1203
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1204
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 0
9998 run: jumping to instruction 82
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1188 is 1
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1145
9999 mem: storing 1 in location 1145
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1190 is 1
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1146
9999 mem: storing 1 in location 1146
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1191 is 0
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 0 in location 1147
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1192 is 1157
9999 mem: location 1181 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1157 in location 1142
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1188 is 1
9999 mem: location 1189 is 1
9999 mem: location 1180 is 1008
9999 mem: location 1181 is 1138
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1136
9999 mem: storing 1 in location 1137
 105 run: clear-line-delimited {screen: ("address" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1132 is 1008
9999 mem: location 1137 is 1
9999 mem: location 1135 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1120
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1
9999 mem: storing 11 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9998 run: address to copy to is 1038
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 2
9999 mem: storing 12 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 12
9998 run: address to copy to is 1040
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 3
9999 mem: storing 13 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 13
9998 run: address to copy to is 1042
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 108 -> 109
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 4
9999 mem: storing 14 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 14
9998 run: address to copy to is 1044
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 109 -> 110
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 5
9999 mem: storing 15 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 15
9998 run: address to copy to is 1046
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 110 -> 111
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 6
9999 mem: storing 16 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 16
9998 run: address to copy to is 1048
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 111 -> 112
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 7
9999 mem: storing 17 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 17
9998 run: address to copy to is 1050
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 8
9999 mem: storing 18 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 18
9998 run: address to copy to is 1052
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 113 -> 114
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 9
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 9
9999 mem: storing 19 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 19
9998 run: address to copy to is 1054
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 115 -> 114
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 114 -> 115
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 10
9999 mem: location 1121 is 9
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1136 is 1
9999 mem: storing 2 in location 1136
 105 run: draw-horizontal {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1132 is 1008
9999 mem: location 1136 is 2
9999 mem: location 1134 is 0
9999 mem: location 1135 is 9
9999 trace: incrementing callstack depth to 5
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1246
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1247
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1248
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1249
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1250
9999 mem: storing 1 in location 1251
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1252
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1254
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1247 is 2
9999 mem: location 1248 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1155
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 2
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1246
9999 mem: incrementing refcount of 1008: 116 -> 117
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 0
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 0
9999 mem: storing 20 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 20
9998 run: address to copy to is 1056
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1056
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 0
9999 mem: storing 1 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 1
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 1
9999 mem: storing 21 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 21
9998 run: address to copy to is 1058
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1058
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 1
9999 mem: storing 2 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 2
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 2
9999 mem: storing 22 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 22
9998 run: address to copy to is 1060
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1060
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 2
9999 mem: storing 3 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 3
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 3
9999 mem: storing 23 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 23
9998 run: address to copy to is 1062
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1062
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 3
9999 mem: storing 4 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 4
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 4
9999 mem: storing 24 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 24
9998 run: address to copy to is 1064
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1064
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 4
9999 mem: storing 5 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 5
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 5
9999 mem: storing 25 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 25
9998 run: address to copy to is 1066
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1066
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 5
9999 mem: storing 6 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 6
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 6
9999 mem: storing 26 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 26
9998 run: address to copy to is 1068
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1068
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 6
9999 mem: storing 7 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 7
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 7
9999 mem: storing 27 in location 1234
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 27
9998 run: address to copy to is 1070
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1070
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 7
9999 mem: storing 8 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 8
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 8
9999 mem: storing 28 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 28
9998 run: address to copy to is 1072
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1072
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 8
9999 mem: storing 9 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 9
9999 mem: location 1249 is 9
9999 mem: storing 1 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1246 is 1008
9999 mem: location 1250 is 9480
9999 mem: location 1252 is 245
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 10
9999 mem: storing 20 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 20
9999 mem: location 1230 is 9
9999 mem: storing 29 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 9480
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 9480
9999 mem: location 1222 is 245
9999 mem: storing 9480 in location 1239
9999 mem: storing 245 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 29
9998 run: address to copy to is 1074
9999 mem: location 1239 is 9480
9999 mem: location 1240 is 245
9999 mem: storing 9480 in location 1074
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1248 is 9
9999 mem: storing 10 in location 1248
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1248 is 10
9999 mem: location 1249 is 9
9999 mem: storing 0 in location 1256
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1246 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1136 is 2
9999 mem: storing 3 in location 1136
 105 run: clear-screen-from {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1132 is 1008
9999 mem: location 1136 is 3
9999 mem: location 1134 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 127 -> 128
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1155
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 3
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 128 -> 129
 106 run: clear-line-delimited {screen: ("address" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1120
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 0
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 130 -> 131
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 0
9999 mem: storing 30 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 69 -> 70
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 30
9998 run: address to copy to is 1076
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 131 -> 130
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 131 -> 132
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 1
9999 mem: storing 31 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 70 -> 71
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 31
9998 run: address to copy to is 1078
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 132 -> 133
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 2
9999 mem: storing 32 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 71 -> 72
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 32
9998 run: address to copy to is 1080
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 133 -> 132
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 133 -> 134
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 3
9999 mem: storing 33 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 72 -> 73
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 33
9998 run: address to copy to is 1082
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 134 -> 135
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 4
9999 mem: storing 34 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 34
9998 run: address to copy to is 1084
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 135 -> 134
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 135 -> 136
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 5
9999 mem: storing 35 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 74 -> 75
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 35
9998 run: address to copy to is 1086
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 136 -> 135
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 6
9999 mem: storing 36 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 36
9998 run: address to copy to is 1088
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 137 -> 138
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 7
9999 mem: storing 37 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 37
9998 run: address to copy to is 1090
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 138 -> 139
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 8
9999 mem: storing 38 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 38
9998 run: address to copy to is 1092
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 139 -> 138
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 138 -> 139
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 9
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 139 -> 140
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 10
9999 mem: storing 30 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 30
9999 mem: location 1230 is 9
9999 mem: storing 39 in location 1234
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 39
9998 run: address to copy to is 1094
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 10
9999 mem: location 1121 is 9
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1155
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 4
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1466
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1466 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1466 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1467
 108 run: return {height: "number"}
9999 mem: location 1467 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 143 -> 144
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1155
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 4
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 143 -> 144
 107 run: clear-line-delimited {screen: ("address" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 144 -> 145
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1120
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1121
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 0
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 145 -> 146
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 0
9999 mem: storing 40 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 79 -> 80
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 40
9998 run: address to copy to is 1096
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1096
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 146 -> 145
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 145 -> 146
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 146 -> 147
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 1
9999 mem: storing 41 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 80 -> 81
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 41
9998 run: address to copy to is 1098
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 147 -> 146
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 146 -> 147
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 147 -> 148
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-typing-multiple-2
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 2
9999 mem: storing 42 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 81 -> 82
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 42
9998 run: address to copy to is 1100
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 2
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 3
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 148 -> 147
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 147 -> 148
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 148 -> 149
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 3
9999 mem: storing 43 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 82 -> 83
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 43
9998 run: address to copy to is 1102
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 3
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 3
9999 mem: storing 4 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 4
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 149 -> 150
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 4
9999 mem: storing 44 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 83 -> 84
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 44
9998 run: address to copy to is 1104
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 4
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 4
9999 mem: storing 5 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 5
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 149 -> 150
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 150 -> 151
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 5
9999 mem: storing 45 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 84 -> 85
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 45
9998 run: address to copy to is 1106
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 5
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 5
9999 mem: storing 6 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 6
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 150 -> 151
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 151 -> 152
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 6
9999 mem: storing 46 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 85 -> 86
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 46
9998 run: address to copy to is 1108
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 6
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 6
9999 mem: storing 7 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 7
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 151 -> 152
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 152 -> 153
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 7
9999 mem: storing 47 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 86 -> 87
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 47
9998 run: address to copy to is 1110
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 7
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 7
9999 mem: storing 8 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 8
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 152 -> 153
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 153 -> 154
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 8
9999 mem: storing 48 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 87 -> 88
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 48
9998 run: address to copy to is 1112
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 8
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 8
9999 mem: storing 9 in location 1230
 109 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 9
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 153 -> 154
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 9
9999 mem: location 1121 is 9
9999 mem: storing 0 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 109 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 154 -> 155
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 109 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 109 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 109 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1230
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 9
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 109 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1226 is 10
9999 mem: storing 40 in location 1234
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 40
9999 mem: location 1230 is 9
9999 mem: storing 49 in location 1234
 109 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 88 -> 89
 109 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 32
9999 mem: location 1222 is 7
9999 mem: storing 32 in location 1239
9999 mem: storing 7 in location 1240
 109 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 49
9998 run: address to copy to is 1114
9999 mem: location 1239 is 32
9999 mem: location 1240 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1242
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jumping to instruction 80
 109 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 154 -> 155
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 10
9999 mem: location 1121 is 9
9999 mem: storing 1 in location 1125
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1132 is 1008
9999 mem: location 1133 is 1138
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 154 -> 155
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1290
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 155 -> 156
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 155 -> 156
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1460
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1460 in location 1246
9999 mem: incrementing refcount of 1460: 2 -> 3
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1460
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9999 mem: location 1461 is 1
9999 mem: location 1462 is 1454
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9998 run: address to copy is 1461
9998 run: its type is "number"
9999 mem: location 1461 is 1
9999 mem: storing 1 in location 1247
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9999 mem: location 1461 is 1
9999 mem: location 1462 is 1454
9999 mem: location 1246 is 1460
9999 mem: skipping refcount at 1460
9998 run: address to copy is 1462
9998 run: its type is ("address" "array" "event")
9999 mem: location 1462 is 1454
9999 mem: storing 1454 in location 1248
9999 mem: incrementing refcount of 1454: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1454
9999 mem: skipping refcount at 1454
9999 mem: storing 1 in location 1249
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 1
9999 mem: location 1249 is 1
9999 mem: storing 1 in location 1250
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1463
9999 mem: storing 1463 in location 1251
9999 mem: incrementing refcount of 1463: 0 -> 1
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1251 is 1463
9999 mem: skipping refcount at 1463
9999 mem: location 1464 is 0
9999 mem: location 1465 is 0
9999 mem: location 1466 is 0
9999 mem: location 1467 is 0
9999 mem: location 1246 is 1460
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1460
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1460: 3 -> 2
9999 mem: storing 1460 in location 1287
9999 mem: incrementing refcount of 1460: 2 -> 3
9999 mem: storing 1 in location 1295
9999 mem: storing 1 in location 1296
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1286 is 1008
9999 mem: location 1287 is 1460
9999 mem: location 1288 is 1138
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .a         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: assume-console {"\n    type [3]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"3": "literal-string"}
9992 load: after rewriting: type {"3": "literal-string"}
9999 mem: storing 'type' event starting at 1485
9999 mem: storing 'text' tag at 1485
9999 mem: storing character 51 at 1486
9999 mem: storing console in 1489
9999 mem: storing console data in 1491
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1489
9999 mem: location 2 is 1138
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
9999 mem: new alloc from free list: 1283
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 156 -> 157
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1489 in location 1287
9999 mem: incrementing refcount of 1489: 0 -> 1
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 18 -> 19
9990 schedule: editor-event-loop/run_1002/scenario_editor-can-undo-typing-multiple-2
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1290
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 157 -> 158
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 157 -> 158
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1489
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1489 in location 1246
9999 mem: incrementing refcount of 1489: 1 -> 2
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1489
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9999 mem: location 1490 is 0
9999 mem: location 1491 is 1483
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9998 run: address to copy is 1490
9998 run: its type is "number"
9999 mem: location 1490 is 0
9999 mem: storing 0 in location 1247
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9999 mem: location 1490 is 0
9999 mem: location 1491 is 1483
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9998 run: address to copy is 1491
9998 run: its type is ("address" "array" "event")
9999 mem: location 1491 is 1483
9999 mem: storing 1483 in location 1248
9999 mem: incrementing refcount of 1483: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1483
9999 mem: skipping refcount at 1483
9999 mem: storing 1 in location 1249
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 0
9999 mem: location 1249 is 1
9999 mem: storing 0 in location 1250
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1248 is 1483
9999 mem: skipping refcount at 1483
9998 run: base address is 1484
9999 mem: location 1247 is 0
9998 run: address to copy is 1485
9998 run: its type is event
9999 mem: location 1485 is 0
9999 mem: location 1486 is 51
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: storing 0 in location 1252
9999 mem: storing 51 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1247 is 0
9999 mem: storing 1 in location 1247
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9999 mem: location 1490 is 0
9999 mem: location 1491 is 1483
9999 mem: location 1247 is 1
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9998 run: address to copy to is 1490
9999 mem: storing 1 in location 1490
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 51
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1246 is 1489
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 51, 0, 0]
9998 run: result 1 is 1489
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1291
9999 mem: storing 51 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1489: 2 -> 1
9999 mem: storing 1489 in location 1287
9999 mem: incrementing refcount of 1489: 1 -> 2
9999 mem: storing 1 in location 1295
9999 mem: storing 0 in location 1296
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1291 is 0
9999 mem: location 1292 is 51
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1300
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1286 is 1008
9999 mem: location 1288 is 1138
9999 mem: location 1291 is 0
9999 mem: location 1292 is 51
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1302
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 158 -> 159
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 19 -> 20
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1307
9999 mem: storing 51 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1306 is 1138
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1492
9999 mem: storing 0 in location 1492
9999 mem: storing 0 in location 1493
9999 mem: storing 0 in location 1494
9999 mem: storing 0 in location 1495
9999 mem: storing 0 in location 1496
9999 mem: storing 3 in location 1493
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1495
9999 mem: incrementing refcount of 1008: 159 -> 160
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1495 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1496
 106 run: return {width: "number"}
9999 mem: location 1496 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1312
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1495
9999 mem: incrementing refcount of 1008: 160 -> 161
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1495 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1496
 106 run: return {height: "number"}
9999 mem: location 1496 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1313
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1314
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1315
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1316
9999 mem: incrementing refcount of 1157: 28 -> 29
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1318
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1319
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1320
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1307 is 0
9999 mem: location 1308 is 51
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 51 in location 1321
9999 mem: storing 1 in location 1322
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1323
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 73
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1361
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 128
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1365
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 167
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1376
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 206
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1377
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 227
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1380
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 249
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1381
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 285
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1382
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 321
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1383
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 361
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1386
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 399
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1321 is 51
9999 mem: storing 0 in location 1390
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 421
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1321 is 51
9999 mem: storing 1 in location 1391
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1311
 105 run: jump-if {regular-character?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jumping to instruction 427
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1369
9999 mem: incrementing refcount of 1157: 29 -> 30
 105 run: {cursor-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1387
9999 mem: incrementing refcount of 1157: 30 -> 31
 105 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "editor-data")}, {c: "character"}, {screen: ("address" "screen")}
9999 mem: location 1306 is 1138
9999 mem: location 1321 is 51
9999 mem: location 1305 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1406
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1409
9999 mem: incrementing refcount of 1138: 20 -> 21
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1410
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1411
9999 mem: incrementing refcount of 1008: 161 -> 162
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1142
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1142 is 1157
9999 mem: storing 1157 in location 1412
9999 mem: incrementing refcount of 1157: 31 -> 32
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1410 is 51
9999 mem: location 1412 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1161
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1164
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1165
9999 mem: incrementing refcount of 1157: 32 -> 33
 107 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1497
9999 mem: storing 0 in location 1497
9999 mem: storing 0 in location 1498
9999 mem: storing 0 in location 1499
9999 mem: storing 0 in location 1500
9999 mem: storing 1497 in location 1166
9999 mem: incrementing refcount of 1497: 0 -> 1
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1166 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 0
9999 mem: location 1499 is 0
9999 mem: location 1500 is 0
9999 mem: location 1164 is 51
9999 mem: location 1166 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy to is 1498
9999 mem: storing 51 in location 1498
 107 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1168
9999 mem: storing 1168 in location 1167
9999 mem: incrementing refcount of 1168: 38 -> 39
 107 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1168
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1497
9999 mem: location 1165 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy to is 1159
9999 mem: storing 1497 in location 1159
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 51
9999 mem: location 1499 is 0
9999 mem: location 1500 is 0
9999 mem: location 1165 is 1157
9999 mem: location 1166 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy to is 1500
9999 mem: storing 1157 in location 1500
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1166 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 51
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1157
9999 mem: location 1167 is 1168
9999 mem: location 1166 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy to is 1499
9999 mem: storing 1168 in location 1499
 107 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1167 is 1168
9998 run: jumping to instruction 12
 107 run: {next-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1157
9999 mem: location 1166 is 1497
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1171
9999 mem: storing 1497 in location 1171
 107 run: reply {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1157
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1495
9999 mem: incrementing refcount of 1157: 33 -> 34
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1495 is 1157
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1495 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1497
9999 mem: location 1160 is 0
9999 mem: location 1495 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1497
9999 mem: storing 1497 in location 1496
9999 mem: incrementing refcount of 1497: 1 -> 2
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1496 is 1497
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1497
9999 mem: decrementing refcount of 1157: 34 -> 33
9999 mem: storing 1497 in location 1412
9999 mem: incrementing refcount of 1497: 2 -> 3
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1157
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1412 is 1497
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1142
9999 mem: storing 1497 in location 1142
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1413
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1414
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1415
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1144
9998 run: its type is "number"
9999 mem: location 1144 is 9
9999 mem: storing 9 in location 1416
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1413 is 1
9999 mem: storing 1 in location 1417
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1418
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1495
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1495 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1496
 107 run: return {width: "number"}
9999 mem: location 1496 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1419
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1495
9999 mem: incrementing refcount of 1008: 163 -> 164
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1495 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1495 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1496
 107 run: return {height: "number"}
9999 mem: location 1496 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1420
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1416 is 9
9999 mem: storing 8 in location 1421
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1421 is 8
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 47
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1414 is 1
9999 mem: location 1409 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1147
9999 mem: storing 1 in location 1147
 106 run: {next: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1497
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1497 in location 1495
9999 mem: incrementing refcount of 1497: 3 -> 4
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1495 is 1497
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1495 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 51
9999 mem: location 1499 is 1168
9999 mem: location 1500 is 1157
9999 mem: location 1495 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy is 1499
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1499 is 1168
9999 mem: storing 1168 in location 1496
9999 mem: incrementing refcount of 1168: 39 -> 40
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1496 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1429
9999 mem: incrementing refcount of 1168: 40 -> 41
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1429 is 1168
9999 mem: storing 0 in location 1430
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 63
 106 run: jump-unless {next: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1168
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1419 is 10
9999 mem: storing 0 in location 1433
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1412 is 1497
9999 mem: storing 1497 in location 1435
9999 mem: incrementing refcount of 1497: 4 -> 5
 106 run: move-cursor {screen: ("address" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1411 is 1008
9999 mem: location 1417 is 1
9999 mem: location 1418 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 164 -> 165
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1156
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 0
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1418 is 0
9999 mem: storing 0 in location 1436
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 0
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1497
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 51
9999 mem: location 1499 is 1168
9999 mem: location 1500 is 1157
9999 mem: location 1435 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy is 1498
9998 run: its type is "character"
9999 mem: location 1498 is 51
9999 mem: storing 51 in location 1437
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 51
9999 mem: storing 0 in location 1438
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 51
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 51
  90 print-character: 51 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 51
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 0
9999 mem: storing 10 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 89 -> 90
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 51
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 51
9999 mem: location 1222 is 7
9999 mem: storing 51 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9998 run: address to copy to is 1036
9999 mem: location 1239 is 51
9999 mem: location 1240 is 7
9999 mem: storing 51 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 0
9999 mem: storing 1 in location 1436
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1497
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1497 in location 1495
9999 mem: incrementing refcount of 1497: 5 -> 6
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1495 is 1497
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1495 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 51
9999 mem: location 1499 is 1168
9999 mem: location 1500 is 1157
9999 mem: location 1495 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy is 1499
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1499 is 1168
9999 mem: storing 1168 in location 1496
9999 mem: incrementing refcount of 1168: 41 -> 42
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1496 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1497: 6 -> 5
9999 mem: storing 1168 in location 1435
9999 mem: incrementing refcount of 1168: 42 -> 43
 106 run: jump {: "offset"}
9998 run: jumping to instruction 72
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 1
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1168
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1497
9999 mem: location 1435 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1169
9998 run: its type is "character"
9999 mem: location 1169 is 97
9999 mem: storing 97 in location 1437
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 97
9999 mem: storing 0 in location 1438
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1222
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1226 is 10
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1
9999 mem: storing 11 in location 1234
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 90 -> 91
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1221 is 97
9999 mem: location 1222 is 7
9999 mem: storing 97 in location 1239
9999 mem: storing 7 in location 1240
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9998 run: address to copy to is 1038
9999 mem: location 1239 is 97
9999 mem: location 1240 is 7
9999 mem: storing 97 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 10
9999 mem: storing 9 in location 1241
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1242
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 2
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 1
9999 mem: storing 2 in location 1436
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1435 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1495
9999 mem: incrementing refcount of 1168: 43 -> 44
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1495 is 1168
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1495 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 97
9999 mem: location 1170 is 0
9999 mem: location 1171 is 1497
9999 mem: location 1495 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1496
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1496 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1168: 44 -> 43
9999 mem: storing 0 in location 1435
 106 run: jump {: "offset"}
9998 run: jumping to instruction 72
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 2
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 86
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1428
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1409 is 1138
9999 mem: location 1411 is 1008
9999 mem: location 1428 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1138
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1138: 21 -> 20
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 20 -> 21
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: storing 0 in location 1311
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1140
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1140 is 1157
9999 mem: storing 1157 in location 1371
9999 mem: incrementing refcount of 1157: 33 -> 34
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1317
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 1
9999 mem: storing 1 in location 1318
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1306 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1326
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jumping to instruction 451
 105 run: {insert-from: ("address" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "duplex-list" "character")}
9999 mem: location 1387 is 1157
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1495
9999 mem: incrementing refcount of 1157: 34 -> 35
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1495 is 1157
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1495 is 1157
9999 mem: skipping refcount at 1157
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1497
9999 mem: location 1160 is 0
9999 mem: location 1495 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1159
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1159 is 1497
9999 mem: storing 1497 in location 1496
9999 mem: incrementing refcount of 1497: 5 -> 6
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1496 is 1497
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1497
9999 mem: storing 1497 in location 1360
9999 mem: incrementing refcount of 1497: 6 -> 7
 105 run: {insert-to: ("address" "duplex-list" "character")} <- next_2 {insert-from: ("address" "duplex-list" "character")}
9999 mem: location 1360 is 1497
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1497 in location 1495
9999 mem: incrementing refcount of 1497: 7 -> 8
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1495 is 1497
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1495 is 1497
9999 mem: skipping refcount at 1497
9999 mem: location 1498 is 51
9999 mem: location 1499 is 1168
9999 mem: location 1500 is 1157
9999 mem: location 1495 is 1497
9999 mem: skipping refcount at 1497
9998 run: address to copy is 1499
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1499 is 1168
9999 mem: storing 1168 in location 1496
9999 mem: incrementing refcount of 1168: 43 -> 44
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1496 is 1168
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1168
9999 mem: storing 1168 in location 1389
9999 mem: incrementing refcount of 1168: 44 -> 45
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1471
9999 mem: storing 1471 in location 1325
9999 mem: incrementing refcount of 1471: 0 -> 1
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {insert-from: ("address" "duplex-list" "character")}, {insert-to: ("address" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 mem: location 1369 is 1157
9999 mem: location 1317 is 1
9999 mem: location 1318 is 1
9999 mem: location 1371 is 1157
9999 mem: location 1360 is 1497
9999 mem: location 1389 is 1168
9999 mem: location 1325 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1325 is 1471
9999 mem: skipping refcount at 1471
9999 mem: storing 0 in location 1472
9999 mem: storing 1 in location 1473
9999 mem: storing 0 in location 1474
9999 mem: storing 1157 in location 1475
9999 mem: storing 1 in location 1476
9999 mem: storing 1 in location 1477
9999 mem: storing 1157 in location 1478
9999 mem: storing 1497 in location 1479
9999 mem: storing 1168 in location 1480
9999 mem: storing 1 in location 1481
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1306 is 1138
9999 mem: location 1325 is 1471
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1161
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1138 in location 1164
9999 mem: incrementing refcount of 1138: 21 -> 22
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1471 in location 1165
9999 mem: incrementing refcount of 1471: 1 -> 2
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1149
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1166
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1165 is 1471
9999 mem: location 1166 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1471 in location 1154
9999 mem: incrementing refcount of 1471: 2 -> 3
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1155
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1501
9999 mem: storing 0 in location 1501
9999 mem: storing 0 in location 1502
9999 mem: storing 0 in location 1503
9999 mem: storing 1501 in location 1156
9999 mem: incrementing refcount of 1501: 0 -> 1
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1154 is 1471
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1501
9999 mem: skipping refcount at 1501
9999 mem: location 1156 is 1501
9999 mem: skipping refcount at 1501
9999 mem: storing 1471 in location 1502
9999 mem: storing 0 in location 1503
 107 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1156 is 1501
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1501
9999 mem: storing 1501 in location 1166
9999 mem: incrementing refcount of 1501: 1 -> 2
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1468
9999 mem: location 1166 is 1501
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1149
9999 mem: storing 1501 in location 1149
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1501
9999 mem: location 1150 is 1468
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1150
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1150 is 1468
9999 mem: storing 1468 in location 1167
9999 mem: incrementing refcount of 1468: 2 -> 3
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: decrementing refcount of 1468: 3 -> 2
9999 mem: storing 0 in location 1167
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1501
9999 mem: location 1150 is 1468
9999 mem: location 1167 is 0
9999 mem: location 1164 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy to is 1150
9999 mem: storing 0 in location 1150
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1164 is 1138
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1138
9999 mem: decrementing refcount of 1138: 22 -> 21
9999 mem: storing 1138 in location 1306
9999 mem: incrementing refcount of 1138: 21 -> 22
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1305 is 1008
9999 mem: location 1306 is 1138
9999 mem: location 1311 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1138
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: decrementing refcount of 1138: 22 -> 21
9999 mem: storing 1138 in location 1288
9999 mem: incrementing refcount of 1138: 21 -> 22
9999 mem: storing 0 in location 1301
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1501
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1289
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9999 mem: location 1139 is 1157
9999 mem: location 1140 is 1157
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1497
9999 mem: location 1143 is 0
9999 mem: location 1144 is 9
9999 mem: location 1145 is 1
9999 mem: location 1146 is 1
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1501
9999 mem: location 1150 is 0
9999 mem: location 1288 is 1138
9999 mem: skipping refcount at 1138
9998 run: address to copy is 1147
9998 run: its type is "number"
9999 mem: location 1147 is 1
9999 mem: storing 1 in location 1290
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1286 is 1008
9999 mem: location 1289 is 1
9999 mem: location 1290 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1151
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1154
9999 mem: incrementing refcount of 1008: 167 -> 168
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1155
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1156
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1154 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1155 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1156 is 1
9999 mem: location 1154 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1154 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 168 -> 167
9999 mem: storing 1008 in location 1286
9999 mem: incrementing refcount of 1008: 167 -> 168
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1287 is 1489
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1243
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1489 in location 1246
9999 mem: incrementing refcount of 1489: 2 -> 3
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1246 is 1489
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9999 mem: location 1490 is 1
9999 mem: location 1491 is 1483
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9998 run: address to copy is 1490
9998 run: its type is "number"
9999 mem: location 1490 is 1
9999 mem: storing 1 in location 1247
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9999 mem: location 1490 is 1
9999 mem: location 1491 is 1483
9999 mem: location 1246 is 1489
9999 mem: skipping refcount at 1489
9998 run: address to copy is 1491
9998 run: its type is ("address" "array" "event")
9999 mem: location 1491 is 1483
9999 mem: storing 1483 in location 1248
9999 mem: incrementing refcount of 1483: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1248 is 1483
9999 mem: skipping refcount at 1483
9999 mem: storing 1 in location 1249
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1247 is 1
9999 mem: location 1249 is 1
9999 mem: storing 1 in location 1250
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1492
9999 mem: storing 1492 in location 1251
9999 mem: incrementing refcount of 1492: 0 -> 1
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1251 is 1492
9999 mem: skipping refcount at 1492
9999 mem: location 1493 is 0
9999 mem: location 1494 is 0
9999 mem: location 1495 is 0
9999 mem: location 1496 is 0
9999 mem: location 1246 is 1489
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1489
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: decrementing refcount of 1489: 3 -> 2
9999 mem: storing 1489 in location 1287
9999 mem: incrementing refcount of 1489: 2 -> 3
9999 mem: storing 1 in location 1295
9999 mem: storing 1 in location 1296
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1286 is 1008
9999 mem: location 1287 is 1489
9999 mem: location 1288 is 1138
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .3a        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
