9991 parse: --- defining scenario_editor-combines-page-and-line-scroll
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {4: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\nc\nd\ne\nf\ng": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"a\nb\nc\nd\ne\nf\ng": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {5: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n    left-click 3, 0\n    press down-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n    left-click 3, 0\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .d         .\n    .e         .\n    .f         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .d         .\n    .e         .\n    .f         .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-combines-page-and-line-scroll has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- deduce types for recipe scenario_editor-combines-page-and-line-scroll
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- collect surrounding spaces for recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- transform names for recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-combines-page-and-line-scroll
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- transform braces for recipe scenario_editor-combines-page-and-line-scroll
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- type-check calls inside recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- type-check merge instructions in recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- check types of reply instructions in recipe scenario_editor-combines-page-and-line-scroll
9991 transform: --- checking reply instructions against header for scenario_editor-combines-page-and-line-scroll
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-combines-page-and-line-scroll
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 4
9999 mem: storing 40 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 40
9999 mem: array size is 40
9999 mem: allocating size 82
9999 mem: new alloc: 1014
9999 mem: storing 40 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 4
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 4 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1096
9999 mem: storing 7 in location 1097
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1099 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1100
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1101
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1102
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 0
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 0
9999 mem: storing 1016 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1016
9999 mem: location 1104 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 1
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 1
9999 mem: storing 1018 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1018
9999 mem: location 1104 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 1
9999 mem: storing 2 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 2
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 2
9999 mem: storing 1020 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1020
9999 mem: location 1104 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 2
9999 mem: storing 3 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 3
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 3
9999 mem: storing 1022 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1022
9999 mem: location 1104 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 3
9999 mem: storing 4 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 4
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 4
9999 mem: storing 1024 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1024
9999 mem: location 1104 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 4
9999 mem: storing 5 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 5
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 5
9999 mem: storing 1026 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1026
9999 mem: location 1104 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 5
9999 mem: storing 6 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 6
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 6
9999 mem: storing 1028 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1028
9999 mem: location 1104 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 6
9999 mem: storing 7 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 7
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 7
9999 mem: storing 1030 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1030
9999 mem: location 1104 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 7
9999 mem: storing 8 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 8
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 8
9999 mem: storing 1032 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1032
9999 mem: location 1104 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 8
9999 mem: storing 9 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 9
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 9
9999 mem: storing 1034 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1034
9999 mem: location 1104 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 9
9999 mem: storing 10 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 10
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 10
9999 mem: storing 1036 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1036
9999 mem: location 1104 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 10
9999 mem: storing 11 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 11
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 11
9999 mem: storing 1038 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1038
9999 mem: location 1104 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 11
9999 mem: storing 12 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 12
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 12
9999 mem: storing 1040 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1040
9999 mem: location 1104 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 12
9999 mem: storing 13 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 13
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 13
9999 mem: storing 1042 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1042
9999 mem: location 1104 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 13
9999 mem: storing 14 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 14
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 14
9999 mem: storing 1044 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1044
9999 mem: location 1104 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 14
9999 mem: storing 15 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 15
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 15
9999 mem: storing 1046 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1046
9999 mem: location 1104 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 15
9999 mem: storing 16 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 16
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 16
9999 mem: storing 1048 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1048
9999 mem: location 1104 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 16
9999 mem: storing 17 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 17
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 17
9999 mem: storing 1050 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1050
9999 mem: location 1104 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 17
9999 mem: storing 18 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 18
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 18
9999 mem: storing 1052 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1052
9999 mem: location 1104 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 18
9999 mem: storing 19 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 19
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 19
9999 mem: storing 1054 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1054
9999 mem: location 1104 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 19
9999 mem: storing 20 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 20
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 20
9999 mem: storing 1056 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1056
9999 mem: location 1104 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 20
9999 mem: storing 21 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 21
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 21
9999 mem: storing 1058 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1058
9999 mem: location 1104 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 21
9999 mem: storing 22 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 22
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 22
9999 mem: storing 1060 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1060
9999 mem: location 1104 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 22
9999 mem: storing 23 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 23
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 23
9999 mem: storing 1062 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1062
9999 mem: location 1104 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 23
9999 mem: storing 24 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 24
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 24
9999 mem: storing 1064 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1064
9999 mem: location 1104 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 24
9999 mem: storing 25 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 25
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 25
9999 mem: storing 1066 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1066
9999 mem: location 1104 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 25
9999 mem: storing 26 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 26
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 26
9999 mem: storing 1068 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1068
9999 mem: location 1104 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 26
9999 mem: storing 27 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 27
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 27
9999 mem: storing 1070 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1070
9999 mem: location 1104 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 27
9999 mem: storing 28 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 28
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 28
9999 mem: storing 1072 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1072
9999 mem: location 1104 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 28
9999 mem: storing 29 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 29
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 29
9999 mem: storing 1074 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1074
9999 mem: location 1104 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 29
9999 mem: storing 30 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 30
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 30
9999 mem: storing 1076 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1076
9999 mem: location 1104 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 30
9999 mem: storing 31 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 31
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 31
9999 mem: storing 1078 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1078
9999 mem: location 1104 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 31
9999 mem: storing 32 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 32
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 32
9999 mem: storing 1080 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1080
9999 mem: location 1104 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 32
9999 mem: storing 33 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 33
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 33
9999 mem: storing 1082 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1082
9999 mem: location 1104 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 33
9999 mem: storing 34 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 34
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 34
9999 mem: storing 1084 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1084
9999 mem: location 1104 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 34
9999 mem: storing 35 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 35
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 35
9999 mem: storing 1086 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1086
9999 mem: location 1104 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 35
9999 mem: storing 36 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 36
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 36
9999 mem: storing 1088 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1088
9999 mem: location 1104 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 36
9999 mem: storing 37 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 37
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 37
9999 mem: storing 1090 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1090
9999 mem: location 1104 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 37
9999 mem: storing 38 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 38
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 38
9999 mem: storing 1092 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1092
9999 mem: location 1104 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 38
9999 mem: storing 39 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 39
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 39
9999 mem: storing 1094 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1094
9999 mem: location 1104 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 39
9999 mem: storing 40 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 40
9999 mem: location 1101 is 40
9999 mem: storing 1 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"a\nb\nc\nd\ne\nf\ng": "literal-string"}
9999 mem: new string alloc: 1105
9999 mem: storing 1105 in location 1
9999 mem: incrementing refcount of 1105: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9999 mem: location 1 is 1105
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1105 in location 1099
9999 mem: incrementing refcount of 1105: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1100
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1101
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1102
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1102 is 5
9999 mem: storing 4 in location 1102
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1120
9999 mem: storing 1120 in location 1103
9999 mem: incrementing refcount of 1120: 0 -> 1
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}, {left: "number"}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1101 is 0
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1125
9999 mem: storing 0 in location 1125
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}, {right: "number"}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1126
9999 mem: storing 4 in location 1126
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {1: "literal", "top": ()}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1128
9999 mem: storing 1 in location 1128
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {left: "number"}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1101 is 0
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1129
9999 mem: storing 0 in location 1129
 103 run: {init: ("address" "shared" "duplex-list" "character")} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1133
9999 mem: storing 4 in location 1134
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1136
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1137
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1136 is 167
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1138 is 1139
9999 mem: skipping refcount at 1139
9999 mem: storing 167 in location 1140
9999 mem: storing 0 in location 1141
9999 mem: storing 0 in location 1142
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1137 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1104
9999 mem: incrementing refcount of 1139: 1 -> 2
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1104 is 1139
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1121
9999 mem: storing 1139 in location 1121
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1104 is 1139
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1122
9999 mem: storing 1139 in location 1122
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1104 is 1139
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1139 in location 1124
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1103 is 1120
9999 mem: location 1099 is 1105
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1143
9999 mem: storing 8 in location 1144
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1146
9999 mem: incrementing refcount of 1120: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1105 in location 1147
9999 mem: incrementing refcount of 1105: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1147 is 1105
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9999 mem: storing 13 in location 1148
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1148 is 13
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1149
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1146 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1146 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1121
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1121 is 1139
9999 mem: storing 1139 in location 1150
9999 mem: incrementing refcount of 1139: 2 -> 3
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 0
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 0
9998 run: address to copy is 1107
9998 run: its type is character
9999 mem: location 1107 is 97
9999 mem: storing 97 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 97
9999 mem: location 1150 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1153
9999 mem: storing 5 in location 1154
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1157
9999 mem: incrementing refcount of 1139: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1160
9999 mem: storing 1160 in location 1158
9999 mem: incrementing refcount of 1160: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1156 is 97
9999 mem: location 1158 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1161
9999 mem: storing 97 in location 1161
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 167
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1157 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 167
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1158 is 1160
9999 mem: location 1157 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy to is 1141
9999 mem: storing 1160 in location 1141
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1157 is 1139
9999 mem: location 1158 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1163
9999 mem: storing 1139 in location 1163
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1139
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1162
9999 mem: storing 0 in location 1162
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1139
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1164
9999 mem: storing 3 in location 1165
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1167
9999 mem: incrementing refcount of 1139: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1139
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 167
9999 mem: location 1141 is 1160
9999 mem: location 1142 is 0
9999 mem: location 1167 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1160
9999 mem: storing 1160 in location 1168
9999 mem: incrementing refcount of 1160: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1160
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1160
9999 mem: decrementing refcount of 1139: 5 -> 4
9999 mem: storing 1160 in location 1150
9999 mem: incrementing refcount of 1160: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 0
9999 mem: storing 1 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 1
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 1
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 10
9999 mem: storing 10 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 10
9999 mem: location 1150 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1157
9999 mem: incrementing refcount of 1160: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1169
9999 mem: storing 1169 in location 1158
9999 mem: incrementing refcount of 1169: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1156 is 10
9999 mem: location 1158 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy to is 1170
9999 mem: storing 10 in location 1170
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1139
9999 mem: location 1157 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1139
9999 mem: location 1158 is 1169
9999 mem: location 1157 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy to is 1162
9999 mem: storing 1169 in location 1162
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1157 is 1160
9999 mem: location 1158 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy to is 1172
9999 mem: storing 1160 in location 1172
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1160
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy to is 1171
9999 mem: storing 0 in location 1171
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1160
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1167
9999 mem: incrementing refcount of 1160: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1169
9999 mem: location 1163 is 1139
9999 mem: location 1167 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1169
9999 mem: storing 1169 in location 1168
9999 mem: incrementing refcount of 1169: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1160: 5 -> 4
9999 mem: storing 1169 in location 1150
9999 mem: incrementing refcount of 1169: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 1
9999 mem: storing 2 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 2
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 2
9998 run: address to copy is 1109
9998 run: its type is character
9999 mem: location 1109 is 98
9999 mem: storing 98 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 98
9999 mem: location 1150 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1157
9999 mem: incrementing refcount of 1169: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1173
9999 mem: storing 1173 in location 1158
9999 mem: incrementing refcount of 1173: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1156 is 98
9999 mem: location 1158 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy to is 1174
9999 mem: storing 98 in location 1174
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1160
9999 mem: location 1157 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1171
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1160
9999 mem: location 1158 is 1173
9999 mem: location 1157 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy to is 1171
9999 mem: storing 1173 in location 1171
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1157 is 1169
9999 mem: location 1158 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy to is 1176
9999 mem: storing 1169 in location 1176
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1169
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy to is 1175
9999 mem: storing 0 in location 1175
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1169
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1167
9999 mem: incrementing refcount of 1169: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1160
9999 mem: location 1167 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1171
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1168
9999 mem: incrementing refcount of 1173: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1173
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1173
9999 mem: decrementing refcount of 1169: 5 -> 4
9999 mem: storing 1173 in location 1150
9999 mem: incrementing refcount of 1173: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 2
9999 mem: storing 3 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 3
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 3
9998 run: address to copy is 1110
9998 run: its type is character
9999 mem: location 1110 is 10
9999 mem: storing 10 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 10
9999 mem: location 1150 is 1173
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1157
9999 mem: incrementing refcount of 1173: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1177
9999 mem: storing 1177 in location 1158
9999 mem: incrementing refcount of 1177: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1156 is 10
9999 mem: location 1158 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy to is 1178
9999 mem: storing 10 in location 1178
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1169
9999 mem: location 1157 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1169
9999 mem: location 1158 is 1177
9999 mem: location 1157 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy to is 1175
9999 mem: storing 1177 in location 1175
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1157 is 1173
9999 mem: location 1158 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy to is 1180
9999 mem: storing 1173 in location 1180
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy to is 1179
9999 mem: storing 0 in location 1179
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1173
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1173
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1167
9999 mem: incrementing refcount of 1173: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1173
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1169
9999 mem: location 1167 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1168
9999 mem: incrementing refcount of 1177: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1173: 5 -> 4
9999 mem: storing 1177 in location 1150
9999 mem: incrementing refcount of 1177: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 3
9999 mem: storing 4 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 4
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 4
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 99
9999 mem: storing 99 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 99
9999 mem: location 1150 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1157
9999 mem: incrementing refcount of 1177: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1181
9999 mem: storing 1181 in location 1158
9999 mem: incrementing refcount of 1181: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1156 is 99
9999 mem: location 1158 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1182
9999 mem: storing 99 in location 1182
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1173
9999 mem: location 1157 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1173
9999 mem: location 1158 is 1181
9999 mem: location 1157 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy to is 1179
9999 mem: storing 1181 in location 1179
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1184
9999 mem: storing 1177 in location 1184
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1177
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1183
9999 mem: storing 0 in location 1183
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1177
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 5 -> 4
9999 mem: storing 1181 in location 1150
9999 mem: incrementing refcount of 1181: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 4
9999 mem: storing 5 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 5
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 5
9998 run: address to copy is 1112
9998 run: its type is character
9999 mem: location 1112 is 10
9999 mem: storing 10 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 10
9999 mem: location 1150 is 1181
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1157
9999 mem: incrementing refcount of 1181: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1185
9999 mem: storing 1185 in location 1158
9999 mem: incrementing refcount of 1185: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1156 is 10
9999 mem: location 1158 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1186
9999 mem: storing 10 in location 1186
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1177
9999 mem: location 1157 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1177
9999 mem: location 1158 is 1185
9999 mem: location 1157 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy to is 1183
9999 mem: storing 1185 in location 1183
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1157 is 1181
9999 mem: location 1158 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1188
9999 mem: storing 1181 in location 1188
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1181
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1187
9999 mem: storing 0 in location 1187
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1181
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1181
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 5 -> 4
9999 mem: storing 1185 in location 1150
9999 mem: incrementing refcount of 1185: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 5
9999 mem: storing 6 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 6
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 6
9998 run: address to copy is 1113
9998 run: its type is character
9999 mem: location 1113 is 100
9999 mem: storing 100 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 100
9999 mem: location 1150 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1157
9999 mem: incrementing refcount of 1185: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1189
9999 mem: storing 1189 in location 1158
9999 mem: incrementing refcount of 1189: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1156 is 100
9999 mem: location 1158 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1190
9999 mem: storing 100 in location 1190
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1181
9999 mem: location 1157 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1181
9999 mem: location 1158 is 1189
9999 mem: location 1157 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1187
9999 mem: storing 1189 in location 1187
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1157 is 1185
9999 mem: location 1158 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1192
9999 mem: storing 1185 in location 1192
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 0
9999 mem: location 1192 is 1185
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1191
9999 mem: storing 0 in location 1191
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1185
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 5 -> 4
9999 mem: storing 1189 in location 1150
9999 mem: incrementing refcount of 1189: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 6
9999 mem: storing 7 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 7
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 7
9998 run: address to copy is 1114
9998 run: its type is character
9999 mem: location 1114 is 10
9999 mem: storing 10 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 10
9999 mem: location 1150 is 1189
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1157
9999 mem: incrementing refcount of 1189: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1193
9999 mem: storing 1193 in location 1158
9999 mem: incrementing refcount of 1193: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1156 is 10
9999 mem: location 1158 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy to is 1194
9999 mem: storing 10 in location 1194
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 0
9999 mem: location 1192 is 1185
9999 mem: location 1157 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 0
9999 mem: location 1192 is 1185
9999 mem: location 1158 is 1193
9999 mem: location 1157 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1191
9999 mem: storing 1193 in location 1191
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1157 is 1189
9999 mem: location 1158 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy to is 1196
9999 mem: storing 1189 in location 1196
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1189
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy to is 1195
9999 mem: storing 0 in location 1195
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1189
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1189
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 5 -> 4
9999 mem: storing 1193 in location 1150
9999 mem: incrementing refcount of 1193: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 7
9999 mem: storing 8 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 8
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 8
9998 run: address to copy is 1115
9998 run: its type is character
9999 mem: location 1115 is 101
9999 mem: storing 101 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 101
9999 mem: location 1150 is 1193
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1157
9999 mem: incrementing refcount of 1193: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1197
9999 mem: storing 1197 in location 1158
9999 mem: incrementing refcount of 1197: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1156 is 101
9999 mem: location 1158 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy to is 1198
9999 mem: storing 101 in location 1198
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1189
9999 mem: location 1157 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1189
9999 mem: location 1158 is 1197
9999 mem: location 1157 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy to is 1195
9999 mem: storing 1197 in location 1195
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1157 is 1193
9999 mem: location 1158 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy to is 1200
9999 mem: storing 1193 in location 1200
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 0
9999 mem: location 1200 is 1193
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy to is 1199
9999 mem: storing 0 in location 1199
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1193
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1193
9999 trace: incrementing callstack depth to 4
9990 schedule: next_2/insert-text/new-editor/scenario_editor-combines-page-and-line-scroll
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 5 -> 4
9999 mem: storing 1197 in location 1150
9999 mem: incrementing refcount of 1197: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 8
9999 mem: storing 9 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 9
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 9
9998 run: address to copy is 1116
9998 run: its type is character
9999 mem: location 1116 is 10
9999 mem: storing 10 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 10
9999 mem: location 1150 is 1197
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1157
9999 mem: incrementing refcount of 1197: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1201
9999 mem: storing 1201 in location 1158
9999 mem: incrementing refcount of 1201: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1156 is 10
9999 mem: location 1158 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1202
9999 mem: storing 10 in location 1202
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 0
9999 mem: location 1200 is 1193
9999 mem: location 1157 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 0
9999 mem: location 1200 is 1193
9999 mem: location 1158 is 1201
9999 mem: location 1157 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy to is 1199
9999 mem: storing 1201 in location 1199
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1157 is 1197
9999 mem: location 1158 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1204
9999 mem: storing 1197 in location 1204
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1203
9999 mem: storing 0 in location 1203
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1197
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1197
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 5 -> 4
9999 mem: storing 1201 in location 1150
9999 mem: incrementing refcount of 1201: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 9
9999 mem: storing 10 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 10
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 10
9998 run: address to copy is 1117
9998 run: its type is character
9999 mem: location 1117 is 102
9999 mem: storing 102 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 102
9999 mem: location 1150 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1157
9999 mem: incrementing refcount of 1201: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1205
9999 mem: storing 1205 in location 1158
9999 mem: incrementing refcount of 1205: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1156 is 102
9999 mem: location 1158 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1206
9999 mem: storing 102 in location 1206
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1157 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1158 is 1205
9999 mem: location 1157 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1203
9999 mem: storing 1205 in location 1203
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1157 is 1201
9999 mem: location 1158 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1208
9999 mem: storing 1201 in location 1208
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 0 in location 1207
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1201
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1167
9999 mem: incrementing refcount of 1201: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1168
9999 mem: incrementing refcount of 1205: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 5 -> 4
9999 mem: storing 1205 in location 1150
9999 mem: incrementing refcount of 1205: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 10
9999 mem: storing 11 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 11
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 11
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 10
9999 mem: storing 10 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 10
9999 mem: location 1150 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1157
9999 mem: incrementing refcount of 1205: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1209
9999 mem: storing 1209 in location 1158
9999 mem: incrementing refcount of 1209: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1156 is 10
9999 mem: location 1158 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1210
9999 mem: storing 10 in location 1210
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1157 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1158 is 1209
9999 mem: location 1157 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 1209 in location 1207
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1157 is 1205
9999 mem: location 1158 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1212
9999 mem: storing 1205 in location 1212
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 0 in location 1211
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1205
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1167
9999 mem: incrementing refcount of 1205: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1167 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1168
9999 mem: incrementing refcount of 1209: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 5 -> 4
9999 mem: storing 1209 in location 1150
9999 mem: incrementing refcount of 1209: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 11
9999 mem: storing 12 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 12
9999 mem: location 1148 is 13
9999 mem: storing 0 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1147 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1149 is 12
9998 run: address to copy is 1119
9998 run: its type is character
9999 mem: location 1119 is 103
9999 mem: storing 103 in location 1152
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1152 is 103
9999 mem: location 1150 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1156
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1157
9999 mem: incrementing refcount of 1209: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1213
9999 mem: storing 1213 in location 1158
9999 mem: incrementing refcount of 1213: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1158 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1156 is 103
9999 mem: location 1158 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1214
9999 mem: storing 103 in location 1214
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1157 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1157 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1159
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1157 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1158 is 1213
9999 mem: location 1157 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 1213 in location 1211
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 103
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1157 is 1209
9999 mem: location 1158 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1216
9999 mem: storing 1209 in location 1216
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1158 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 103
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1159 is 0
9999 mem: location 1158 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1215
9999 mem: storing 0 in location 1215
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1157 is 1209
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1150 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1167
9999 mem: incrementing refcount of 1209: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1167 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1168
9999 mem: incrementing refcount of 1213: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 5 -> 4
9999 mem: storing 1213 in location 1150
9999 mem: incrementing refcount of 1213: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1149 is 12
9999 mem: storing 13 in location 1149
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1149 is 13
9999 mem: location 1148 is 13
9999 mem: storing 1 in location 1151
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1146 is 1120
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1120
9999 mem: decrementing refcount of 1120: 2 -> 1
9999 mem: storing 1120 in location 1103
9999 mem: incrementing refcount of 1120: 1 -> 2
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1100 is 1008
9999 mem: location 1103 is 1120
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1217
9999 mem: storing 26 in location 1218
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1221
9999 mem: incrementing refcount of 1120: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1221 is 1120
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1222
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1220 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 105 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1223
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1224
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1139
9999 mem: storing 1139 in location 1225
9999 mem: incrementing refcount of 1139: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1139
9999 mem: storing 1139 in location 1226
9999 mem: incrementing refcount of 1139: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1167
9999 mem: incrementing refcount of 1139: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1139
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 167
9999 mem: location 1141 is 1160
9999 mem: location 1142 is 0
9999 mem: location 1167 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1160
9999 mem: storing 1160 in location 1168
9999 mem: incrementing refcount of 1160: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1160
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1160
9999 mem: decrementing refcount of 1139: 7 -> 6
9999 mem: storing 1160 in location 1225
9999 mem: incrementing refcount of 1160: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1227
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1228
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1230
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1231
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1139
9999 mem: storing 1139 in location 1232
9999 mem: incrementing refcount of 1139: 6 -> 7
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1160
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1235
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1139
9999 mem: decrementing refcount of 1139: 7 -> 6
9999 mem: storing 1139 in location 1232
9999 mem: incrementing refcount of 1139: 6 -> 7
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1169
9999 mem: location 1163 is 1139
9999 mem: location 1225 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1161
9998 run: its type is "character"
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1236
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1245
9999 mem: storing 10 in location 1246
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1248
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1249
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1248 is 7
9999 mem: storing 1 in location 1250
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1249 is 97
9999 mem: storing 0 in location 1251
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1252
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1249 is 97
9999 mem: storing 0 in location 1254
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1255
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1248 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1237
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 97
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1257
9999 mem: storing 23 in location 1258
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1261
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 97
9999 mem: storing 0 in location 1271
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 0
9999 mem: storing 10 in location 1274
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 97
9999 mem: storing 0 in location 1277
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 10
9999 mem: storing 1036 in location 1279
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 97
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1036
9999 mem: location 1279 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1167
9999 mem: incrementing refcount of 1160: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1169
9999 mem: location 1163 is 1139
9999 mem: location 1167 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1169
9999 mem: storing 1169 in location 1168
9999 mem: incrementing refcount of 1169: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1160: 7 -> 6
9999 mem: storing 1169 in location 1225
9999 mem: incrementing refcount of 1169: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1167
9999 mem: incrementing refcount of 1139: 7 -> 8
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1139
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 167
9999 mem: location 1141 is 1160
9999 mem: location 1142 is 0
9999 mem: location 1167 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1160
9999 mem: storing 1160 in location 1168
9999 mem: incrementing refcount of 1160: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1160
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1160
9999 mem: decrementing refcount of 1139: 8 -> 7
9999 mem: storing 1160 in location 1226
9999 mem: incrementing refcount of 1160: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1169
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1235
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1160
9999 mem: location 1225 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1170
9998 run: its type is "character"
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1236
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1248
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1249
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1248 is 7
9999 mem: storing 1 in location 1250
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1249 is 10
9999 mem: storing 0 in location 1251
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1252
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1249 is 10
9999 mem: storing 0 in location 1254
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1255
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1248 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1238
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 9 -> 10
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1
9999 mem: storing 11 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 3 -> 4
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 11
9999 mem: storing 1038 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1038
9999 mem: location 1279 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 10 -> 9
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 10 -> 11
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 2
9999 mem: storing 12 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 4 -> 5
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 12
9999 mem: storing 1040 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1040
9999 mem: location 1279 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 11 -> 10
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 3
9999 mem: storing 13 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 13
9999 mem: storing 1042 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1042
9999 mem: location 1279 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-combines-page-and-line-scroll
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 4
9999 mem: storing 14 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 14
9999 mem: storing 1044 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1044
9999 mem: location 1279 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 2
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 13 -> 14
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1167
9999 mem: incrementing refcount of 1169: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1160
9999 mem: location 1167 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1171
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1168
9999 mem: incrementing refcount of 1173: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1173
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1173
9999 mem: decrementing refcount of 1169: 7 -> 6
9999 mem: storing 1173 in location 1225
9999 mem: incrementing refcount of 1173: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1160
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1160 in location 1167
9999 mem: incrementing refcount of 1160: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1160
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1160
9999 mem: skipping refcount at 1160
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1169
9999 mem: location 1163 is 1139
9999 mem: location 1167 is 1160
9999 mem: skipping refcount at 1160
9998 run: address to copy is 1162
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1162 is 1169
9999 mem: storing 1169 in location 1168
9999 mem: incrementing refcount of 1169: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1160: 9 -> 8
9999 mem: storing 1169 in location 1226
9999 mem: incrementing refcount of 1169: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1173
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1169
9999 mem: location 1225 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1174
9998 run: its type is "character"
9999 mem: location 1174 is 98
9999 mem: storing 98 in location 1236
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1248
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1249
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1248 is 7
9999 mem: storing 1 in location 1250
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1249 is 98
9999 mem: storing 0 in location 1251
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1252
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1249 is 98
9999 mem: storing 0 in location 1254
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1255
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1248 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1237
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 98
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1261
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 98
9999 mem: storing 0 in location 1271
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 0
9999 mem: storing 20 in location 1274
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 98
9999 mem: storing 0 in location 1277
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 20
9999 mem: storing 1056 in location 1279
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 98
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1056
9999 mem: location 1279 is 1056
9999 mem: storing 98 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1173
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1167
9999 mem: incrementing refcount of 1173: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1173
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1169
9999 mem: location 1167 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1168
9999 mem: incrementing refcount of 1177: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1173: 7 -> 6
9999 mem: storing 1177 in location 1225
9999 mem: incrementing refcount of 1177: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1169
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1167
9999 mem: incrementing refcount of 1169: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1169
9999 mem: skipping refcount at 1169
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1160
9999 mem: location 1167 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1171
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1168
9999 mem: incrementing refcount of 1173: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1173
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1173
9999 mem: decrementing refcount of 1169: 9 -> 8
9999 mem: storing 1173 in location 1226
9999 mem: incrementing refcount of 1173: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1177
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1225 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1178
9998 run: its type is "character"
9999 mem: location 1178 is 10
9999 mem: storing 10 in location 1236
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1248
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1249
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1248 is 7
9999 mem: storing 1 in location 1250
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1249 is 10
9999 mem: storing 0 in location 1251
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1252
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1249 is 10
9999 mem: storing 0 in location 1254
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1255
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1248 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 1
9999 mem: storing 21 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 21
9999 mem: storing 1058 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1058
9999 mem: location 1279 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 2
9999 mem: storing 22 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 22
9999 mem: storing 1060 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1060
9999 mem: location 1279 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 18 -> 19
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 3
9999 mem: storing 23 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 23
9999 mem: storing 1062 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1062
9999 mem: location 1279 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 19 -> 20
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 4
9999 mem: storing 24 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 24
9999 mem: storing 1064 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1064
9999 mem: location 1279 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 20 -> 19
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 3
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 21 -> 20
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 20 -> 21
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 7 -> 6
9999 mem: storing 1181 in location 1225
9999 mem: incrementing refcount of 1181: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1173
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1167
9999 mem: incrementing refcount of 1173: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1173
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 98
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1169
9999 mem: location 1167 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1168
9999 mem: incrementing refcount of 1177: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1173: 9 -> 8
9999 mem: storing 1177 in location 1226
9999 mem: incrementing refcount of 1177: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1181
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1225 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 99
9999 mem: storing 99 in location 1236
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1248
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1249
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1248 is 7
9999 mem: storing 1 in location 1250
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1249 is 99
9999 mem: storing 0 in location 1251
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1252
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1249 is 99
9999 mem: storing 0 in location 1254
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1255
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1248 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1237
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 99
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1261
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
9990 schedule: print/render/new-editor/scenario_editor-combines-page-and-line-scroll
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 99
9999 mem: storing 0 in location 1271
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 0
9999 mem: storing 30 in location 1274
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 99
9999 mem: storing 0 in location 1277
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 30
9999 mem: storing 1076 in location 1279
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 99
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1076
9999 mem: location 1279 is 1076
9999 mem: storing 99 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1181
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 7 -> 6
9999 mem: storing 1185 in location 1225
9999 mem: incrementing refcount of 1185: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 9 -> 8
9999 mem: storing 1181 in location 1226
9999 mem: incrementing refcount of 1181: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1185
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1225 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1236
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1248
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1249
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1248 is 7
9999 mem: storing 1 in location 1250
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1249 is 10
9999 mem: storing 0 in location 1251
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1252
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1249 is 10
9999 mem: storing 0 in location 1254
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1248 is 7
9999 mem: storing 0 in location 1255
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1248 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 23 -> 24
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 1
9999 mem: storing 31 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 13 -> 14
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 31
9999 mem: storing 1078 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1078
9999 mem: location 1279 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 24 -> 25
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 2
9999 mem: storing 32 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 14 -> 15
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 32
9999 mem: storing 1080 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1080
9999 mem: location 1279 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 25 -> 26
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 3
9999 mem: storing 33 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 15 -> 16
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 33
9999 mem: storing 1082 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1082
9999 mem: location 1279 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 26 -> 25
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 26 -> 27
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 4
9999 mem: storing 34 in location 1274
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 16 -> 17
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 34
9999 mem: storing 1084 in location 1279
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1084
9999 mem: location 1279 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 4
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 27 -> 28
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 7 -> 6
9999 mem: storing 1189 in location 1225
9999 mem: incrementing refcount of 1189: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1181
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 9 -> 8
9999 mem: storing 1185 in location 1226
9999 mem: incrementing refcount of 1185: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1189
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1223 is 4
9999 mem: storing 1 in location 1233
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jumping to instruction 68
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1225 is 1189
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1123
9999 mem: storing 1189 in location 1123
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1241
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1234 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1243
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 80
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 0
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1228 is 4
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1127
9999 mem: storing 4 in location 1127
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1230 is 1
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1128
9999 mem: storing 1 in location 1128
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1231 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1129
9999 mem: storing 0 in location 1129
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1232 is 1139
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1139 in location 1124
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
9999 mem: location 1220 is 1008
9999 mem: location 1221 is 1120
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1120
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1100
9999 mem: incrementing refcount of 1008: 27 -> 28
9999 mem: decrementing refcount of 1120: 3 -> 2
9999 mem: storing 1120 in location 1103
9999 mem: incrementing refcount of 1120: 2 -> 3
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}, {1: "literal", "true": ()}
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1103 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1130
9999 mem: storing 1 in location 1130
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1103 is 1120
9999 mem: location 1100 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 2
9999 mem: incrementing refcount of 1120: 3 -> 4
 102 run: assume-console {"\n    press page-down\n    left-click 3, 0\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'press' event starting at 1284
9999 mem: storing 'left-click' event starting at 1288
9999 mem: storing 'press' event starting at 1292
9999 mem: storing console in 1296
9999 mem: storing console data in 1298
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1296
9999 mem: location 2 is 1120
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1299
9999 mem: storing 14 in location 1300
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 28 -> 29
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1303
9999 mem: incrementing refcount of 1296: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1304
9999 mem: incrementing refcount of 1120: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1305
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1306
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1302 is 1008
9999 mem: location 1305 is 1
9999 mem: location 1306 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 29 -> 30
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1303 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1315
9999 mem: storing 12 in location 1316
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1318
9999 mem: incrementing refcount of 1296: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1318 is 1296
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 0
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "number"
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1319
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 0
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1298 is 1282
9999 mem: storing 1282 in location 1320
9999 mem: incrementing refcount of 1282: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9999 mem: storing 3 in location 1321
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1319 is 0
9999 mem: location 1321 is 3
9999 mem: storing 0 in location 1322
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9998 run: base address is 1283
9999 mem: location 1319 is 0
9998 run: address to copy is 1284
9998 run: its type is event
9999 mem: location 1284 is 1
9999 mem: location 1285 is 65518
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: storing 1 in location 1324
9999 mem: storing 65518 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1319
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 0
9999 mem: location 1298 is 1282
9999 mem: location 1319 is 1
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1297
9999 mem: storing 1 in location 1297
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1324 is 1
9999 mem: location 1325 is 65518
9999 mem: location 1326 is 0
9999 mem: location 1327 is 0
9999 mem: location 1318 is 1296
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1296
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1307
9999 mem: storing 65518 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: decrementing refcount of 1296: 2 -> 1
9999 mem: storing 1296 in location 1303
9999 mem: incrementing refcount of 1296: 1 -> 2
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65518
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1313
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1313 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1313 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1302 is 1008
9999 mem: location 1304 is 1120
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65518
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1329
9999 mem: storing 74 in location 1330
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1332
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1333
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1334
9999 mem: storing 65518 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1338
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1333 is 1120
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1332 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 31 -> 32
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1168
 106 run: return {width: "number"}
9999 mem: location 1168 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1339
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1332 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 32 -> 33
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1340
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1341
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1342
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1139
9999 mem: storing 1139 in location 1343
9999 mem: incrementing refcount of 1139: 7 -> 8
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1344
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1345
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1344 is 1
9999 mem: storing 1 in location 1346
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1345 is 0
9999 mem: storing 0 in location 1347
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1334 is 1
9999 mem: location 1335 is 65518
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 0 in location 1348
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1348 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1334 is 1
9999 mem: location 1335 is 65518
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 1335 in location 1392
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1392 is 1335
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65518
9999 mem: storing 0 in location 1365
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65518
9999 mem: storing 1 in location 1376
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 1
9998 run: jump-unless fell through
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1139
9999 mem: storing 1139 in location 1366
9999 mem: incrementing refcount of 1139: 8 -> 9
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1367
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1368
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1139
9999 mem: storing 1139 in location 1369
9999 mem: incrementing refcount of 1139: 9 -> 10
 105 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1333 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1003
9999 mem: incrementing refcount of 1120: 6 -> 7
 106 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1123
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1123 is 1189
9999 mem: storing 1189 in location 1004
9999 mem: incrementing refcount of 1189: 6 -> 7
 106 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1004 is 1189
9998 run: jumping to instruction 5
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1139
9999 mem: storing 1139 in location 1005
9999 mem: incrementing refcount of 1139: 10 -> 11
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1004 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 7 -> 8
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1139: 11 -> 10
9999 mem: storing 1185 in location 1005
9999 mem: incrementing refcount of 1185: 9 -> 10
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1139
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1005 is 1185
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1185 in location 1124
 106 run: {last: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1005 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1006
 106 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1185: 11 -> 10
9999 mem: storing 1181 in location 1005
9999 mem: incrementing refcount of 1181: 9 -> 10
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1185
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1005 is 1181
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1181 in location 1124
 106 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1003 is 1120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1405
9999 mem: storing 9 in location 1406
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1408
9999 mem: incrementing refcount of 1120: 7 -> 8
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1181
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1409
 107 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1409 is 0
9999 mem: storing 0 in location 1410
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1181
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1410 is 0
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1129
9999 mem: storing 0 in location 1129
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1181
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1181
9999 mem: storing 1181 in location 1411
9999 mem: incrementing refcount of 1181: 10 -> 11
9990 schedule: move-to-start-of-line/page-down/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 107 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1181
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1121
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1121 is 1139
9999 mem: storing 1139 in location 1412
9999 mem: incrementing refcount of 1139: 10 -> 11
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1181
9999 mem: location 1412 is 1139
9999 mem: storing 0 in location 1413
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1411 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 99
9999 mem: storing 99 in location 1414
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1414 is 99
9999 mem: storing 0 in location 1415
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1181
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 11 -> 12
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1184
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1184 is 1177
9999 mem: storing 1177 in location 1168
9999 mem: incrementing refcount of 1177: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1181: 12 -> 11
9999 mem: storing 1177 in location 1411
9999 mem: incrementing refcount of 1177: 9 -> 10
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1181
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1411 is 1177
9999 mem: location 1408 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1177 in location 1124
 107 run: assert {before-cursor: ("address" "shared" "duplex-list" "character")}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1411 is 1177
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1177
9999 mem: location 1412 is 1139
9999 mem: storing 0 in location 1413
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1411 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1178
9998 run: its type is "character"
9999 mem: location 1178 is 10
9999 mem: storing 10 in location 1414
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1414 is 10
9999 mem: storing 1 in location 1415
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jumping to instruction 17
 107 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1408 is 1120
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1177
9999 mem: decrementing refcount of 1181: 11 -> 10
9999 mem: storing 1177 in location 1005
9999 mem: incrementing refcount of 1177: 10 -> 11
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1139
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1005 is 1177
9999 mem: location 1003 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1122
9999 mem: storing 1177 in location 1122
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1120
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1370
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1371
9999 mem: incrementing refcount of 1177: 11 -> 12
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1344
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1345
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 518
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
9999 mem: storing 1245 in location 1351
9999 mem: incrementing refcount of 1245: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1367 is 1
9999 mem: location 1368 is 0
9999 mem: location 1369 is 1139
9999 mem: location 1344 is 1
9999 mem: location 1345 is 0
9999 mem: location 1371 is 1177
9999 mem: location 1370 is 0
9999 mem: location 1351 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1351 is 1245
9999 mem: skipping refcount at 1245
9999 mem: storing 1 in location 1246
9999 mem: storing 1 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 1139 in location 1249
9999 mem: storing 1 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 1177 in location 1252
9999 mem: storing 0 in location 1253
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1333 is 1120
9999 mem: location 1351 is 1245
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1156
9999 mem: incrementing refcount of 1120: 8 -> 9
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1157
9999 mem: incrementing refcount of 1245: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1131 is 0
9999 mem: storing 0 in location 1158
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1157 is 1245
9999 mem: location 1158 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1136
9999 mem: incrementing refcount of 1245: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1137
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1416
9999 mem: storing 1416 in location 1138
9999 mem: incrementing refcount of 1416: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1136 is 1245
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1138 is 1416
9999 mem: skipping refcount at 1416
9999 mem: storing 1245 in location 1417
9999 mem: storing 0 in location 1418
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1138 is 1416
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1416
9999 mem: storing 1416 in location 1158
9999 mem: incrementing refcount of 1416: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1158 is 1416
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1131
9999 mem: storing 1416 in location 1131
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1159
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1159
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1159 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1132
9999 mem: storing 0 in location 1132
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1156 is 1120
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: decrementing refcount of 1120: 9 -> 8
9999 mem: storing 1120 in location 1333
9999 mem: incrementing refcount of 1120: 8 -> 9
 105 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1374
9999 mem: incrementing refcount of 1177: 12 -> 13
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "shared" "duplex-list" "character")}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1177
9999 mem: location 1366 is 1139
9999 mem: storing 0 in location 1375
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1338
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1332 is 1008
9999 mem: location 1333 is 1120
9999 mem: location 1338 is 1
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1120
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 33 -> 32
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 32 -> 33
9999 mem: decrementing refcount of 1120: 9 -> 8
9999 mem: storing 1120 in location 1304
9999 mem: incrementing refcount of 1120: 8 -> 9
9999 mem: storing 1 in location 1314
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1314 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1302 is 1008
9999 mem: location 1304 is 1120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1100
9999 mem: incrementing refcount of 1120: 9 -> 10
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 34 -> 35
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1221
9999 mem: incrementing refcount of 1120: 10 -> 11
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1221 is 1120
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1222
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1220 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 35 -> 36
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1223
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1224
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1225
9999 mem: incrementing refcount of 1177: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1177
9999 mem: storing 1177 in location 1226
9999 mem: incrementing refcount of 1177: 14 -> 15
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 15 -> 16
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 16 -> 15
9999 mem: storing 1181 in location 1225
9999 mem: incrementing refcount of 1181: 11 -> 12
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1227
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1230
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1231
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1177
9999 mem: storing 1177 in location 1232
9999 mem: incrementing refcount of 1177: 15 -> 16
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 36 -> 37
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 36 -> 37
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1181
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1235
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1177
9999 mem: decrementing refcount of 1177: 16 -> 15
9999 mem: storing 1177 in location 1232
9999 mem: incrementing refcount of 1177: 15 -> 16
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1225 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 99
9999 mem: storing 99 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1419
9999 mem: storing 10 in location 1420
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1423
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1422 is 7
9999 mem: storing 1 in location 1424
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1423 is 99
9999 mem: storing 0 in location 1425
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1426
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1423 is 99
9999 mem: storing 0 in location 1428
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1429
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1422 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 99
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 37 -> 38
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 99
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 0
9999 mem: storing 10 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 17 -> 18
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 99
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 10
9999 mem: storing 1036 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 99
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1036
9999 mem: location 1279 is 1036
9999 mem: storing 99 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 13 -> 12
9999 mem: storing 1185 in location 1225
9999 mem: incrementing refcount of 1185: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 17 -> 16
9999 mem: storing 1181 in location 1226
9999 mem: incrementing refcount of 1181: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1185
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1225 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1419
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1423
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1422 is 7
9999 mem: storing 1 in location 1424
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1423 is 10
9999 mem: storing 0 in location 1425
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1426
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1423 is 10
9999 mem: storing 0 in location 1428
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1429
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1422 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1238
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 38 -> 39
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 39 -> 40
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1
9999 mem: storing 11 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 18 -> 19
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 11
9999 mem: storing 1038 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1038
9999 mem: location 1279 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 39 -> 40
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 40 -> 41
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 2
9999 mem: storing 12 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 19 -> 20
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 12
9999 mem: storing 1040 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1040
9999 mem: location 1279 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 40 -> 41
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 41 -> 42
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 3
9999 mem: storing 13 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 20 -> 21
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 13
9999 mem: storing 1042 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1042
9999 mem: location 1279 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 41 -> 42
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 42 -> 43
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 4
9999 mem: storing 14 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 21 -> 22
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 14
9999 mem: storing 1044 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1044
9999 mem: location 1279 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 42 -> 43
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 2
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
9990 schedule: move-cursor/render/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 43 -> 44
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 13 -> 12
9999 mem: storing 1189 in location 1225
9999 mem: incrementing refcount of 1189: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 15 -> 14
9999 mem: storing 1185 in location 1226
9999 mem: incrementing refcount of 1185: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1189
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1225 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 100
9999 mem: storing 100 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1419
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1423
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1422 is 7
9999 mem: storing 1 in location 1424
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1423 is 100
9999 mem: storing 0 in location 1425
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1426
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1423 is 100
9999 mem: storing 0 in location 1428
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1429
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1422 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 100
9999 mem: storing 0 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 100
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 100
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 0
9999 mem: storing 20 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 100
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 20
9999 mem: storing 1056 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 100
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1056
9999 mem: location 1279 is 1056
9999 mem: storing 100 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 11 -> 10
9999 mem: storing 1193 in location 1225
9999 mem: incrementing refcount of 1193: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 15 -> 14
9999 mem: storing 1189 in location 1226
9999 mem: incrementing refcount of 1189: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1193
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1225 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is "character"
9999 mem: location 1194 is 10
9999 mem: storing 10 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1419
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1423
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1422 is 7
9999 mem: storing 1 in location 1424
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1423 is 10
9999 mem: storing 0 in location 1425
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1426
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1423 is 10
9999 mem: storing 0 in location 1428
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1429
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1422 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 45 -> 46
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 46 -> 47
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 1
9999 mem: storing 21 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 23 -> 24
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 21
9999 mem: storing 1058 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1058
9999 mem: location 1279 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 46 -> 47
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 47 -> 48
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 2
9999 mem: storing 22 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 24 -> 25
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 22
9999 mem: storing 1060 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1060
9999 mem: location 1279 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 47 -> 48
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 48 -> 49
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 3
9999 mem: storing 23 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 25 -> 26
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 23
9999 mem: storing 1062 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1062
9999 mem: location 1279 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 49 -> 50
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 4
9999 mem: storing 24 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 26 -> 27
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 24
9999 mem: storing 1064 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1064
9999 mem: location 1279 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 50 -> 49
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 3
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 50 -> 51
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 7 -> 6
9999 mem: storing 1197 in location 1225
9999 mem: incrementing refcount of 1197: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 13 -> 12
9999 mem: storing 1193 in location 1226
9999 mem: incrementing refcount of 1193: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1197
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1225 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1419
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1423
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1422 is 7
9999 mem: storing 1 in location 1424
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1423 is 101
9999 mem: storing 0 in location 1425
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1426
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1423 is 101
9999 mem: storing 0 in location 1428
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1429
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1422 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 101
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 101
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 0
9999 mem: storing 30 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 27 -> 28
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 101
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 30
9999 mem: storing 1076 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 101
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1076
9999 mem: location 1279 is 1076
9999 mem: storing 101 in location 1076
9999 mem: storing 7 in location 1077
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 7 -> 6
9999 mem: storing 1201 in location 1225
9999 mem: incrementing refcount of 1201: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 9 -> 8
9999 mem: storing 1197 in location 1226
9999 mem: incrementing refcount of 1197: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1225 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1419
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1423
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1422 is 7
9999 mem: storing 1 in location 1424
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1423 is 10
9999 mem: storing 0 in location 1425
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1426
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1423 is 10
9999 mem: storing 0 in location 1428
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1422 is 7
9999 mem: storing 0 in location 1429
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1422 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 52 -> 53
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 53 -> 54
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 1
9999 mem: storing 31 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 28 -> 29
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 31
9999 mem: storing 1078 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1078
9999 mem: location 1279 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 54 -> 55
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 2
9999 mem: storing 32 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 29 -> 30
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 32
9999 mem: storing 1080 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1080
9999 mem: location 1279 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 55 -> 56
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 3
9999 mem: storing 33 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 30 -> 31
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 33
9999 mem: storing 1082 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1082
9999 mem: location 1279 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 56 -> 57
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 4
9999 mem: storing 34 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 31 -> 32
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 34
9999 mem: storing 1084 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1084
9999 mem: location 1279 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 4
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1167
9999 mem: incrementing refcount of 1201: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1168
9999 mem: incrementing refcount of 1205: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 7 -> 6
9999 mem: storing 1205 in location 1225
9999 mem: incrementing refcount of 1205: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 9 -> 8
9999 mem: storing 1201 in location 1226
9999 mem: incrementing refcount of 1201: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1223 is 4
9999 mem: storing 1 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jumping to instruction 68
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1189
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1225 is 1205
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1123
9999 mem: storing 1205 in location 1123
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1234
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1241
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1234 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1243
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 80
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1228 is 4
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1127
9999 mem: storing 4 in location 1127
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1230 is 1
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1128
9999 mem: storing 1 in location 1128
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1231 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1129
9999 mem: storing 0 in location 1129
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1232 is 1177
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1177 in location 1124
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
9999 mem: location 1220 is 1008
9999 mem: location 1221 is 1120
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1147
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 0
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 63 -> 62
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 62 -> 63
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 63 -> 64
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1315
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1318
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1319
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1320
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1321
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1322
9999 mem: storing 1 in location 1323
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jump-if fell through
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1324
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1326
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1319 is 5
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 65 -> 66
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 5
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 1008 in location 1318
9999 mem: incrementing refcount of 1008: 65 -> 66
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 0
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 0
9999 mem: storing 1 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 1
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 1
9999 mem: storing 2 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 2
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 2
9999 mem: storing 3 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 3
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 3
9999 mem: storing 4 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 4
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 4
9999 mem: storing 5 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 5
9999 mem: location 1321 is 4
9999 mem: storing 0 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1318 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 71 -> 72
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 72 -> 73
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 6
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 72 -> 73
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 73 -> 74
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 0
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 74 -> 75
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 74 -> 75
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 75 -> 76
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 75 -> 76
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 76 -> 77
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 77 -> 78
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 78 -> 79
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1431
9999 mem: storing 7 in location 1432
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1434
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1435
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1436
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1437
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1435 is 6
9999 mem: storing 7 in location 1435
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1434 is 1008
9999 mem: location 1435 is 7
9999 mem: location 1436 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 80 -> 81
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1137
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 7
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1434
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1434 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 81 -> 82
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1438
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1435 is 7
9999 mem: location 1438 is 4
9999 mem: storing 1 in location 1439
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1434 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1120
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 81 -> 82
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1305
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1306
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1302 is 1008
9999 mem: location 1305 is 1
9999 mem: location 1306 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1303 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1315
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1318
9999 mem: incrementing refcount of 1296: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1318 is 1296
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "number"
9999 mem: location 1297 is 1
9999 mem: storing 1 in location 1319
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1298 is 1282
9999 mem: storing 1282 in location 1320
9999 mem: incrementing refcount of 1282: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9999 mem: storing 3 in location 1321
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1319 is 1
9999 mem: location 1321 is 3
9999 mem: storing 0 in location 1322
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9998 run: base address is 1283
9999 mem: location 1319 is 1
9998 run: address to copy is 1288
9998 run: its type is event
9999 mem: location 1288 is 2
9999 mem: location 1289 is 65513
9999 mem: location 1290 is 3
9999 mem: location 1291 is 0
9999 mem: storing 2 in location 1324
9999 mem: storing 65513 in location 1325
9999 mem: storing 3 in location 1326
9999 mem: storing 0 in location 1327
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1319 is 1
9999 mem: storing 2 in location 1319
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1282
9999 mem: location 1319 is 2
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1297
9999 mem: storing 2 in location 1297
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1324 is 2
9999 mem: location 1325 is 65513
9999 mem: location 1326 is 3
9999 mem: location 1327 is 0
9999 mem: location 1318 is 1296
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1296
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1307
9999 mem: storing 65513 in location 1308
9999 mem: storing 3 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: decrementing refcount of 1296: 3 -> 2
9999 mem: storing 1296 in location 1303
9999 mem: incrementing refcount of 1296: 2 -> 3
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1307 is 2
9999 mem: location 1308 is 65513
9999 mem: location 1309 is 3
9999 mem: location 1310 is 0
9999 mem: storing 1308 in location 1313
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1313 is 1308
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1302 is 1008
9999 mem: location 1304 is 1120
9999 mem: location 1313 is 1308
9999 mem: location 1308 is 65513
9999 mem: location 1309 is 3
9999 mem: location 1310 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1440
9999 mem: storing 24 in location 1441
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1443
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1444
9999 mem: incrementing refcount of 1120: 11 -> 12
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1445
9999 mem: storing 3 in location 1446
9999 mem: storing 0 in location 1447
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1444 is 1120
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1445 is 65513
9999 mem: location 1446 is 3
9999 mem: location 1447 is 0
9998 run: address to copy is 1446
9998 run: its type is "number"
9999 mem: location 1446 is 3
9999 mem: storing 3 in location 1448
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1448 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1445 is 65513
9999 mem: location 1446 is 3
9999 mem: location 1447 is 0
9998 run: address to copy is 1447
9998 run: its type is "number"
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1449
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1450
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1451
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1452
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1449 is 0
9999 mem: location 1452 is 4
9999 mem: storing 0 in location 1453
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 1
9999 mem: storing 1 in location 1454
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1455
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1456
9999 mem: incrementing refcount of 1177: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1443 is 1008
9999 mem: location 1444 is 1120
9999 mem: location 1448 is 3
9999 mem: location 1449 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1221
9999 mem: incrementing refcount of 1120: 12 -> 13
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1222
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1221 is 1120
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1224
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1225
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1220 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1226
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1227
9999 mem: incrementing refcount of 1177: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1177
9999 mem: storing 1177 in location 1228
9999 mem: incrementing refcount of 1177: 18 -> 19
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 20 -> 19
9999 mem: storing 1181 in location 1227
9999 mem: incrementing refcount of 1181: 15 -> 16
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1229
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1224 is 0
9999 mem: storing 0 in location 1230
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 1
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1222 is 3
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1128
9999 mem: storing 3 in location 1128
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1222 is 3
9999 mem: storing 3 in location 1231
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1223 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1129
9999 mem: storing 0 in location 1129
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1232
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1177
9999 mem: storing 1177 in location 1233
9999 mem: incrementing refcount of 1177: 19 -> 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1181
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1226 is 4
9999 mem: storing 0 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1227 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1227 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 99
9999 mem: storing 99 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1237 is 99
9999 mem: storing 0 in location 1238
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1225 is 4
9999 mem: storing 0 in location 1240
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 17 -> 16
9999 mem: storing 1185 in location 1227
9999 mem: incrementing refcount of 1185: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 21 -> 20
9999 mem: storing 1181 in location 1228
9999 mem: incrementing refcount of 1181: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1185
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1226 is 4
9999 mem: storing 0 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1227 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1227 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1237 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1224 is 0
9999 mem: storing 0 in location 1230
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 17 -> 16
9999 mem: storing 1189 in location 1227
9999 mem: incrementing refcount of 1189: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 19 -> 18
9999 mem: storing 1185 in location 1228
9999 mem: incrementing refcount of 1185: 17 -> 18
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1189
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 2
9999 mem: location 1226 is 4
9999 mem: storing 0 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 2
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1227 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1227 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 100
9999 mem: storing 100 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1237 is 100
9999 mem: storing 0 in location 1238
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1225 is 4
9999 mem: storing 0 in location 1240
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 15 -> 14
9999 mem: storing 1193 in location 1227
9999 mem: incrementing refcount of 1193: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 19 -> 18
9999 mem: storing 1189 in location 1228
9999 mem: incrementing refcount of 1189: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1193
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 2
9999 mem: location 1226 is 4
9999 mem: storing 0 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 2
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1227 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1227 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is "character"
9999 mem: location 1194 is 10
9999 mem: storing 10 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1237 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 2
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1224 is 0
9999 mem: storing 0 in location 1230
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 11 -> 10
9999 mem: storing 1197 in location 1227
9999 mem: incrementing refcount of 1197: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 17 -> 16
9999 mem: storing 1193 in location 1228
9999 mem: incrementing refcount of 1193: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1197
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 3
9999 mem: location 1226 is 4
9999 mem: storing 0 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 3
9999 mem: location 1231 is 3
9999 mem: storing 1 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1232 is 0
9999 mem: storing 1 in location 1236
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1236 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1193
9999 mem: decrementing refcount of 1177: 20 -> 19
9999 mem: storing 1193 in location 1233
9999 mem: incrementing refcount of 1193: 12 -> 13
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1177
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1233 is 1193
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1193 in location 1124
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1227 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1227 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1237 is 101
9999 mem: storing 0 in location 1238
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1225 is 4
9999 mem: storing 0 in location 1240
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 11 -> 10
9999 mem: storing 1201 in location 1227
9999 mem: incrementing refcount of 1201: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 14 -> 13
9999 mem: storing 1197 in location 1228
9999 mem: incrementing refcount of 1197: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1230 is 0
9999 mem: storing 1 in location 1230
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 3
9999 mem: location 1226 is 4
9999 mem: storing 0 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 3
9999 mem: location 1231 is 3
9999 mem: storing 1 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1236
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1236 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1227 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1227 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1237 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 3
9999 mem: location 1231 is 3
9999 mem: storing 1 in location 1235
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1230 is 1
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1224 is 0
9999 mem: storing 0 in location 1230
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1227 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1167
9999 mem: incrementing refcount of 1201: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1168
9999 mem: incrementing refcount of 1205: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 11 -> 10
9999 mem: storing 1205 in location 1227
9999 mem: incrementing refcount of 1205: 7 -> 8
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1228 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 13 -> 12
9999 mem: storing 1201 in location 1228
9999 mem: incrementing refcount of 1201: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1227 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1229 is 4
9999 mem: location 1226 is 4
9999 mem: storing 1 in location 1234
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 4
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1235
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1230 is 0
9999 mem: location 1232 is 0
9999 mem: storing 1 in location 1241
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1235 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1229 is 4
9999 mem: location 1231 is 3
9999 mem: storing 0 in location 1243
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1221 is 1120
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: decrementing refcount of 1120: 13 -> 12
9999 mem: storing 1120 in location 1444
9999 mem: incrementing refcount of 1120: 12 -> 13
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1457
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1458
9999 mem: incrementing refcount of 1177: 19 -> 20
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1459
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1444 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1460
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1457 is 0
9998 run: jumping to instruction 41
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1419
9999 mem: storing 1419 in location 1462
9999 mem: incrementing refcount of 1419: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1454 is 1
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1177
9999 mem: location 1459 is 3
9999 mem: location 1460 is 0
9999 mem: location 1458 is 1177
9999 mem: location 1457 is 0
9999 mem: location 1462 is 1419
9999 mem: skipping refcount at 1419
9999 mem: location 1462 is 1419
9999 mem: skipping refcount at 1419
9999 mem: storing 1 in location 1420
9999 mem: storing 1 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 1177 in location 1423
9999 mem: storing 3 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 1177 in location 1426
9999 mem: storing 0 in location 1427
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1444 is 1120
9999 mem: location 1462 is 1419
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1156
9999 mem: incrementing refcount of 1120: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1419 in location 1157
9999 mem: incrementing refcount of 1419: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1131 is 1416
9999 mem: storing 1416 in location 1158
9999 mem: incrementing refcount of 1416: 2 -> 3
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1157 is 1419
9999 mem: location 1158 is 1416
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1419 in location 1136
9999 mem: incrementing refcount of 1419: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1416 in location 1137
9999 mem: incrementing refcount of 1416: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1466
9999 mem: storing 1466 in location 1138
9999 mem: incrementing refcount of 1466: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1136 is 1419
9999 mem: location 1137 is 1416
9999 mem: location 1138 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1138 is 1466
9999 mem: skipping refcount at 1466
9999 mem: storing 1419 in location 1467
9999 mem: storing 1416 in location 1468
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1138 is 1466
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1466
9999 mem: decrementing refcount of 1416: 4 -> 3
9999 mem: storing 1466 in location 1158
9999 mem: incrementing refcount of 1466: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1416
9999 mem: location 1132 is 0
9999 mem: location 1158 is 1466
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1131
9999 mem: storing 1466 in location 1131
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1159
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1159
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1159 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1132
9999 mem: storing 0 in location 1132
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1156 is 1120
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: decrementing refcount of 1120: 14 -> 13
9999 mem: storing 1120 in location 1444
9999 mem: incrementing refcount of 1120: 13 -> 14
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1444 is 1120
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1305
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1306
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1302 is 1008
9999 mem: location 1305 is 3
9999 mem: location 1306 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 3
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1303 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1315
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1318
9999 mem: incrementing refcount of 1296: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1318 is 1296
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 2
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "number"
9999 mem: location 1297 is 2
9999 mem: storing 2 in location 1319
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 2
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1298 is 1282
9999 mem: storing 1282 in location 1320
9999 mem: incrementing refcount of 1282: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9999 mem: storing 3 in location 1321
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1319 is 2
9999 mem: location 1321 is 3
9999 mem: storing 0 in location 1322
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9998 run: base address is 1283
9999 mem: location 1319 is 2
9998 run: address to copy is 1292
9998 run: its type is event
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65516
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 1 in location 1324
9999 mem: storing 65516 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1319 is 2
9999 mem: storing 3 in location 1319
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 2
9999 mem: location 1298 is 1282
9999 mem: location 1319 is 3
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1297
9999 mem: storing 3 in location 1297
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1324 is 1
9999 mem: location 1325 is 65516
9999 mem: location 1326 is 0
9999 mem: location 1327 is 0
9999 mem: location 1318 is 1296
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1296
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1307
9999 mem: storing 65516 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: decrementing refcount of 1296: 4 -> 3
9999 mem: storing 1296 in location 1303
9999 mem: incrementing refcount of 1296: 3 -> 4
9999 mem: storing 1 in location 1311
9999 mem: storing 0 in location 1312
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65516
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 0 in location 1313
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1313 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1313 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1302 is 1008
9999 mem: location 1304 is 1120
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65516
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1329
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1332
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1333
9999 mem: incrementing refcount of 1120: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1334
9999 mem: storing 65516 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1338
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1333 is 1120
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1332 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1168
 106 run: return {width: "number"}
9999 mem: location 1168 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1339
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1332 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 106 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1340
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1341
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1342
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1193
9999 mem: storing 1193 in location 1343
9999 mem: incrementing refcount of 1193: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1344
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1345
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1344 is 3
9999 mem: storing 3 in location 1346
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1345 is 0
9999 mem: storing 0 in location 1347
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1334 is 1
9999 mem: location 1335 is 65516
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 0 in location 1348
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1348 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1334 is 1
9999 mem: location 1335 is 65516
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 1335 in location 1392
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1392 is 1335
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65516
9999 mem: storing 0 in location 1365
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65516
9999 mem: storing 0 in location 1376
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65516
9999 mem: storing 0 in location 1381
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65516
9999 mem: storing 0 in location 1382
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1392 is 1335
9999 mem: location 1335 is 65516
9999 mem: storing 1 in location 1393
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1367
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1368
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1369
9999 mem: incrementing refcount of 1177: 20 -> 21
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1333 is 1120
9999 mem: location 1340 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1260
9999 mem: incrementing refcount of 1120: 15 -> 16
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1261
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1262
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1263
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1193
9999 mem: storing 1193 in location 1264
9999 mem: incrementing refcount of 1193: 14 -> 15
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1265
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1266
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 3 in location 1267
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: "number"}, {last-line: "number"}
9999 mem: location 1262 is 3
9999 mem: location 1267 is 3
9999 mem: storing 1 in location 1268
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 1
9998 run: jumping to instruction 45
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"scroll down": "literal-string"}
  10 app: scroll down 
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1177
9999 mem: storing 1177 in location 1279
9999 mem: incrementing refcount of 1177: 21 -> 22
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1265
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1266
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1266 is 4
9999 mem: location 1265 is 0
9999 mem: storing 4 in location 1269
 106 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1279 is 1177
9999 mem: storing 1177 in location 1280
9999 mem: incrementing refcount of 1177: 22 -> 23
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- before-start-of-next-line {top-of-screen: ("address" "shared" "duplex-list" "character")}, {max: "number"}
9999 mem: location 1279 is 1177
9999 mem: location 1269 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1146
9999 mem: incrementing refcount of 1177: 23 -> 24
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1147
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1148
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1146 is 1177
9999 mem: storing 1177 in location 1149
9999 mem: incrementing refcount of 1177: 24 -> 25
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1149 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1149 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1178
9998 run: its type is "character"
9999 mem: location 1178 is 10
9999 mem: storing 10 in location 1150
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1150 is 10
9999 mem: storing 1 in location 1151
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 1
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1149 is 1177
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1167
9999 mem: incrementing refcount of 1177: 25 -> 26
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1177
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 10
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1173
9999 mem: location 1167 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
9999 mem: incrementing refcount of 1181: 18 -> 19
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1181
9999 mem: decrementing refcount of 1177: 26 -> 25
9999 mem: storing 1181 in location 1149
9999 mem: incrementing refcount of 1181: 19 -> 20
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1148
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1149 is 1181
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1148 is 1
9999 mem: location 1147 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1149 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1149 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 99
9999 mem: storing 99 in location 1150
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1150 is 99
9999 mem: storing 0 in location 1151
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1149 is 1181
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1167
9999 mem: incrementing refcount of 1181: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 99
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1177
9999 mem: location 1167 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1168
9999 mem: incrementing refcount of 1185: 18 -> 19
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1181: 21 -> 20
9999 mem: storing 1185 in location 1149
9999 mem: incrementing refcount of 1185: 19 -> 20
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1148 is 1
9999 mem: storing 2 in location 1148
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1149 is 1185
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1148 is 2
9999 mem: location 1147 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1149 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1149 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1150
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1150 is 10
9999 mem: storing 1 in location 1151
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 1
9998 run: jumping to instruction 23
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1149 is 1185
9998 run: jumping to instruction 26
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1149 is 1185
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1177: 25 -> 24
9999 mem: storing 1185 in location 1279
9999 mem: incrementing refcount of 1185: 20 -> 21
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1177
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1279 is 1185
9999 mem: location 1260 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1122
9999 mem: storing 1185 in location 1122
 106 run: {no-movement?: "boolean"} <- equal {old-top: ("address" "shared" "duplex-list" "character")}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1177
9999 mem: location 1279 is 1185
9999 mem: storing 0 in location 1281
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1273
 106 run: jump-unless {no-movement?: "boolean"}, {1: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 60
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1273
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1260 is 1120
9999 mem: location 1273 is 1
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9998 run: result 1 is 1
9999 mem: decrementing refcount of 1120: 16 -> 15
9999 mem: storing 1120 in location 1333
9999 mem: incrementing refcount of 1120: 15 -> 16
9999 mem: storing 1 in location 1338
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1370
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1185
9999 mem: storing 1185 in location 1371
9999 mem: incrementing refcount of 1185: 21 -> 22
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1344
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1345
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1370 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1333 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1131 is 1466
9999 mem: storing 1466 in location 1352
9999 mem: incrementing refcount of 1466: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1352 is 1466
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1352 is 1466
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1167
9999 mem: incrementing refcount of 1466: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1167 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 1419
9999 mem: location 1468 is 1416
9999 mem: location 1167 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1467 is 1419
9999 mem: storing 1419 in location 1168
9999 mem: incrementing refcount of 1419: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1168 is 1419
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1419
9999 mem: storing 1419 in location 1351
9999 mem: incrementing refcount of 1419: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1351 is 1419
9999 mem: skipping refcount at 1419
9999 mem: location 1420 is 1
9999 mem: location 1421 is 1
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1177
9999 mem: location 1424 is 3
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1177
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: location 1351 is 1419
9999 mem: skipping refcount at 1419
9999 mem: storing 1421 in location 1358
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1358 is 1421
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1358 is 1421
9999 mem: location 1421 is 1
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1177
9999 mem: location 1424 is 3
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1177
9999 mem: location 1427 is 0
9999 mem: location 1358 is 1421
9998 run: address to copy is 1427
9998 run: its type is "number"
9999 mem: location 1427 is 0
9999 mem: storing 0 in location 1372
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1370 is 4
9999 mem: location 1372 is 0
9999 mem: storing 0 in location 1373
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 625
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1469
9999 mem: decrementing refcount of 1419: 5 -> 4
9999 mem: storing 1469 in location 1351
9999 mem: incrementing refcount of 1469: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1367 is 3
9999 mem: location 1368 is 0
9999 mem: location 1369 is 1177
9999 mem: location 1344 is 3
9999 mem: location 1345 is 0
9999 mem: location 1371 is 1185
9999 mem: location 1370 is 4
9999 mem: location 1351 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1351 is 1469
9999 mem: skipping refcount at 1469
9999 mem: storing 1 in location 1470
9999 mem: storing 3 in location 1471
9999 mem: storing 0 in location 1472
9999 mem: storing 1177 in location 1473
9999 mem: storing 3 in location 1474
9999 mem: storing 0 in location 1475
9999 mem: storing 1185 in location 1476
9999 mem: storing 4 in location 1477
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1333 is 1120
9999 mem: location 1351 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1153
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1156
9999 mem: incrementing refcount of 1120: 16 -> 17
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1157
9999 mem: incrementing refcount of 1469: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1131 is 1466
9999 mem: storing 1466 in location 1158
9999 mem: incrementing refcount of 1466: 4 -> 5
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1157 is 1469
9999 mem: location 1158 is 1466
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1136
9999 mem: incrementing refcount of 1469: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1137
9999 mem: incrementing refcount of 1466: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1481
9999 mem: storing 1481 in location 1138
9999 mem: incrementing refcount of 1481: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1136 is 1469
9999 mem: location 1137 is 1466
9999 mem: location 1138 is 1481
9999 mem: skipping refcount at 1481
9999 mem: location 1138 is 1481
9999 mem: skipping refcount at 1481
9999 mem: storing 1469 in location 1482
9999 mem: storing 1466 in location 1483
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1138 is 1481
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1481
9999 mem: decrementing refcount of 1466: 6 -> 5
9999 mem: storing 1481 in location 1158
9999 mem: incrementing refcount of 1481: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1466
9999 mem: location 1132 is 0
9999 mem: location 1158 is 1481
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1131
9999 mem: storing 1481 in location 1131
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1159
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1159
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1159 is 0
9999 mem: location 1156 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1132
9999 mem: storing 0 in location 1132
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1156 is 1120
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: decrementing refcount of 1120: 17 -> 16
9999 mem: storing 1120 in location 1333
9999 mem: incrementing refcount of 1120: 16 -> 17
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1332 is 1008
9999 mem: location 1333 is 1120
9999 mem: location 1338 is 1
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1120
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 90 -> 89
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 89 -> 90
9999 mem: decrementing refcount of 1120: 17 -> 16
9999 mem: storing 1120 in location 1304
9999 mem: incrementing refcount of 1120: 16 -> 17
9999 mem: storing 1 in location 1314
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1314 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1302 is 1008
9999 mem: location 1304 is 1120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 90 -> 91
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1100
9999 mem: incrementing refcount of 1120: 17 -> 18
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1100 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 91 -> 92
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1221
9999 mem: incrementing refcount of 1120: 18 -> 19
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1221 is 1120
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1125
9998 run: its type is "number"
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1222
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1220 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 107 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1223
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1126
9998 run: its type is "number"
9999 mem: location 1126 is 4
9999 mem: storing 4 in location 1224
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1122
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1122 is 1185
9999 mem: storing 1185 in location 1225
9999 mem: incrementing refcount of 1185: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1185
9999 mem: storing 1185 in location 1226
9999 mem: incrementing refcount of 1185: 23 -> 24
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 25 -> 24
9999 mem: storing 1189 in location 1225
9999 mem: incrementing refcount of 1189: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1227
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1230
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1231
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1193
9999 mem: storing 1193 in location 1232
9999 mem: incrementing refcount of 1193: 15 -> 16
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 1
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1189
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1225 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 100
9999 mem: storing 100 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1484
9999 mem: storing 10 in location 1485
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1487
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1488
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1487 is 7
9999 mem: storing 1 in location 1489
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1488 is 100
9999 mem: storing 0 in location 1490
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1491
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1488 is 100
9999 mem: storing 0 in location 1493
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1494
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1487 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 100
9999 mem: storing 0 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 100
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 100
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 0
9999 mem: storing 10 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 32 -> 33
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 100
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 10
9999 mem: storing 1036 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 100
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1036
9999 mem: location 1279 is 1036
9999 mem: storing 100 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 19 -> 18
9999 mem: storing 1193 in location 1225
9999 mem: incrementing refcount of 1193: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1167
9999 mem: incrementing refcount of 1185: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1167 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1168
9999 mem: incrementing refcount of 1189: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1185: 25 -> 24
9999 mem: storing 1189 in location 1226
9999 mem: incrementing refcount of 1189: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1193
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1225 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is "character"
9999 mem: location 1194 is 10
9999 mem: storing 10 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1484
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1487
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1488
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1487 is 7
9999 mem: storing 1 in location 1489
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1490
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1491
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1493
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1494
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1487 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 96 -> 97
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 1
9999 mem: storing 11 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 33 -> 34
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 11
9999 mem: storing 1038 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1038
9999 mem: location 1279 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 97 -> 98
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 2
9999 mem: storing 12 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 34 -> 35
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 12
9999 mem: storing 1040 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1040
9999 mem: location 1279 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 98 -> 99
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 3
9999 mem: storing 13 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 35 -> 36
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 13
9999 mem: storing 1042 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1042
9999 mem: location 1279 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 99 -> 100
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 4
9999 mem: storing 14 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 36 -> 37
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 14
9999 mem: storing 1044 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1044
9999 mem: location 1279 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 2 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 2
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 2
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 19 -> 18
9999 mem: storing 1197 in location 1225
9999 mem: incrementing refcount of 1197: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1167
9999 mem: incrementing refcount of 1189: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 100
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1167 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
9999 mem: incrementing refcount of 1193: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1189: 21 -> 20
9999 mem: storing 1193 in location 1226
9999 mem: incrementing refcount of 1193: 19 -> 20
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1197
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1225 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1484
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1487
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1488
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1487 is 7
9999 mem: storing 1 in location 1489
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1488 is 101
9999 mem: storing 0 in location 1490
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1491
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1488 is 101
9999 mem: storing 0 in location 1493
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1494
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1487 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 101
9999 mem: storing 0 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 101
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 101 -> 102
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 101
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 0
9999 mem: storing 20 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 101
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 20
9999 mem: storing 1056 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 101
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1056
9999 mem: location 1279 is 1056
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 15 -> 14
9999 mem: storing 1201 in location 1225
9999 mem: incrementing refcount of 1201: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1167
9999 mem: incrementing refcount of 1193: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 10
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1167 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1168
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 21 -> 20
9999 mem: storing 1197 in location 1226
9999 mem: incrementing refcount of 1197: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1225 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1484
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1487
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1488
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1487 is 7
9999 mem: storing 1 in location 1489
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1490
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1491
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1493
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1494
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1487 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
9990 schedule: clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 103 -> 104
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 1
9999 mem: storing 21 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 38 -> 39
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 21
9999 mem: storing 1058 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1058
9999 mem: location 1279 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 104 -> 105
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 2
9999 mem: storing 22 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 39 -> 40
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 22
9999 mem: storing 1060 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1060
9999 mem: location 1279 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 105 -> 106
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 3
9999 mem: storing 23 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 40 -> 41
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 23
9999 mem: storing 1062 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1062
9999 mem: location 1279 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 106 -> 105
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 106 -> 107
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 4
9999 mem: storing 24 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 41 -> 42
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 24
9999 mem: storing 1064 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1064
9999 mem: location 1279 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 3 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 3
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 3
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1167
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1168
9999 mem: incrementing refcount of 1205: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 15 -> 14
9999 mem: storing 1205 in location 1225
9999 mem: incrementing refcount of 1205: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1167
9999 mem: incrementing refcount of 1197: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1167 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1168
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 17 -> 16
9999 mem: storing 1201 in location 1226
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1235
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1201
9999 mem: decrementing refcount of 1193: 20 -> 19
9999 mem: storing 1201 in location 1232
9999 mem: incrementing refcount of 1201: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1225 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 102
9999 mem: storing 102 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1484
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1487
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1488
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1487 is 7
9999 mem: storing 1 in location 1489
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1488 is 102
9999 mem: storing 0 in location 1490
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1491
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1488 is 102
9999 mem: storing 0 in location 1493
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1494
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1487 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 102
9999 mem: storing 0 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1224 is 4
9999 mem: storing 0 in location 1239
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1236 is 102
9999 mem: location 1227 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 102
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 0
9999 mem: storing 30 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 42 -> 43
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 102
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 30
9999 mem: storing 1076 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 102
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1076
9999 mem: location 1279 is 1076
9999 mem: storing 102 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 0
9999 mem: storing 1 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1167
9999 mem: incrementing refcount of 1205: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1167 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1168
9999 mem: incrementing refcount of 1209: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 11 -> 10
9999 mem: storing 1209 in location 1225
9999 mem: incrementing refcount of 1209: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1167
9999 mem: incrementing refcount of 1201: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 10
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1167 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1168
9999 mem: incrementing refcount of 1205: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 18 -> 17
9999 mem: storing 1205 in location 1226
9999 mem: incrementing refcount of 1205: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1223 is 4
9999 mem: storing 0 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1225 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1225 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 10
9999 mem: storing 10 in location 1236
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1227 is 7
9999 mem: location 1236 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1484
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1487
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1488
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1487 is 7
9999 mem: storing 1 in location 1489
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1490
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1491
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1488 is 10
9999 mem: storing 0 in location 1493
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1487 is 7
9999 mem: storing 0 in location 1494
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1487 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1237
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1230 is 3
9999 mem: storing 1 in location 1234
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1238
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1229 is 1
9999 mem: location 1224 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 110 -> 111
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 1
9999 mem: storing 31 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 43 -> 44
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 31
9999 mem: storing 1078 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1078
9999 mem: location 1279 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 1
9999 mem: storing 2 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 2
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 111 -> 112
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 2
9999 mem: storing 32 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 44 -> 45
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 32
9999 mem: storing 1080 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1080
9999 mem: location 1279 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 2
9999 mem: storing 3 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 3
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 112 -> 113
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 3
9999 mem: storing 33 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 45 -> 46
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 33
9999 mem: storing 1082 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1082
9999 mem: location 1279 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 113 -> 114
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 3
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1267 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1270
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1271
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 3
9999 mem: location 1266 is 10
9999 mem: storing 30 in location 1274
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 30
9999 mem: location 1270 is 4
9999 mem: storing 34 in location 1274
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 46 -> 47
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1276
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 32
9999 mem: storing 0 in location 1277
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 34
9999 mem: storing 1084 in location 1279
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 32
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1084
9999 mem: location 1279 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 4
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 4
9999 mem: storing 5 in location 1270
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 5
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 4 in location 1228
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1229
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1220 is 1008
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 4
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 115 -> 114
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 114 -> 115
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1167
9999 mem: incrementing refcount of 1209: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1167 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1168
9999 mem: incrementing refcount of 1213: 3 -> 4
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 7 -> 6
9999 mem: storing 1213 in location 1225
9999 mem: incrementing refcount of 1213: 4 -> 5
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1226 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1167
9999 mem: incrementing refcount of 1205: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1167 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 102
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1167 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1168
9999 mem: incrementing refcount of 1209: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1168 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 13 -> 12
9999 mem: storing 1209 in location 1226
9999 mem: incrementing refcount of 1209: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1225 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1223 is 4
9999 mem: storing 1 in location 1233
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jumping to instruction 68
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1205
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1225 is 1213
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1123
9999 mem: storing 1213 in location 1123
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1234
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1229 is 0
9999 mem: location 1231 is 0
9999 mem: storing 1 in location 1241
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1234 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1230 is 3
9999 mem: storing 0 in location 1243
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1244
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 80
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1213
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1228 is 4
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1127
9999 mem: storing 4 in location 1127
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1213
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1230 is 3
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1128
9999 mem: storing 3 in location 1128
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1213
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1231 is 0
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1129
9999 mem: storing 0 in location 1129
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1213
9999 mem: location 1124 is 1193
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1232 is 1201
9999 mem: location 1221 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy to is 1124
9999 mem: storing 1201 in location 1124
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
9999 mem: location 1220 is 1008
9999 mem: location 1221 is 1120
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1147
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 0
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 116 -> 117
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 118 -> 117
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 117 -> 118
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 118 -> 119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 119 -> 120
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 4
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 120 -> 121
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1315
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1318
9999 mem: incrementing refcount of 1008: 121 -> 122
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1319
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1320
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1321
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1322
9999 mem: storing 1 in location 1323
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1324
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1326
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1319 is 5
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 5
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1318
9999 mem: incrementing refcount of 1008: 122 -> 123
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 0
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 0
9999 mem: storing 1 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 1
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 1
9999 mem: storing 2 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 2
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 2
9999 mem: storing 3 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 3
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 3
9999 mem: storing 4 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 4
9999 mem: location 1321 is 4
9999 mem: storing 1 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1318 is 1008
9999 mem: location 1322 is 9480
9999 mem: location 1324 is 245
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1262
9999 mem: storing 1 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 5
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1320 is 4
9999 mem: storing 5 in location 1320
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1320 is 5
9999 mem: location 1321 is 4
9999 mem: storing 0 in location 1328
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1318 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 128 -> 129
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
9990 schedule: clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-combines-page-and-line-scroll
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1137
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 6
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 129 -> 130
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1147
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1148
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1149
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1151 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1150
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 0
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 131 -> 132
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 1
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 132 -> 133
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 133 -> 132
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 1
9999 mem: storing 2 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 2
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 133 -> 134
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 3
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 134 -> 135
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 135 -> 134
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 4
9999 mem: location 1148 is 4
9999 mem: storing 0 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1146 is 1008
9999 mem: location 1149 is 32
9999 mem: location 1150 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 135 -> 136
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1261
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1262
9999 mem: storing 1 in location 1263
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 1 in location 1265
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1267
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1268
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 6
9999 mem: storing 1 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 6
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1269
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 136 -> 135
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1147 is 4
9999 mem: storing 5 in location 1147
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1147 is 5
9999 mem: location 1148 is 4
9999 mem: storing 1 in location 1152
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1152 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1431
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1434
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1435
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1436
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1437
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1435 is 6
9999 mem: storing 7 in location 1435
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1434 is 1008
9999 mem: location 1435 is 7
9999 mem: location 1436 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 137 -> 138
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1137
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 7
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1434
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1434 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1167
9999 mem: incrementing refcount of 1008: 138 -> 139
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1167 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1168
 108 run: return {height: "number"}
9999 mem: location 1168 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1438
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1435 is 7
9999 mem: location 1438 is 4
9999 mem: storing 1 in location 1439
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1434 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1120
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 139 -> 138
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 138 -> 139
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1213
9999 mem: location 1124 is 1201
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1128
9998 run: its type is "number"
9999 mem: location 1128 is 3
9999 mem: storing 3 in location 1305
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1139
9999 mem: location 1122 is 1185
9999 mem: location 1123 is 1213
9999 mem: location 1124 is 1201
9999 mem: location 1125 is 0
9999 mem: location 1126 is 4
9999 mem: location 1127 is 4
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 1481
9999 mem: location 1132 is 0
9999 mem: location 1304 is 1120
9999 mem: skipping refcount at 1120
9998 run: address to copy is 1129
9998 run: its type is "number"
9999 mem: location 1129 is 0
9999 mem: storing 0 in location 1306
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1302 is 1008
9999 mem: location 1305 is 3
9999 mem: location 1306 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1133
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 139 -> 140
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1137
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1138
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1136 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 3
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1138 is 0
9999 mem: location 1136 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1302
9999 mem: incrementing refcount of 1008: 139 -> 140
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1303 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1315
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1318
9999 mem: incrementing refcount of 1296: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1318 is 1296
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 3
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "number"
9999 mem: location 1297 is 3
9999 mem: storing 3 in location 1319
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 3
9999 mem: location 1298 is 1282
9999 mem: location 1318 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1298 is 1282
9999 mem: storing 1282 in location 1320
9999 mem: incrementing refcount of 1282: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1320 is 1282
9999 mem: skipping refcount at 1282
9999 mem: storing 3 in location 1321
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1319 is 3
9999 mem: location 1321 is 3
9999 mem: storing 1 in location 1322
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1164
9999 mem: storing 1164 in location 1323
9999 mem: incrementing refcount of 1164: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1323 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1318 is 1296
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1296
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: decrementing refcount of 1296: 5 -> 4
9999 mem: storing 1296 in location 1303
9999 mem: incrementing refcount of 1296: 4 -> 5
9999 mem: storing 1 in location 1311
9999 mem: storing 1 in location 1312
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1312 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1302 is 1008
9999 mem: location 1303 is 1296
9999 mem: location 1304 is 1120
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .d         .\n    .e         .\n    .f         .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
