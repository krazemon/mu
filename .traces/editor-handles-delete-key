 102 run: assume-console {"\n    press delete\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {delete: ()}
9992 load: after rewriting: press {delete: ()}
9999 mem: storing 'press' event starting at 1442
9999 mem: storing console in 1446
9999 mem: storing console data in 1448
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1446
9999 mem: location 2 is 1150
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 71 -> 72
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1312
9999 mem: incrementing refcount of 1446: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1313
9999 mem: incrementing refcount of 1150: 10 -> 11
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1314
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1315
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1311 is 1012
9999 mem: location 1314 is 1
9999 mem: location 1315 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 72 -> 73
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1238 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1236 is 1012
9999 mem: clearing row:address:number
9999 mem: storing 0 in location 1239
9999 mem: clearing column:address:number
9999 mem: storing 0 in location 1240
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 73 -> 72
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 72 -> 73
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1312 is 1446
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1271
9999 mem: incrementing refcount of 1446: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1271 is 1446
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1440
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1447
9999 mem: storing 1447 in location 1272
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1440
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1448 is 1440
9999 mem: storing 1440 in location 1273
9999 mem: incrementing refcount of 1440: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1440
9999 mem: skipping refcount at 1440
9999 mem: storing 1 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1272 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1274 is 1
9999 mem: storing 0 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1273 is 1440
9999 mem: skipping refcount at 1440
9998 run: base address is 1441
9999 mem: location 1272 is 1447
9999 mem: location 1447 is 0
9998 run: address to copy is 1442
9998 run: its type is event
9999 mem: location 1442 is 1
9999 mem: location 1443 is 65522
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: storing 1 in location 1277
9999 mem: storing 65522 in location 1278
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1272 is 1447
9999 mem: location 1447 is 0
9999 mem: location 1272 is 1447
9999 mem: storing 1 in location 1447
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 65522
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1271 is 1446
9999 mem: clearing current-event-index:address:number
9999 mem: storing 0 in location 1272
9999 mem: clearing buf:address:shared:array:event
9999 mem: decrementing refcount of 1440: 2 -> 1
9999 mem: storing 0 in location 1273
9999 mem: clearing dummy:address:shared:event
9999 mem: storing 0 in location 1276
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65522, 0, 0]
9998 run: result 1 is 1446
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1316
9999 mem: storing 65522 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: decrementing refcount of 1446: 2 -> 1
9999 mem: storing 1446 in location 1312
9999 mem: incrementing refcount of 1446: 1 -> 2
9999 mem: storing 1 in location 1320
9999 mem: storing 0 in location 1321
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65522
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1322
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1311 is 1012
9999 mem: location 1313 is 1150
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65522
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1327
9999 mem: incrementing refcount of 1012: 73 -> 74
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1328
9999 mem: incrementing refcount of 1150: 11 -> 12
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1329
9999 mem: storing 65522 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1333
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1328 is 1150
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1327 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1449
9999 mem: storing 3 in location 1450
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1452
9999 mem: incrementing refcount of 1012: 74 -> 75
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1452 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1452 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1452 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1453
 106 run: return {width: "number"}
9999 mem: location 1453 is 10
9999 mem: clearing screen:address:shared:screen
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1334
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1327 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1452
9999 mem: incrementing refcount of 1012: 74 -> 75
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1452 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1452 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1452 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1453
 106 run: return {height: "number"}
9999 mem: location 1453 is 5
9999 mem: clearing screen:address:shared:screen
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1335
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1336
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 9
9999 mem: storing 9 in location 1337
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1338
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1339
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1340
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1339 is 1158
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1341
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1340 is 1159
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1342
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1329 is 1
9999 mem: location 1330 is 65522
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: storing 0 in location 1343
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1329 is 1
9999 mem: location 1330 is 65522
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: storing 1330 in location 1397
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1397 is 1330
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1360
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1376
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1383
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1384
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1398
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1398 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1399
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 0 in location 1402
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 757
 105 run: {delete-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65522: "literal", "delete": ()}
9999 mem: location 1397 is 1330
9999 mem: location 1330 is 65522
9999 mem: storing 1 in location 1404
 105 run: jump-unless {delete-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 1
9998 run: jump-unless fell through
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1378
9999 mem: incrementing refcount of 1172: 7 -> 8
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"}, {deleted-cell: ("address" "shared" "duplex-list" "character")} <- delete-at-cursor {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}
9999 mem: location 1328 is 1150
9999 mem: location 1327 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1150 in location 1414
9999 mem: incrementing refcount of 1150: 12 -> 13
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1415
9999 mem: incrementing refcount of 1012: 74 -> 75
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1416
 106 run: {data: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1172
9999 mem: storing 1172 in location 1417
9999 mem: incrementing refcount of 1172: 8 -> 9
 106 run: {deleted-cell: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1416 is 1154
9999 mem: location 1154 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1452
9999 mem: incrementing refcount of 1172: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1452 is 1172
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1452 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1195
9999 mem: location 1175 is 0
9999 mem: location 1452 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1174 is 1195
9999 mem: storing 1195 in location 1453
9999 mem: incrementing refcount of 1195: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1453 is 1195
9999 mem: clearing in:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1418
9999 mem: incrementing refcount of 1195: 11 -> 12
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1419
 106 run: jump-if {deleted-cell: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1418 is 1195
9998 run: jumping to instruction 9
 106 run: {currc: "character"} <- get {deleted-cell: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1418 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1172
9999 mem: location 1418 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 98
9999 mem: storing 98 in location 1420
 106 run: {data: ("address" "shared" "duplex-list" "character")} <- remove_2 {deleted-cell: ("address" "shared" "duplex-list" "character")}, {data: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1418 is 1195
9999 mem: location 1417 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: {x: ("address" "shared" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1236
9999 mem: incrementing refcount of 1195: 12 -> 13
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1237
9999 mem: incrementing refcount of 1172: 9 -> 10
 107 run: jump-if {x: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1236 is 1195
9998 run: jumping to instruction 5
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1172
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1238
9999 mem: incrementing refcount of 1199: 7 -> 8
 107 run: {prev-node: ("address" "shared" "duplex-list" "character")} <- get {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1172
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1172
9999 mem: storing 1172 in location 1239
9999 mem: incrementing refcount of 1172: 10 -> 11
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character")} <- get-address {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1172
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1240
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1240 is 1197
9999 mem: decrementing refcount of 1199: 8 -> 7
9999 mem: storing 0 in location 1197
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character")} <- get-address {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1172
9999 mem: location 1236 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1240
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1240 is 1198
9999 mem: decrementing refcount of 1172: 11 -> 10
9999 mem: storing 0 in location 1198
 107 run: jump-unless {next-node: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1238 is 1199
9998 run: jump-unless fell through
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character")} <- get-address {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1238 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1238 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1240
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1239 is 1172
9999 mem: location 1240 is 1202
9999 mem: decrementing refcount of 1195: 13 -> 12
9999 mem: storing 1172 in location 1202
9999 mem: incrementing refcount of 1172: 10 -> 11
 107 run: jump-unless {prev-node: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1239 is 1172
9998 run: jump-unless fell through
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character")} <- get-address {prev-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1239 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1195
9999 mem: location 1175 is 0
9999 mem: location 1239 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1240
 107 run: {tmp: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1238 is 1199
9999 mem: location 1240 is 1174
9999 mem: decrementing refcount of 1195: 12 -> 11
9999 mem: storing 1199 in location 1174
9999 mem: incrementing refcount of 1199: 7 -> 8
 107 run: return {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1237 is 1172
9999 mem: clearing x:address:shared:duplex-list:_elem/contained-in:in
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 0 in location 1236
9999 mem: clearing next-node:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1199: 8 -> 7
9999 mem: storing 0 in location 1238
9999 mem: clearing prev-node:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1172: 11 -> 10
9999 mem: storing 0 in location 1239
9999 mem: clearing tmp:address:address:shared:duplex-list:_elem
9999 mem: storing 0 in location 1240
9999 mem: clearing tmp
9999 mem: storing 0 in location 1240
9999 mem: clearing tmp
9999 mem: storing 0 in location 1240
9999 mem: clearing tmp
9999 mem: storing 0 in location 1240
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 1172 in location 1417
9999 mem: incrementing refcount of 1172: 9 -> 10
 106 run: {deleted-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1420 is 98
9999 mem: storing 0 in location 1421
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1419
 106 run: jump-unless {deleted-newline?: "boolean"}, {1: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 15
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1416 is 1154
9999 mem: location 1154 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1452
9999 mem: incrementing refcount of 1172: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1452 is 1172
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1452 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1199
9999 mem: location 1175 is 0
9999 mem: location 1452 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1174 is 1199
9999 mem: storing 1199 in location 1453
9999 mem: incrementing refcount of 1199: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1453 is 1199
9999 mem: clearing in:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1172: 11 -> 10
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1422
9999 mem: incrementing refcount of 1199: 8 -> 9
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1423
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1414 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1424
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1415 is 1012
9999 mem: location 1423 is 1158
9999 mem: location 1158 is 1
9999 mem: location 1424 is 1159
9999 mem: location 1159 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 75 -> 76
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1238 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1236 is 1012
9999 mem: clearing row:address:number
9999 mem: storing 0 in location 1239
9999 mem: clearing column:address:number
9999 mem: storing 0 in location 1240
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 76 -> 75
9999 mem: storing 1012 in location 1415
9999 mem: incrementing refcount of 1012: 75 -> 76
 106 run: {curr-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1424 is 1159
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1425
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1415 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1452
9999 mem: incrementing refcount of 1012: 76 -> 77
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1452 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1452 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1452 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1453
 107 run: return {width: "number"}
9999 mem: location 1453 is 10
9999 mem: clearing screen:address:shared:screen
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1426
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {screen-width: "number"}
9999 mem: location 1425 is 0
9999 mem: location 1426 is 10
9999 mem: storing 0 in location 1427
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1419
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 26
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1422 is 1199
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1422 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1172
9999 mem: location 1422 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1420
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1420 is 99
9999 mem: storing 0 in location 1428
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1415 is 1012
9999 mem: location 1420 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1244
9999 mem: incrementing refcount of 1012: 76 -> 77
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1245
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1246
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1248
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1245 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1244 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1250
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1251
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1252
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1251 is 5
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1250 is 10
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1245 is 99
9999 mem: storing 0 in location 1255
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1250 is 10
9999 mem: storing 10 in location 1258
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 10
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1258
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1259
9999 mem: incrementing refcount of 1018: 1 -> 2
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1260
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1245 is 99
9999 mem: storing 0 in location 1261
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1258 is 10
9999 mem: storing 1040 in location 1263
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1263 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1263 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1264
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1245 is 99
9999 mem: location 1264 is 1040
9999 mem: storing 99 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1263 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1263 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1265
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1246 is 7
9999 mem: location 1265 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1266
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1254 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1244 is 1012
9999 mem: clearing row:address:number
9999 mem: storing 0 in location 1252
9999 mem: clearing column:address:number
9999 mem: storing 0 in location 1254
9999 mem: clearing buf:address:shared:array:screen-cell
9999 mem: decrementing refcount of 1018: 2 -> 1
9999 mem: storing 0 in location 1259
9999 mem: clearing cursor:address:screen-cell
9999 mem: storing 0 in location 1263
9999 mem: clearing cursor-contents:address:character
9999 mem: storing 0 in location 1264
9999 mem: clearing cursor-color:address:number
9999 mem: storing 0 in location 1265
9999 mem: clearing cursor:address:screen-cell
9999 mem: storing 0 in location 1263
9999 mem: clearing cursor-contents:address:character
9999 mem: storing 0 in location 1264
9999 mem: clearing cursor-color:address:number
9999 mem: storing 0 in location 1265
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1415
9999 mem: incrementing refcount of 1012: 76 -> 77
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1425 is 0
9999 mem: storing 1 in location 1425
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1422 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1452
9999 mem: incrementing refcount of 1199: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1452 is 1199
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1452 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1172
9999 mem: location 1452 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1453
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1453 is 0
9999 mem: clearing in:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1199: 10 -> 9
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1199: 9 -> 8
9999 mem: storing 0 in location 1422
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {screen-width: "number"}
9999 mem: location 1425 is 1
9999 mem: location 1426 is 10
9999 mem: storing 0 in location 1427
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1419
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 26
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 34
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1429
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}
9999 mem: location 1415 is 1012
9999 mem: location 1429 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1244
9999 mem: incrementing refcount of 1012: 77 -> 78
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1245
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1246
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1248
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1245 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1244 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1250
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1251
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1252
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1251 is 5
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1250 is 10
9999 mem: storing 1 in location 1253
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1253 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1245 is 32
9999 mem: storing 0 in location 1255
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1252 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1250 is 10
9999 mem: storing 10 in location 1258
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 10
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1258
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1244 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1259
9999 mem: incrementing refcount of 1018: 1 -> 2
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1260
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1245 is 32
9999 mem: storing 0 in location 1261
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1259 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1258 is 11
9999 mem: storing 1042 in location 1263
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1263 is 1042
9999 mem: location 1042 is 99
9999 mem: location 1043 is 7
9999 mem: location 1263 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1264
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1245 is 32
9999 mem: location 1264 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1263 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1263 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1265
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1246 is 7
9999 mem: location 1265 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1250 is 10
9999 mem: storing 9 in location 1266
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1254 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1254 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1244 is 1012
9999 mem: clearing row:address:number
9999 mem: storing 0 in location 1252
9999 mem: clearing column:address:number
9999 mem: storing 0 in location 1254
9999 mem: clearing buf:address:shared:array:screen-cell
9999 mem: decrementing refcount of 1018: 2 -> 1
9999 mem: storing 0 in location 1259
9999 mem: clearing cursor:address:screen-cell
9999 mem: storing 0 in location 1263
9999 mem: clearing cursor-contents:address:character
9999 mem: storing 0 in location 1264
9999 mem: clearing cursor-color:address:number
9999 mem: storing 0 in location 1265
9999 mem: clearing cursor:address:screen-cell
9999 mem: storing 0 in location 1263
9999 mem: clearing cursor-contents:address:character
9999 mem: storing 0 in location 1264
9999 mem: clearing cursor-color:address:number
9999 mem: storing 0 in location 1265
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1415
9999 mem: incrementing refcount of 1012: 77 -> 78
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1419
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}, {go-render?: "boolean"}, {deleted-cell: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1150
9999 mem: location 1415 is 1012
9999 mem: location 1419 is 0
9999 mem: location 1418 is 1195
9999 mem: clearing before-cursor:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1416
9999 mem: clearing data:address:shared:duplex-list:character
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 0 in location 1417
9999 mem: clearing data
9999 mem: storing 0 in location 1417
9999 mem: clearing curr:address:shared:duplex-list:character
9999 mem: storing 0 in location 1422
9999 mem: clearing cursor-row:address:number
9999 mem: storing 0 in location 1423
9999 mem: clearing cursor-column:address:number
9999 mem: storing 0 in location 1424
9999 mem: clearing curr
9999 mem: storing 0 in location 1422
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1150
9998 run: result 1 is 1012
9998 run: result 2 is 0
9998 run: result 3 is 1195
9999 mem: decrementing refcount of 1150: 13 -> 12
9999 mem: storing 1150 in location 1328
9999 mem: incrementing refcount of 1150: 12 -> 13
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1327
9999 mem: incrementing refcount of 1012: 77 -> 78
9999 mem: storing 0 in location 1333
9999 mem: storing 1195 in location 1405
9999 mem: incrementing refcount of 1195: 10 -> 11
 105 run: jump-unless {deleted-cell: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1405 is 1195
9998 run: jump-unless fell through
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1172
9999 mem: storing 1172 in location 1380
9999 mem: incrementing refcount of 1172: 9 -> 10
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1347
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1347 is 1161
9999 mem: location 1161 is 1437
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1347 is 1161
9999 mem: location 1161 is 1437
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1452
9999 mem: incrementing refcount of 1437: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1452 is 1437
9999 mem: skipping refcount at 1437
9999 mem: location 1438 is 1000
9999 mem: location 1439 is 0
9999 mem: location 1452 is 1437
9999 mem: skipping refcount at 1437
9998 run: address to copy is 1438
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1438 is 1000
9999 mem: storing 1000 in location 1453
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1453 is 1000
9999 mem: clearing in:address:shared:list:_elem
9999 mem: decrementing refcount of 1437: 3 -> 2
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1346
9999 mem: incrementing refcount of 1000: 2 -> 3
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1346 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 2
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1195
9999 mem: location 1011 is 2
9999 mem: location 1346 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1348
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1348 is 1002
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {deletion: ("address" "delete-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1348 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1195
9999 mem: location 1011 is 2
9999 mem: location 1348 is 1002
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1370
 105 run: {coalesce?: "boolean"} <- equal {previous-coalesce-tag: "number"}, {2: "literal", "coalesce-delete": ()}
9999 mem: location 1370 is 2
9999 mem: storing 1 in location 1371
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 105 run: {delete-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {deletion: ("address" "delete-operation"), "lookup": ()}, {delete-until: "offset"}
9999 mem: location 1348 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1195
9999 mem: location 1011 is 2
9999 mem: location 1348 is 1002
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1406
 105 run: {delete-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1338 is 1154
9999 mem: location 1154 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1452
9999 mem: incrementing refcount of 1172: 10 -> 11
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1452 is 1172
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1452 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 167
9999 mem: location 1174 is 1199
9999 mem: location 1175 is 0
9999 mem: location 1452 is 1172
9999 mem: skipping refcount at 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1174 is 1199
9999 mem: storing 1199 in location 1453
9999 mem: incrementing refcount of 1199: 8 -> 9
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1453 is 1199
9999 mem: clearing in:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1172: 11 -> 10
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1199
9999 mem: location 1406 is 1010
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 1199 in location 1010
9999 mem: incrementing refcount of 1199: 9 -> 10
 105 run: {deleted-so-far: ("address" "address" "shared" "duplex-list" "character")} <- get-address {deletion: ("address" "delete-operation"), "lookup": ()}, {deleted-text: "offset"}
9999 mem: location 1348 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1199
9999 mem: location 1011 is 2
9999 mem: location 1348 is 1002
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1407
 105 run: {deleted-so-far: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- append_5 {deleted-so-far: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {deleted-cell: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1407 is 1008
9999 mem: location 1008 is 1186
9999 mem: location 1405 is 1195
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1433
9999 mem: incrementing refcount of 1186: 8 -> 9
 106 run: {new: ("address" "shared" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1434
9999 mem: incrementing refcount of 1195: 10 -> 11
 106 run: {last: ("address" "shared" "duplex-list" "character")} <- last_2 {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1433 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1454
9999 mem: storing 4 in location 1455
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1457
9999 mem: incrementing refcount of 1186: 9 -> 10
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1457 is 1186
9999 mem: storing 1186 in location 1458
9999 mem: incrementing refcount of 1186: 10 -> 11
 107 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1458 is 1186
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1452
9999 mem: incrementing refcount of 1186: 11 -> 12
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1452 is 1186
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1452 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 97
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1452 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1453
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1453 is 0
9999 mem: clearing in:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1186: 12 -> 11
9999 mem: storing 0 in location 1452
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1459
 107 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1459 is 0
9998 run: jumping to instruction 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1458 is 1186
9999 mem: clearing in:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1186: 11 -> 10
9999 mem: storing 0 in location 1457
9999 mem: clearing next:address:shared:duplex-list:_elem
9999 mem: storing 0 in location 1459
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: storing 1186 in location 1435
9999 mem: incrementing refcount of 1186: 10 -> 11
 106 run: {dest: ("address" "address" "shared" "duplex-list" "character")} <- get-address {last: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1435 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 97
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1435 is 1186
9999 mem: skipping refcount at 1186
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9999 mem: storing 1188 in location 1436
 106 run: {dest: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {new: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1434 is 1195
9999 mem: location 1436 is 1188
9999 mem: storing 1195 in location 1188
9999 mem: incrementing refcount of 1195: 11 -> 12
 106 run: jump-if {new: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1434 is 1195
9998 run: jumping to instruction 8
 106 run: {dest: ("address" "address" "shared" "duplex-list" "character")} <- get-address {new: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1434 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1434 is 1195
9999 mem: skipping refcount at 1195
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1436
 106 run: {dest: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {last: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1435 is 1186
9999 mem: location 1436 is 1198
9999 mem: storing 1186 in location 1198
9999 mem: incrementing refcount of 1186: 11 -> 12
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1433 is 1186
9999 mem: clearing new:address:shared:duplex-list:_elem/contained-in:in
9999 mem: decrementing refcount of 1195: 12 -> 11
9999 mem: storing 0 in location 1434
9999 mem: clearing last:address:shared:duplex-list:_elem
9999 mem: decrementing refcount of 1186: 12 -> 11
9999 mem: storing 0 in location 1435
9999 mem: clearing dest:address:address:shared:duplex-list:_elem
9999 mem: storing 0 in location 1436
9999 mem: clearing dest
9999 mem: storing 0 in location 1436
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1186
9999 mem: location 1407 is 1008
9999 mem: decrementing refcount of 1186: 11 -> 10
9999 mem: storing 1186 in location 1008
9999 mem: incrementing refcount of 1186: 10 -> 11
 105 run: {after-row: ("address" "number")} <- get-address {deletion: ("address" "delete-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1348 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1199
9999 mem: location 1011 is 2
9999 mem: location 1348 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1372
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1339 is 1158
9999 mem: location 1158 is 1
9999 mem: location 1372 is 1005
9999 mem: storing 1 in location 1005
 105 run: {after-column: ("address" "number")} <- get-address {deletion: ("address" "delete-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1348 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1199
9999 mem: location 1011 is 2
9999 mem: location 1348 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1373
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1340 is 1159
9999 mem: location 1159 is 0
9999 mem: location 1373 is 1006
9999 mem: storing 0 in location 1006
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {deletion: ("address" "delete-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1348 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1172
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1172
9999 mem: location 1008 is 1186
9999 mem: location 1009 is 1172
9999 mem: location 1010 is 1199
9999 mem: location 1011 is 2
9999 mem: location 1348 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1374
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1328 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1172
9999 mem: location 1374 is 1007
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 1172 in location 1007
9999 mem: incrementing refcount of 1172: 9 -> 10
 105 run: jump {+handle-keyboard-event_1_272+done-adding-delete-operation: "label"}
9998 run: jumping to instruction 793
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1327 is 1012
9999 mem: location 1328 is 1150
9999 mem: location 1333 is 0
9999 mem: clearing before-cursor:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1338
9999 mem: clearing cursor-row:address:number
9999 mem: storing 0 in location 1339
9999 mem: clearing cursor-column:address:number
9999 mem: storing 0 in location 1340
9999 mem: clearing c:address:character
9999 mem: storing 0 in location 1343
9999 mem: clearing redo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1345
9999 mem: clearing op:address:shared:operation
9999 mem: decrementing refcount of 1000: 3 -> 2
9999 mem: storing 0 in location 1346
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing deletion:address:delete-operation
9999 mem: storing 0 in location 1348
9999 mem: clearing start:address:shared:duplex-list:character
9999 mem: storing 0 in location 1349
9999 mem: clearing end:address:shared:duplex-list:character
9999 mem: storing 0 in location 1350
9999 mem: clearing top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1351
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1351
9999 mem: clearing typing:address:insert-operation
9999 mem: storing 0 in location 1353
9999 mem: clearing insert-from:address:shared:duplex-list:character
9999 mem: storing 0 in location 1354
9999 mem: clearing top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1351
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing redo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1345
9999 mem: clearing deletion:address:delete-operation
9999 mem: storing 0 in location 1348
9999 mem: clearing start2:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1356
9999 mem: clearing anchor:address:shared:duplex-list:character
9999 mem: storing 0 in location 1357
9999 mem: clearing deleted:address:shared:duplex-list:character
9999 mem: storing 0 in location 1358
9999 mem: clearing old-cursor:address:shared:duplex-list:character
9999 mem: storing 0 in location 1359
9999 mem: clearing top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1351
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1351
9999 mem: clearing typing:address:insert-operation
9999 mem: storing 0 in location 1353
9999 mem: clearing start:address:shared:duplex-list:character
9999 mem: storing 0 in location 1349
9999 mem: clearing end:address:shared:duplex-list:character
9999 mem: storing 0 in location 1350
9999 mem: clearing top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1351
9999 mem: clearing top-of-screen:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1361
9999 mem: clearing old-top:address:shared:duplex-list:character
9999 mem: storing 0 in location 1362
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-of-screen:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1361
9999 mem: clearing old-top:address:shared:duplex-list:character
9999 mem: storing 0 in location 1362
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: decrementing refcount of 1172: 10 -> 9
9999 mem: storing 0 in location 1378
9999 mem: clearing deleted-cells:address:shared:duplex-list:character
9999 mem: storing 0 in location 1379
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: decrementing refcount of 1172: 9 -> 8
9999 mem: storing 0 in location 1380
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing deleted-until:address:shared:duplex-list:character
9999 mem: storing 0 in location 1381
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1378
9999 mem: clearing deleted-cells:address:shared:duplex-list:character
9999 mem: storing 0 in location 1379
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: storing 0 in location 1380
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing deleted-until:address:shared:duplex-list:character
9999 mem: storing 0 in location 1381
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1378
9999 mem: clearing backspaced-cell:address:shared:duplex-list:character
9999 mem: storing 0 in location 1386
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: storing 0 in location 1380
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing deletion:address:delete-operation
9999 mem: storing 0 in location 1348
9999 mem: clearing delete-from:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1387
9999 mem: clearing backspaced-so-far:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1388
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing deleted-until:address:shared:duplex-list:character
9999 mem: storing 0 in location 1381
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1378
9999 mem: clearing cursor-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1390
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: storing 0 in location 1380
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing typing:address:insert-operation
9999 mem: storing 0 in location 1353
9999 mem: clearing insert-until:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1391
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing insert-from:address:shared:duplex-list:character
9999 mem: storing 0 in location 1354
9999 mem: clearing insert-to:address:shared:duplex-list:character
9999 mem: storing 0 in location 1392
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1378
9999 mem: clearing cursor-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1390
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: storing 0 in location 1380
9999 mem: clearing insert-from:address:shared:duplex-list:character
9999 mem: storing 0 in location 1354
9999 mem: clearing insert-to:address:shared:duplex-list:character
9999 mem: storing 0 in location 1392
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1378
9999 mem: clearing cursor-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1390
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: storing 0 in location 1380
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing typing:address:insert-operation
9999 mem: storing 0 in location 1353
9999 mem: clearing insert-until:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1391
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing insert-from:address:shared:duplex-list:character
9999 mem: storing 0 in location 1354
9999 mem: clearing insert-to:address:shared:duplex-list:character
9999 mem: storing 0 in location 1392
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing k:address:number
9999 mem: storing 0 in location 1397
9999 mem: clearing top-of-screen:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1361
9999 mem: clearing old-top:address:shared:duplex-list:character
9999 mem: storing 0 in location 1362
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-of-screen:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1361
9999 mem: clearing old-top:address:shared:duplex-list:character
9999 mem: storing 0 in location 1362
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing prev:address:shared:duplex-list:character
9999 mem: storing 0 in location 1401
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing next-cursor:address:shared:duplex-list:character
9999 mem: storing 0 in location 1403
9999 mem: clearing before-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1365
9999 mem: clearing after-top-of-screen:address:shared:duplex-list:character
9999 mem: storing 0 in location 1369
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing move:address:move-operation
9999 mem: storing 0 in location 1352
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing top-before:address:shared:duplex-list:character
9999 mem: storing 0 in location 1378
9999 mem: clearing deleted-cell:address:shared:duplex-list:character
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 0 in location 1405
9999 mem: clearing top-after:address:shared:duplex-list:character
9999 mem: storing 0 in location 1380
9999 mem: clearing undo:address:address:shared:list:address:shared:operation
9999 mem: storing 0 in location 1347
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing deletion:address:delete-operation
9999 mem: storing 0 in location 1348
9999 mem: clearing delete-until:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1406
9999 mem: clearing deleted-so-far:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1407
9999 mem: clearing after-row:address:number
9999 mem: storing 0 in location 1372
9999 mem: clearing after-column:address:number
9999 mem: storing 0 in location 1373
9999 mem: clearing after-top:address:address:shared:duplex-list:character
9999 mem: storing 0 in location 1374
9999 mem: clearing op:address:shared:operation
9999 mem: storing 0 in location 1346
9999 mem: clearing deleted-until:address:shared:duplex-list:character
9999 mem: storing 0 in location 1381
9999 mem: clearing indent?:address:boolean
9999 mem: storing 0 in location 1409
9999 mem: clearing indent?:address:boolean
9999 mem: storing 0 in location 1409
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1150
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 77 -> 78
9999 mem: decrementing refcount of 1150: 13 -> 12
9999 mem: storing 1150 in location 1313
9999 mem: incrementing refcount of 1150: 12 -> 13
9999 mem: storing 0 in location 1323
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 1
9999 mem: storing 1 in location 1314
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9999 mem: location 1151 is 1172
9999 mem: location 1152 is 1172
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1172
9999 mem: location 1155 is 0
9999 mem: location 1156 is 9
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1437
9999 mem: location 1162 is 0
9999 mem: location 1313 is 1150
9999 mem: skipping refcount at 1150
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1315
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1311 is 1012
9999 mem: location 1314 is 1
9999 mem: location 1315 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1236
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1236 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1239
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1237 is 1
9999 mem: location 1239 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1236 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1240
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1238 is 0
9999 mem: location 1240 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1236 is 1012
9999 mem: clearing row:address:number
9999 mem: storing 0 in location 1239
9999 mem: clearing column:address:number
9999 mem: storing 0 in location 1240
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1312 is 1446
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1446 in location 1271
9999 mem: incrementing refcount of 1446: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1271 is 1446
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 1
9999 mem: location 1448 is 1440
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1447
9999 mem: storing 1447 in location 1272
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9999 mem: location 1447 is 1
9999 mem: location 1448 is 1440
9999 mem: location 1271 is 1446
9999 mem: skipping refcount at 1446
9998 run: address to copy is 1448
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1448 is 1440
9999 mem: storing 1440 in location 1273
9999 mem: incrementing refcount of 1440: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1440
9999 mem: skipping refcount at 1440
9999 mem: storing 1 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1272 is 1447
9999 mem: location 1447 is 1
9999 mem: location 1274 is 1
9999 mem: storing 1 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1449 in location 1276
9999 mem: incrementing refcount of 1449: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1276 is 1449
9999 mem: skipping refcount at 1449
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1271 is 1446
9999 mem: clearing current-event-index:address:number
9999 mem: storing 0 in location 1272
9999 mem: clearing buf:address:shared:array:event
9999 mem: decrementing refcount of 1440: 2 -> 1
9999 mem: storing 0 in location 1273
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1446
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: decrementing refcount of 1446: 3 -> 2
9999 mem: storing 1446 in location 1312
9999 mem: incrementing refcount of 1446: 2 -> 3
9999 mem: storing 1 in location 1320
9999 mem: storing 1 in location 1321
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1311 is 1012
9999 mem: location 1312 is 1446
9999 mem: location 1313 is 1150
9999 mem: clearing t:address:touch-event
9999 mem: storing 0 in location 1322
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .c         .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {2: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
