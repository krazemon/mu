 102 run: assume-console {"\n    # click on right half of screen\n    left-click 3, 8\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {8: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {8: "literal"}
9999 mem: storing 'left-click' event starting at 1302
9999 mem: storing console in 1306
9999 mem: storing console data in 1308
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1306
9999 mem: location 2 is 1143
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1309
9999 mem: storing 14 in location 1310
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 45 -> 46
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1313
9999 mem: incrementing refcount of 1306: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1314
9999 mem: incrementing refcount of 1143: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1315
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1316
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1315 is 1
9999 mem: location 1316 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 46 -> 47
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1313 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1269
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1272
9999 mem: incrementing refcount of 1306: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1272 is 1306
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 0
9999 mem: location 1308 is 1300
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9999 mem: storing 1307 in location 1273
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 0
9999 mem: location 1308 is 1300
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1308 is 1300
9999 mem: storing 1300 in location 1274
9999 mem: incrementing refcount of 1300: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 1 in location 1275
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1273 is 1307
9999 mem: location 1307 is 0
9999 mem: location 1275 is 1
9999 mem: storing 0 in location 1276
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1273 is 1307
9999 mem: location 1307 is 0
9998 run: address to copy is 1302
9998 run: its type is event
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 3
9999 mem: location 1305 is 8
9999 mem: storing 2 in location 1278
9999 mem: storing 65513 in location 1279
9999 mem: storing 3 in location 1280
9999 mem: storing 8 in location 1281
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1273 is 1307
9999 mem: location 1307 is 0
9999 mem: location 1273 is 1307
9999 mem: storing 1 in location 1307
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1278 is 2
9999 mem: location 1279 is 65513
9999 mem: location 1280 is 3
9999 mem: location 1281 is 8
9999 mem: location 1272 is 1306
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 8]
9998 run: result 1 is 1306
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1317
9999 mem: storing 65513 in location 1318
9999 mem: storing 3 in location 1319
9999 mem: storing 8 in location 1320
9999 mem: decrementing refcount of 1306: 2 -> 1
9999 mem: storing 1306 in location 1313
9999 mem: incrementing refcount of 1306: 1 -> 2
9999 mem: storing 1 in location 1321
9999 mem: storing 0 in location 1322
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1317 is 2
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 3
9999 mem: location 1320 is 8
9999 mem: storing 1318 in location 1323
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1323 is 1318
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1312 is 1008
9999 mem: location 1314 is 1143
9999 mem: location 1323 is 1318
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 3
9999 mem: location 1320 is 8
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1325
9999 mem: storing 27 in location 1326
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 47 -> 48
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1329
9999 mem: incrementing refcount of 1143: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1330
9999 mem: storing 3 in location 1331
9999 mem: storing 8 in location 1332
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1329 is 1143
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1330 is 65513
9999 mem: location 1331 is 3
9999 mem: location 1332 is 8
9998 run: address to copy is 1331
9998 run: its type is "number"
9999 mem: location 1331 is 3
9999 mem: storing 3 in location 1333
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1333 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1330 is 65513
9999 mem: location 1331 is 3
9999 mem: location 1332 is 8
9998 run: address to copy is 1332
9998 run: its type is "number"
9999 mem: location 1332 is 8
9999 mem: storing 8 in location 1334
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1329 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1329 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1335
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1334 is 8
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1336
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1329 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1329 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 4
9999 mem: storing 4 in location 1337
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1334 is 8
9999 mem: location 1337 is 4
9999 mem: storing 1 in location 1338
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1338 is 1
9998 run: jump-unless fell through
 105 run: reply {0: "literal", "false": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1329 is 1143
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1315
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1314 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1316
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1315 is 1
9999 mem: location 1316 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 48 -> 49
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1313 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1269
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1272
9999 mem: incrementing refcount of 1306: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1272 is 1306
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 1
9999 mem: location 1308 is 1300
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9999 mem: storing 1307 in location 1273
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 1
9999 mem: location 1308 is 1300
9999 mem: location 1272 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1308 is 1300
9999 mem: storing 1300 in location 1274
9999 mem: incrementing refcount of 1300: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 1 in location 1275
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1273 is 1307
9999 mem: location 1307 is 1
9999 mem: location 1275 is 1
9999 mem: storing 1 in location 1276
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
9999 mem: storing 1187 in location 1277
9999 mem: incrementing refcount of 1187: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1277 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1272 is 1306
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1306
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: decrementing refcount of 1306: 3 -> 2
9999 mem: storing 1306 in location 1313
9999 mem: incrementing refcount of 1306: 2 -> 3
9999 mem: storing 1 in location 1321
9999 mem: storing 1 in location 1322
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1312 is 1008
9999 mem: location 1313 is 1306
9999 mem: location 1314 is 1143
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈     .\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1  # no change to cursor row\n    4 <- 0  # ..or column\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
