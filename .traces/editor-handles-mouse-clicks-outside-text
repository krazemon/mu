 102 run: assume-console {"\n    left-click 1, 7  # last line, to the right of text\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {7: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {7: "literal"}
9999 mem: storing 'left-click' event starting at 1271
9999 mem: storing console in 1275
9999 mem: storing console data in 1277
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1275
9999 mem: location 2 is 1143
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1278
9999 mem: storing 14 in location 1279
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1281
9999 mem: incrementing refcount of 1008: 10 -> 11
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1282
9999 mem: incrementing refcount of 1275: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1283
9999 mem: incrementing refcount of 1143: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1284
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1285
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1281 is 1008
9999 mem: location 1284 is 1
9999 mem: location 1285 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1281
9999 mem: incrementing refcount of 1008: 11 -> 12
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1282 is 1275
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1294
9999 mem: storing 12 in location 1295
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1297
9999 mem: incrementing refcount of 1275: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1297 is 1275
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1269
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9998 run: address to copy is 1276
9999 mem: storing 1276 in location 1298
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1269
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9998 run: address to copy is 1277
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1277 is 1269
9999 mem: storing 1269 in location 1299
9999 mem: incrementing refcount of 1269: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1299 is 1269
9999 mem: skipping refcount at 1269
9999 mem: storing 1 in location 1300
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1298 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1300 is 1
9999 mem: storing 0 in location 1301
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 1269
9999 mem: skipping refcount at 1269
9998 run: base address is 1270
9999 mem: location 1298 is 1276
9999 mem: location 1276 is 0
9998 run: address to copy is 1271
9998 run: its type is event
9999 mem: location 1271 is 2
9999 mem: location 1272 is 65513
9999 mem: location 1273 is 1
9999 mem: location 1274 is 7
9999 mem: storing 2 in location 1303
9999 mem: storing 65513 in location 1304
9999 mem: storing 1 in location 1305
9999 mem: storing 7 in location 1306
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1298 is 1276
9999 mem: storing 1 in location 1276
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1303 is 2
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 1
9999 mem: location 1306 is 7
9999 mem: location 1297 is 1275
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 7]
9998 run: result 1 is 1275
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1286
9999 mem: storing 65513 in location 1287
9999 mem: storing 1 in location 1288
9999 mem: storing 7 in location 1289
9999 mem: decrementing refcount of 1275: 2 -> 1
9999 mem: storing 1275 in location 1282
9999 mem: incrementing refcount of 1275: 1 -> 2
9999 mem: storing 1 in location 1290
9999 mem: storing 0 in location 1291
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1286 is 2
9999 mem: location 1287 is 65513
9999 mem: location 1288 is 1
9999 mem: location 1289 is 7
9999 mem: storing 1287 in location 1292
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1292 is 1287
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1281 is 1008
9999 mem: location 1283 is 1143
9999 mem: location 1292 is 1287
9999 mem: location 1287 is 65513
9999 mem: location 1288 is 1
9999 mem: location 1289 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1308
9999 mem: storing 27 in location 1309
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1311
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1312
9999 mem: incrementing refcount of 1143: 5 -> 6
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1313
9999 mem: storing 1 in location 1314
9999 mem: storing 7 in location 1315
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1312 is 1143
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1313 is 65513
9999 mem: location 1314 is 1
9999 mem: location 1315 is 7
9998 run: address to copy is 1314
9998 run: its type is "number"
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1316
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1316 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1313 is 65513
9999 mem: location 1314 is 1
9999 mem: location 1315 is 7
9998 run: address to copy is 1315
9998 run: its type is "number"
9999 mem: location 1315 is 7
9999 mem: storing 7 in location 1317
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1318
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1317 is 7
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1319
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1320
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1317 is 7
9999 mem: location 1320 is 9
9999 mem: storing 0 in location 1321
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1322
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1323
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1162
9999 mem: storing 1162 in location 1324
9999 mem: incrementing refcount of 1162: 8 -> 9
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1311 is 1008
9999 mem: location 1312 is 1143
9999 mem: location 1316 is 1
9999 mem: location 1317 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1337
9999 mem: storing 26 in location 1338
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 13 -> 14
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1341
9999 mem: incrementing refcount of 1143: 6 -> 7
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1342
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1341 is 1143
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1344
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1345
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1340 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1190
9999 mem: incrementing refcount of 1008: 14 -> 15
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1190 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1190 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1190 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1191
 107 run: return {height: "number"}
9999 mem: location 1191 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1346
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1162
9999 mem: storing 1162 in location 1347
9999 mem: incrementing refcount of 1162: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1347 is 1162
9999 mem: storing 1162 in location 1348
9999 mem: incrementing refcount of 1162: 10 -> 11
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1347 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1162 in location 1190
9999 mem: incrementing refcount of 1162: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1162
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1162
9999 mem: skipping refcount at 1162
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1183
9999 mem: location 1165 is 0
9999 mem: location 1190 is 1162
9999 mem: skipping refcount at 1162
9998 run: address to copy is 1164
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1164 is 1183
9999 mem: storing 1183 in location 1191
9999 mem: incrementing refcount of 1183: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1162: 12 -> 11
9999 mem: storing 1183 in location 1347
9999 mem: incrementing refcount of 1183: 9 -> 10
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1349
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1350
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1351
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1342 is 1
9999 mem: location 1351 is 1151
9999 mem: storing 1 in location 1151
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1352
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1343 is 7
9999 mem: location 1352 is 1152
9999 mem: storing 7 in location 1152
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1162
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 7
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1341 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1353
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1347 is 1183
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1349 is 1
9999 mem: location 1346 is 5
9999 mem: storing 0 in location 1354
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1355
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 0
9999 mem: location 1352 is 1152
9999 mem: location 1152 is 7
9999 mem: storing 0 in location 1356
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1347 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 97
9999 mem: location 1185 is 1192
9999 mem: location 1186 is 1162
9999 mem: location 1347 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 97
9999 mem: storing 97 in location 1357
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1357 is 97
9999 mem: storing 0 in location 1358
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1350 is 0
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1347 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1190
9999 mem: incrementing refcount of 1183: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 97
9999 mem: location 1185 is 1192
9999 mem: location 1186 is 1162
9999 mem: location 1190 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 1192
9999 mem: storing 1192 in location 1191
9999 mem: incrementing refcount of 1192: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1183: 11 -> 10
9999 mem: storing 1192 in location 1347
9999 mem: incrementing refcount of 1192: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1348 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1162 in location 1190
9999 mem: incrementing refcount of 1162: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1162
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1162
9999 mem: skipping refcount at 1162
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1183
9999 mem: location 1165 is 0
9999 mem: location 1190 is 1162
9999 mem: skipping refcount at 1162
9998 run: address to copy is 1164
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1164 is 1183
9999 mem: storing 1183 in location 1191
9999 mem: incrementing refcount of 1183: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1162: 12 -> 11
9999 mem: storing 1183 in location 1348
9999 mem: incrementing refcount of 1183: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1350 is 0
9999 mem: storing 1 in location 1350
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1347 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1349 is 1
9999 mem: location 1346 is 5
9999 mem: storing 0 in location 1354
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1355
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1
9999 mem: location 1352 is 1152
9999 mem: location 1152 is 7
9999 mem: storing 0 in location 1356
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1347 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 98
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1183
9999 mem: location 1347 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 98
9999 mem: storing 98 in location 1357
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1357 is 98
9999 mem: storing 0 in location 1358
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1350 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1347 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1190
9999 mem: incrementing refcount of 1192: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 98
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1183
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1191
9999 mem: incrementing refcount of 1196: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 11 -> 10
9999 mem: storing 1196 in location 1347
9999 mem: incrementing refcount of 1196: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1348 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1190
9999 mem: incrementing refcount of 1183: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 97
9999 mem: location 1185 is 1192
9999 mem: location 1186 is 1162
9999 mem: location 1190 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 1192
9999 mem: storing 1192 in location 1191
9999 mem: incrementing refcount of 1192: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1183: 13 -> 12
9999 mem: storing 1192 in location 1348
9999 mem: incrementing refcount of 1192: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1350 is 1
9999 mem: storing 2 in location 1350
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-handles-mouse-clicks-outside-text
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1347 is 1196
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1349 is 1
9999 mem: location 1346 is 5
9999 mem: storing 0 in location 1354
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1355
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 2
9999 mem: location 1352 is 1152
9999 mem: location 1152 is 7
9999 mem: storing 0 in location 1356
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1347 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 99
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1347 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 99
9999 mem: storing 99 in location 1357
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1357 is 99
9999 mem: storing 0 in location 1358
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1350 is 2
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1360
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1347 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1190
9999 mem: incrementing refcount of 1196: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 99
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1190 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1191
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1196: 10 -> 9
9999 mem: storing 0 in location 1347
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1348 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1190
9999 mem: incrementing refcount of 1192: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 98
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1183
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1191
9999 mem: incrementing refcount of 1196: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1191 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 13 -> 12
9999 mem: storing 1196 in location 1348
9999 mem: incrementing refcount of 1196: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1350 is 2
9999 mem: storing 3 in location 1350
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1355
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 3
9999 mem: location 1352 is 1152
9999 mem: location 1152 is 7
9999 mem: storing 1 in location 1361
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1355 is 1
9999 mem: location 1361 is 1
9999 mem: storing 1 in location 1362
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1151
9999 mem: location 1151 is 1
9999 mem: storing 0 in location 1363
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 mem: storing 1 in location 1364
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1349 is 1
9999 mem: location 1351 is 1151
9999 mem: storing 1 in location 1151
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1350 is 3
9999 mem: location 1352 is 1152
9999 mem: storing 3 in location 1152
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1348 is 1196
9999 mem: location 1353 is 1147
9999 mem: decrementing refcount of 1162: 11 -> 10
9999 mem: storing 1196 in location 1147
9999 mem: incrementing refcount of 1196: 11 -> 12
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1341 is 1143
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1143: 7 -> 6
9999 mem: storing 1143 in location 1312
9999 mem: incrementing refcount of 1143: 6 -> 7
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1325
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1326
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1327
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1312 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1162
9999 mem: storing 1162 in location 1328
9999 mem: incrementing refcount of 1162: 10 -> 11
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1230
9999 mem: storing 1230 in location 1330
9999 mem: incrementing refcount of 1230: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1162
9999 mem: location 1326 is 1
9999 mem: location 1327 is 3
9999 mem: location 1328 is 1162
9999 mem: location 1325 is 0
9999 mem: location 1330 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1330 is 1230
9999 mem: skipping refcount at 1230
9999 mem: storing 1 in location 1231
9999 mem: storing 1 in location 1232
9999 mem: storing 0 in location 1233
9999 mem: storing 1162 in location 1234
9999 mem: storing 1 in location 1235
9999 mem: storing 3 in location 1236
9999 mem: storing 1162 in location 1237
9999 mem: storing 0 in location 1238
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1312 is 1143
9999 mem: location 1330 is 1230
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1176
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1179
9999 mem: incrementing refcount of 1143: 7 -> 8
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1180
9999 mem: incrementing refcount of 1230: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1179 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1179 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1181
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1180 is 1230
9999 mem: location 1181 is 1154
9999 mem: location 1154 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1159
9999 mem: incrementing refcount of 1230: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1160
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1365
9999 mem: storing 1365 in location 1161
9999 mem: incrementing refcount of 1365: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1159 is 1230
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1365
9999 mem: skipping refcount at 1365
9999 mem: location 1161 is 1365
9999 mem: skipping refcount at 1365
9999 mem: storing 1230 in location 1366
9999 mem: storing 0 in location 1367
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1161 is 1365
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1365
9999 mem: location 1181 is 1154
9999 mem: storing 1365 in location 1154
9999 mem: incrementing refcount of 1365: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1179 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1365
9999 mem: location 1155 is 0
9999 mem: location 1179 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1182
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1182 is 1155
9999 mem: storing 0 in location 1155
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1179 is 1143
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1143: 8 -> 7
9999 mem: storing 1143 in location 1312
9999 mem: incrementing refcount of 1143: 7 -> 8
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1312 is 1143
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1365
9999 mem: location 1155 is 0
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1284
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1365
9999 mem: location 1155 is 0
9999 mem: location 1283 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1285
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1281 is 1008
9999 mem: location 1284 is 1
9999 mem: location 1285 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1281
9999 mem: incrementing refcount of 1008: 15 -> 16
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1282 is 1275
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1294
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1297
9999 mem: incrementing refcount of 1275: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1297 is 1275
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1269
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9998 run: address to copy is 1276
9999 mem: storing 1276 in location 1298
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1269
9999 mem: location 1297 is 1275
9999 mem: skipping refcount at 1275
9998 run: address to copy is 1277
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1277 is 1269
9999 mem: storing 1269 in location 1299
9999 mem: incrementing refcount of 1269: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1299 is 1269
9999 mem: skipping refcount at 1269
9999 mem: storing 1 in location 1300
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1298 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1301
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1187
9999 mem: storing 1187 in location 1302
9999 mem: incrementing refcount of 1187: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1302 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1297 is 1275
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1275
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: decrementing refcount of 1275: 3 -> 2
9999 mem: storing 1275 in location 1282
9999 mem: incrementing refcount of 1275: 2 -> 3
9999 mem: storing 1 in location 1290
9999 mem: storing 1 in location 1291
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1281 is 1008
9999 mem: location 1282 is 1275
9999 mem: location 1283 is 1143
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1365
9999 mem: location 1155 is 0
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1162
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1196
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1365
9999 mem: location 1155 is 0
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1  # cursor row\n    4 <- 3  # cursor column\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
