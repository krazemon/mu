 102 run: assume-console {"\n    left-click 3, 5  # below all text\n    type [ef]\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {5: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {5: "literal"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ef": "literal-string"}
9992 load: after rewriting: type {"ef": "literal-string"}
9999 mem: storing 'left-click' event starting at 1324
9999 mem: storing 'type' event starting at 1328
9999 mem: storing 'text' tag at 1328
9999 mem: storing character 101 at 1329
9999 mem: storing 'text' tag at 1332
9999 mem: storing character 102 at 1333
9999 mem: storing console in 1336
9999 mem: storing console data in 1338
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1336
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1339
9999 mem: storing 14 in location 1340
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 75 -> 76
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1336 in location 1343
9999 mem: incrementing refcount of 1336: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1344
9999 mem: incrementing refcount of 1152: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1345
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1346
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1342 is 1012
9999 mem: location 1345 is 1
9999 mem: location 1346 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1247
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1251
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1252
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1253
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1254 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 76 -> 77
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1343 is 1336
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1291
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1336 in location 1294
9999 mem: incrementing refcount of 1336: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1294 is 1336
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 0
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1337
9999 mem: storing 1337 in location 1295
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 0
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1338
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1338 is 1322
9999 mem: storing 1322 in location 1296
9999 mem: incrementing refcount of 1322: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: storing 3 in location 1297
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1297 is 3
9999 mem: storing 0 in location 1298
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1298 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: base address is 1323
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 0
9998 run: address to copy is 1324
9998 run: its type is event
9999 mem: location 1324 is 2
9999 mem: location 1325 is 65513
9999 mem: location 1326 is 3
9999 mem: location 1327 is 5
9999 mem: storing 2 in location 1300
9999 mem: storing 65513 in location 1301
9999 mem: storing 3 in location 1302
9999 mem: storing 5 in location 1303
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1295 is 1337
9999 mem: storing 1 in location 1337
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1300 is 2
9999 mem: location 1301 is 65513
9999 mem: location 1302 is 3
9999 mem: location 1303 is 5
9999 mem: location 1294 is 1336
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 5]
9998 run: result 1 is 1336
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1347
9999 mem: storing 65513 in location 1348
9999 mem: storing 3 in location 1349
9999 mem: storing 5 in location 1350
9999 mem: decrementing refcount of 1336: 2 -> 1
9999 mem: storing 1336 in location 1343
9999 mem: incrementing refcount of 1336: 1 -> 2
9999 mem: storing 1 in location 1351
9999 mem: storing 0 in location 1352
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1347 is 2
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 3
9999 mem: location 1350 is 5
9999 mem: storing 1348 in location 1353
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1353 is 1348
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1342 is 1012
9999 mem: location 1344 is 1152
9999 mem: location 1353 is 1348
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 3
9999 mem: location 1350 is 5
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1355
9999 mem: storing 27 in location 1356
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1358
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1359
9999 mem: incrementing refcount of 1152: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1360
9999 mem: storing 3 in location 1361
9999 mem: storing 5 in location 1362
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1359 is 1152
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1360 is 65513
9999 mem: location 1361 is 3
9999 mem: location 1362 is 5
9998 run: address to copy is 1361
9998 run: its type is "number"
9999 mem: location 1361 is 3
9999 mem: storing 3 in location 1363
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1363 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1360 is 65513
9999 mem: location 1361 is 3
9999 mem: location 1362 is 5
9998 run: address to copy is 1362
9998 run: its type is "number"
9999 mem: location 1362 is 5
9999 mem: storing 5 in location 1364
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1365
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1364 is 5
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1366
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1367
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1364 is 5
9999 mem: location 1367 is 9
9999 mem: storing 0 in location 1368
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1369
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1370
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1371
9999 mem: incrementing refcount of 1171: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1358 is 1012
9999 mem: location 1359 is 1152
9999 mem: location 1363 is 3
9999 mem: location 1364 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1384
9999 mem: storing 26 in location 1385
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1387
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1388
9999 mem: incrementing refcount of 1152: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1389
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1390
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1388 is 1152
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1391
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1392
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1387 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 79 -> 80
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1393
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1394
9999 mem: incrementing refcount of 1171: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1171
9999 mem: storing 1171 in location 1395
9999 mem: incrementing refcount of 1171: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1192 in location 1394
9999 mem: incrementing refcount of 1192: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1396
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1391 is 0
9999 mem: storing 0 in location 1397
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1398
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1389 is 3
9999 mem: location 1398 is 1160
9999 mem: storing 3 in location 1160
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1399
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1399 is 1161
9999 mem: storing 5 in location 1161
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 3
9999 mem: location 1161 is 5
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1388 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1400
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1394 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1396 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1401
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1394 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1394 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1404
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1404 is 97
9999 mem: storing 0 in location 1405
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1397 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1407
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 15 -> 14
9999 mem: storing 1201 in location 1394
9999 mem: incrementing refcount of 1201: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1395 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1192 in location 1395
9999 mem: incrementing refcount of 1192: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1397 is 0
9999 mem: storing 1 in location 1397
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1394 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1396 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1401
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1394 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1394 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1404
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1404 is 98
9999 mem: storing 0 in location 1405
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1397 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1407
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 15 -> 14
9999 mem: storing 1205 in location 1394
9999 mem: incrementing refcount of 1205: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1395 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 17 -> 16
9999 mem: storing 1201 in location 1395
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1397 is 1
9999 mem: storing 2 in location 1397
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1394 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1396 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1401
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1394 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1394 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1404
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1404 is 99
9999 mem: storing 0 in location 1405
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1397 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1407
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-inserts-characters-at-cursor-6
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 15 -> 14
9999 mem: storing 1209 in location 1394
9999 mem: incrementing refcount of 1209: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1395 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 17 -> 16
9999 mem: storing 1205 in location 1395
9999 mem: incrementing refcount of 1205: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1397 is 2
9999 mem: storing 3 in location 1397
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1394 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1396 is 1
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1401
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1394 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1394 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 10
9999 mem: storing 10 in location 1404
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1404 is 10
9999 mem: storing 1 in location 1405
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1396 is 1
9999 mem: storing 2 in location 1396
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1391 is 0
9999 mem: storing 0 in location 1397
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 15 -> 14
9999 mem: storing 1213 in location 1394
9999 mem: incrementing refcount of 1213: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1395 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 17 -> 16
9999 mem: storing 1209 in location 1395
9999 mem: incrementing refcount of 1209: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1394 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1396 is 2
9999 mem: location 1393 is 5
9999 mem: storing 0 in location 1401
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 2
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1394 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1394 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 100
9999 mem: storing 100 in location 1404
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1404 is 100
9999 mem: storing 0 in location 1405
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1397 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1407
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1394 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1213: 14 -> 13
9999 mem: storing 0 in location 1394
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1395 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 17 -> 16
9999 mem: storing 1213 in location 1395
9999 mem: incrementing refcount of 1213: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1397 is 0
9999 mem: storing 1 in location 1397
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 2
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1402
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1161
9999 mem: location 1161 is 5
9999 mem: storing 1 in location 1408
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1402 is 0
9999 mem: location 1408 is 1
9999 mem: storing 0 in location 1409
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 2
9999 mem: location 1398 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1410
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1409 is 0
9999 mem: location 1410 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1396 is 2
9999 mem: location 1398 is 1160
9999 mem: storing 2 in location 1160
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1397 is 1
9999 mem: location 1399 is 1161
9999 mem: storing 1 in location 1161
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1395 is 1213
9999 mem: location 1400 is 1156
9999 mem: decrementing refcount of 1171: 13 -> 12
9999 mem: storing 1213 in location 1156
9999 mem: incrementing refcount of 1213: 15 -> 16
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1388 is 1152
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 9 -> 8
9999 mem: storing 1152 in location 1359
9999 mem: incrementing refcount of 1152: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1372
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1373
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1374
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1359 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1375
9999 mem: incrementing refcount of 1171: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1377
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1369 is 1
9999 mem: location 1370 is 0
9999 mem: location 1371 is 1171
9999 mem: location 1373 is 2
9999 mem: location 1374 is 1
9999 mem: location 1375 is 1171
9999 mem: location 1372 is 0
9999 mem: location 1377 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1377 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1171 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1171 in location 1007
9999 mem: storing 0 in location 1008
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1359 is 1152
9999 mem: location 1377 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1189
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1000
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1168
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1169
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1412
9999 mem: storing 1412 in location 1170
9999 mem: incrementing refcount of 1412: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1000
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1412
9999 mem: skipping refcount at 1412
9999 mem: location 1170 is 1412
9999 mem: skipping refcount at 1412
9999 mem: storing 1000 in location 1413
9999 mem: storing 0 in location 1414
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1412
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1412
9999 mem: location 1190 is 1163
9999 mem: storing 1412 in location 1163
9999 mem: incrementing refcount of 1412: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 10 -> 9
9999 mem: storing 1152 in location 1359
9999 mem: incrementing refcount of 1152: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1359 is 1152
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1345
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1346
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1342 is 1012
9999 mem: location 1345 is 2
9999 mem: location 1346 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1247
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 80 -> 81
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1251
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1253
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 80 -> 81
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1343 is 1336
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1291
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1336 in location 1294
9999 mem: incrementing refcount of 1336: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1294 is 1336
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1337
9999 mem: storing 1337 in location 1295
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1338
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1338 is 1322
9999 mem: storing 1322 in location 1296
9999 mem: incrementing refcount of 1322: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: storing 3 in location 1297
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 1
9999 mem: location 1297 is 3
9999 mem: storing 0 in location 1298
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1298 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: base address is 1323
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 1
9998 run: address to copy is 1328
9998 run: its type is event
9999 mem: location 1328 is 0
9999 mem: location 1329 is 101
9999 mem: location 1330 is 0
9999 mem: location 1331 is 0
9999 mem: storing 0 in location 1300
9999 mem: storing 101 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 1
9999 mem: location 1295 is 1337
9999 mem: storing 2 in location 1337
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1300 is 0
9999 mem: location 1301 is 101
9999 mem: location 1302 is 0
9999 mem: location 1303 is 0
9999 mem: location 1294 is 1336
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 101, 0, 0]
9998 run: result 1 is 1336
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1347
9999 mem: storing 101 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: decrementing refcount of 1336: 3 -> 2
9999 mem: storing 1336 in location 1343
9999 mem: incrementing refcount of 1336: 2 -> 3
9999 mem: storing 1 in location 1351
9999 mem: storing 0 in location 1352
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1347 is 0
9999 mem: location 1348 is 101
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: storing 0 in location 1353
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1342 is 1012
9999 mem: location 1344 is 1152
9999 mem: location 1347 is 0
9999 mem: location 1348 is 101
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1415
9999 mem: storing 85 in location 1416
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1419
9999 mem: incrementing refcount of 1152: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1420
9999 mem: storing 101 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1424
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1419 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 82 -> 83
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1425
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 83 -> 84
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1426
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1427
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1428
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1429
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1430
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1431
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1430 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1432
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1433
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1420 is 0
9999 mem: location 1421 is 101
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: storing 1421 in location 1434
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1434 is 1421
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1435
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1446
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1451
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1467
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1468
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1473
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1474
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1475
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1476
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1480
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1480 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1484
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: storing 1 in location 1487
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1424
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1487 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1469
9999 mem: incrementing refcount of 1171: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1429 is 1156
9999 mem: location 1156 is 1213
9999 mem: storing 1213 in location 1481
9999 mem: incrementing refcount of 1213: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1419 is 1152
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 101
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1502
9999 mem: storing 31 in location 1503
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1505
9999 mem: incrementing refcount of 1152: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1506
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1507
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1213
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1508
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1506 is 101
9999 mem: location 1508 is 1156
9999 mem: location 1156 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1189
9999 mem: incrementing refcount of 1213: 17 -> 18
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1535
9999 mem: storing 1535 in location 1190
9999 mem: incrementing refcount of 1535: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1188 is 101
9999 mem: location 1190 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy to is 1536
9999 mem: storing 101 in location 1536
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1191
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1190 is 1535
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1215
9999 mem: storing 1535 in location 1215
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1189 is 1213
9999 mem: location 1190 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy to is 1538
9999 mem: storing 1213 in location 1538
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1213
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy to is 1537
9999 mem: storing 0 in location 1537
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1213
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1508 is 1156
9999 mem: location 1156 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1535
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1535
9999 mem: storing 1535 in location 1200
9999 mem: incrementing refcount of 1535: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1535
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1535
9999 mem: location 1508 is 1156
9999 mem: decrementing refcount of 1213: 19 -> 18
9999 mem: storing 1535 in location 1156
9999 mem: incrementing refcount of 1535: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1509
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1510
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1511
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1512
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1509 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1513
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1510 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1514
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1507 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 85 -> 86
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1200
 107 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1515
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1507 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 86 -> 87
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1516
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1512 is 9
9999 mem: storing 8 in location 1517
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1510 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1517 is 8
9999 mem: storing 0 in location 1518
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1510 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1510 is 1161
9999 mem: storing 2 in location 1161
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1508 is 1156
9999 mem: location 1156 is 1535
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1535 in location 1199
9999 mem: incrementing refcount of 1535: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1535
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1213
9999 mem: location 1199 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy is 1537
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1537 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1525
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1525 is 0
9999 mem: storing 1 in location 1526
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1516 is 5
9999 mem: storing 4 in location 1527
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1513 is 2
9999 mem: location 1527 is 4
9999 mem: storing 0 in location 1528
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1514 is 1
9999 mem: location 1512 is 9
9999 mem: storing 0 in location 1529
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 0 in location 1530
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1507 is 1012
9999 mem: location 1513 is 2
9999 mem: location 1514 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1247
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 87 -> 88
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1251
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1253
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1015
9999 mem: storing 2 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1507 is 1012
9999 mem: location 1506 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1255
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1258
9999 mem: incrementing refcount of 1012: 88 -> 89
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1259
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1260
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1262
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1259 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1258 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1264
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1265
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1266
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1266 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1266 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 101
9999 mem: storing 0 in location 1269
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1266 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1264 is 10
9999 mem: storing 20 in location 1272
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1272 is 20
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1272
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1273
9999 mem: incrementing refcount of 1018: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1273 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1274
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1259 is 101
9999 mem: storing 0 in location 1275
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1273 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1272 is 21
9999 mem: storing 1062 in location 1277
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1277 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1277 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1278
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1259 is 101
9999 mem: location 1278 is 1062
9999 mem: storing 101 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1277 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1277 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1279
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1260 is 7
9999 mem: location 1279 is 1063
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1264 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1268 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1258 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1524
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1505 is 1152
9999 mem: location 1507 is 1012
9999 mem: location 1524 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1152: 12 -> 11
9999 mem: storing 1152 in location 1419
9999 mem: incrementing refcount of 1152: 11 -> 12
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 88 -> 89
9999 mem: storing 0 in location 1424
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1471
9999 mem: incrementing refcount of 1171: 14 -> 15
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1438
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1438 is 1163
9999 mem: location 1163 is 1412
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1438 is 1163
9999 mem: location 1163 is 1412
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1412 in location 1199
9999 mem: incrementing refcount of 1412: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1199 is 1412
9999 mem: skipping refcount at 1412
9999 mem: location 1413 is 1000
9999 mem: location 1414 is 0
9999 mem: location 1199 is 1412
9999 mem: skipping refcount at 1412
9998 run: address to copy is 1413
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1413 is 1000
9999 mem: storing 1000 in location 1200
9999 mem: incrementing refcount of 1000: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1200 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1437
9999 mem: incrementing refcount of 1000: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1437 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1171
9999 mem: location 1005 is 2
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1171
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1437 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1444
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1444 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1481 is 1213
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1535
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1535
9999 mem: storing 1535 in location 1200
9999 mem: incrementing refcount of 1535: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1535
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1535
9999 mem: storing 1535 in location 1445
9999 mem: incrementing refcount of 1535: 5 -> 6
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1445 is 1535
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1535 in location 1199
9999 mem: incrementing refcount of 1535: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1535
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1213
9999 mem: location 1199 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy is 1537
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1537 is 0
9999 mem: storing 0 in location 1200
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1483
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: decrementing refcount of 1000: 5 -> 4
9999 mem: storing 1120 in location 1437
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1432 is 2
9999 mem: location 1433 is 1
9999 mem: location 1469 is 1171
9999 mem: location 1430 is 1160
9999 mem: location 1160 is 2
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1471 is 1171
9999 mem: location 1445 is 1535
9999 mem: location 1483 is 0
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 1 in location 1123
9999 mem: storing 1171 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 2 in location 1126
9999 mem: storing 1171 in location 1127
9999 mem: storing 1535 in location 1128
9999 mem: storing 0 in location 1129
9999 mem: storing 1 in location 1130
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1419 is 1152
9999 mem: location 1437 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1189
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1412
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1120
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 1412
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1168
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1412 in location 1169
9999 mem: incrementing refcount of 1412: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1539
9999 mem: storing 1539 in location 1170
9999 mem: incrementing refcount of 1539: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1120
9999 mem: location 1169 is 1412
9999 mem: location 1170 is 1539
9999 mem: skipping refcount at 1539
9999 mem: location 1170 is 1539
9999 mem: skipping refcount at 1539
9999 mem: storing 1120 in location 1540
9999 mem: storing 1412 in location 1541
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1539
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1539
9999 mem: location 1190 is 1163
9999 mem: decrementing refcount of 1412: 4 -> 3
9999 mem: storing 1539 in location 1163
9999 mem: incrementing refcount of 1539: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1419
9999 mem: incrementing refcount of 1152: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1418 is 1012
9999 mem: location 1419 is 1152
9999 mem: location 1424 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1152
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 88 -> 89
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1344
9999 mem: incrementing refcount of 1152: 12 -> 13
9999 mem: storing 0 in location 1354
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1345
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1346
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1342 is 1012
9999 mem: location 1345 is 2
9999 mem: location 1346 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1247
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 89 -> 90
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1251
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1253
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1016
9999 mem: storing 2 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 89 -> 90
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1343 is 1336
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1291
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1336 in location 1294
9999 mem: incrementing refcount of 1336: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1294 is 1336
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 2
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1337
9999 mem: storing 1337 in location 1295
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 2
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1338
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1338 is 1322
9999 mem: storing 1322 in location 1296
9999 mem: incrementing refcount of 1322: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: storing 3 in location 1297
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 2
9999 mem: location 1297 is 3
9999 mem: storing 0 in location 1298
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1298 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: base address is 1323
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 2
9998 run: address to copy is 1332
9998 run: its type is event
9999 mem: location 1332 is 0
9999 mem: location 1333 is 102
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1300
9999 mem: storing 102 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 2
9999 mem: location 1295 is 1337
9999 mem: storing 3 in location 1337
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1300 is 0
9999 mem: location 1301 is 102
9999 mem: location 1302 is 0
9999 mem: location 1303 is 0
9999 mem: location 1294 is 1336
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 102, 0, 0]
9998 run: result 1 is 1336
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1347
9999 mem: storing 102 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: decrementing refcount of 1336: 4 -> 3
9999 mem: storing 1336 in location 1343
9999 mem: incrementing refcount of 1336: 3 -> 4
9999 mem: storing 1 in location 1351
9999 mem: storing 0 in location 1352
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1347 is 0
9999 mem: location 1348 is 102
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: storing 0 in location 1353
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1342 is 1012
9999 mem: location 1344 is 1152
9999 mem: location 1347 is 0
9999 mem: location 1348 is 102
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1415
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 90 -> 91
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1419
9999 mem: incrementing refcount of 1152: 13 -> 14
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1420
9999 mem: storing 102 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1424
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1419 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1425
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 92 -> 93
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1426
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1427
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1428
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1429
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1430
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1431
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1430 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1432
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1433
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1420 is 0
9999 mem: location 1421 is 102
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: storing 1421 in location 1434
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1434 is 1421
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1435
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1446
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1451
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 149
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-inserts-characters-at-cursor-6
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1467
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1468
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1473
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1474
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1475
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1476
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1480
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1480 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1484
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: storing 1 in location 1487
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1424
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1487 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1469
9999 mem: incrementing refcount of 1171: 15 -> 16
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1429 is 1156
9999 mem: location 1156 is 1535
9999 mem: storing 1535 in location 1481
9999 mem: incrementing refcount of 1535: 7 -> 8
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1419 is 1152
9999 mem: location 1434 is 1421
9999 mem: location 1421 is 102
9999 mem: location 1418 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1502
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1505
9999 mem: incrementing refcount of 1152: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1506
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1507
9999 mem: incrementing refcount of 1012: 93 -> 94
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1535
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1508
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1506 is 102
9999 mem: location 1508 is 1156
9999 mem: location 1156 is 1535
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1535 in location 1189
9999 mem: incrementing refcount of 1535: 8 -> 9
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1542
9999 mem: storing 1542 in location 1190
9999 mem: incrementing refcount of 1542: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1542
9999 mem: skipping refcount at 1542
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: location 1188 is 102
9999 mem: location 1190 is 1542
9999 mem: skipping refcount at 1542
9998 run: address to copy to is 1543
9999 mem: storing 102 in location 1543
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1213
9999 mem: location 1189 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy is 1537
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1537 is 0
9999 mem: storing 0 in location 1191
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1213
9999 mem: location 1190 is 1542
9999 mem: location 1189 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy to is 1537
9999 mem: storing 1542 in location 1537
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1542
9999 mem: skipping refcount at 1542
9999 mem: location 1543 is 102
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: location 1189 is 1535
9999 mem: location 1190 is 1542
9999 mem: skipping refcount at 1542
9998 run: address to copy to is 1545
9999 mem: storing 1535 in location 1545
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1542
9999 mem: skipping refcount at 1542
9999 mem: location 1543 is 102
9999 mem: location 1544 is 0
9999 mem: location 1545 is 1535
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1542
9999 mem: skipping refcount at 1542
9998 run: address to copy to is 1544
9999 mem: storing 0 in location 1544
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1535
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1508 is 1156
9999 mem: location 1156 is 1535
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1535 in location 1199
9999 mem: incrementing refcount of 1535: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1535
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1535
9999 mem: skipping refcount at 1535
9999 mem: location 1536 is 101
9999 mem: location 1537 is 1542
9999 mem: location 1538 is 1213
9999 mem: location 1199 is 1535
9999 mem: skipping refcount at 1535
9998 run: address to copy is 1537
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1537 is 1542
9999 mem: storing 1542 in location 1200
9999 mem: incrementing refcount of 1542: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1542
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1542
9999 mem: location 1508 is 1156
9999 mem: decrementing refcount of 1535: 10 -> 9
9999 mem: storing 1542 in location 1156
9999 mem: incrementing refcount of 1542: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1509
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1510
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1511
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1505 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 9
9999 mem: storing 9 in location 1512
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1509 is 1160
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1513
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1510 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1514
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1507 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1200
 107 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1515
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1507 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1199
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1199 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1516
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1512 is 9
9999 mem: storing 8 in location 1517
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1510 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1517 is 8
9999 mem: storing 0 in location 1518
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1510 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1510 is 1161
9999 mem: storing 3 in location 1161
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1508 is 1156
9999 mem: location 1156 is 1542
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1542 in location 1199
9999 mem: incrementing refcount of 1542: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1542
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1542
9999 mem: skipping refcount at 1542
9999 mem: location 1543 is 102
9999 mem: location 1544 is 0
9999 mem: location 1545 is 1535
9999 mem: location 1199 is 1542
9999 mem: skipping refcount at 1542
9998 run: address to copy is 1544
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1544 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1525
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1525 is 0
9999 mem: storing 1 in location 1526
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1516 is 5
9999 mem: storing 4 in location 1527
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1513 is 2
9999 mem: location 1527 is 4
9999 mem: storing 0 in location 1528
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1514 is 2
9999 mem: location 1512 is 9
9999 mem: storing 0 in location 1529
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: storing 0 in location 1530
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1507 is 1012
9999 mem: location 1513 is 2
9999 mem: location 1514 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1247
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 96 -> 97
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1251
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1253
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1015
9999 mem: storing 2 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1507 is 1012
9999 mem: location 1506 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1255
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1258
9999 mem: incrementing refcount of 1012: 97 -> 98
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1259
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1260
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1262
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1259 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1258 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1264
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1265
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1266
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1266 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1266 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1267
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 102
9999 mem: storing 0 in location 1269
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1266 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1264 is 10
9999 mem: storing 20 in location 1272
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1272 is 20
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1272
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1258 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1273
9999 mem: incrementing refcount of 1018: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1273 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1274
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1259 is 102
9999 mem: storing 0 in location 1275
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1273 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1272 is 22
9999 mem: storing 1064 in location 1277
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1277 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1277 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1278
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1259 is 102
9999 mem: location 1278 is 1064
9999 mem: storing 102 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1277 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1277 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1279
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1260 is 7
9999 mem: location 1279 is 1065
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1264 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1268 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1268 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1258 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1524
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1505 is 1152
9999 mem: location 1507 is 1012
9999 mem: location 1524 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1152: 15 -> 14
9999 mem: storing 1152 in location 1419
9999 mem: incrementing refcount of 1152: 14 -> 15
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1418
9999 mem: incrementing refcount of 1012: 97 -> 98
9999 mem: storing 0 in location 1424
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1471
9999 mem: incrementing refcount of 1171: 16 -> 17
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1438
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1438 is 1163
9999 mem: location 1163 is 1539
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1438 is 1163
9999 mem: location 1163 is 1539
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1199
9999 mem: incrementing refcount of 1539: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1199 is 1539
9999 mem: skipping refcount at 1539
9999 mem: location 1540 is 1120
9999 mem: location 1541 is 1412
9999 mem: location 1199 is 1539
9999 mem: skipping refcount at 1539
9998 run: address to copy is 1540
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1540 is 1120
9999 mem: storing 1120 in location 1200
9999 mem: incrementing refcount of 1120: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1200 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1437
9999 mem: incrementing refcount of 1120: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 0
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1171
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1171
9999 mem: location 1128 is 1535
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1131 is 0
9999 mem: location 1437 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1444
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1444 is 1122
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1444 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1171
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1171
9999 mem: location 1128 is 1535
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1444 is 1122
9998 run: address to copy is 1130
9998 run: its type is "number"
9999 mem: location 1130 is 1
9999 mem: storing 1 in location 1461
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1461 is 1
9998 run: jump-unless fell through
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1444 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1171
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1171
9999 mem: location 1128 is 1535
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1444 is 1122
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1482
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1429 is 1156
9999 mem: location 1156 is 1542
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1542 in location 1199
9999 mem: incrementing refcount of 1542: 4 -> 5
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1542
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1542
9999 mem: skipping refcount at 1542
9999 mem: location 1543 is 102
9999 mem: location 1544 is 0
9999 mem: location 1545 is 1535
9999 mem: location 1199 is 1542
9999 mem: skipping refcount at 1542
9998 run: address to copy is 1544
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1544 is 0
9999 mem: storing 0 in location 1200
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1482 is 1129
9999 mem: storing 0 in location 1129
 105 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1444 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1171
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1171
9999 mem: location 1128 is 1535
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1444 is 1122
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1463
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1430 is 1160
9999 mem: location 1160 is 2
9999 mem: location 1463 is 1125
9999 mem: storing 2 in location 1125
 105 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1444 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1171
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1171
9999 mem: location 1128 is 1535
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1444 is 1122
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1464
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 3
9999 mem: location 1464 is 1126
9999 mem: storing 3 in location 1126
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1444 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1171
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1171
9999 mem: location 1128 is 1535
9999 mem: location 1129 is 0
9999 mem: location 1130 is 1
9999 mem: location 1444 is 1122
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1465
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1419 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: location 1465 is 1127
9999 mem: decrementing refcount of 1171: 17 -> 16
9999 mem: storing 1171 in location 1127
9999 mem: incrementing refcount of 1171: 16 -> 17
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1418 is 1012
9999 mem: location 1419 is 1152
9999 mem: location 1424 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1152
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 97 -> 98
9999 mem: decrementing refcount of 1152: 15 -> 14
9999 mem: storing 1152 in location 1344
9999 mem: incrementing refcount of 1152: 14 -> 15
9999 mem: storing 0 in location 1354
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1345
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1542
9999 mem: location 1157 is 0
9999 mem: location 1158 is 9
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1539
9999 mem: location 1164 is 0
9999 mem: location 1344 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 1346
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1342 is 1012
9999 mem: location 1345 is 2
9999 mem: location 1346 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1247
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 98 -> 99
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1251
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1252
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1253
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1250 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1254
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1016
9999 mem: storing 3 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1342
9999 mem: incrementing refcount of 1012: 98 -> 99
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1343 is 1336
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1291
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1336 in location 1294
9999 mem: incrementing refcount of 1336: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1294 is 1336
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 3
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1337
9999 mem: storing 1337 in location 1295
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9999 mem: location 1337 is 3
9999 mem: location 1338 is 1322
9999 mem: location 1294 is 1336
9999 mem: skipping refcount at 1336
9998 run: address to copy is 1338
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1338 is 1322
9999 mem: storing 1322 in location 1296
9999 mem: incrementing refcount of 1322: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: storing 3 in location 1297
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1295 is 1337
9999 mem: location 1337 is 3
9999 mem: location 1297 is 3
9999 mem: storing 1 in location 1298
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1298 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
9999 mem: storing 1196 in location 1299
9999 mem: incrementing refcount of 1196: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1299 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1294 is 1336
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1336
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: decrementing refcount of 1336: 5 -> 4
9999 mem: storing 1336 in location 1343
9999 mem: incrementing refcount of 1336: 4 -> 5
9999 mem: storing 1 in location 1351
9999 mem: storing 1 in location 1352
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1342 is 1012
9999 mem: location 1343 is 1336
9999 mem: location 1344 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .def       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {2: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
