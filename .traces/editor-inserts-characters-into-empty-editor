 102 run: assume-console {"\n    type [abc]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9992 load: after rewriting: type {"abc": "literal-string"}
9999 mem: storing 'type' event starting at 1258
9999 mem: storing 'text' tag at 1258
9999 mem: storing character 97 at 1259
9999 mem: storing 'text' tag at 1262
9999 mem: storing character 98 at 1263
9999 mem: storing 'text' tag at 1266
9999 mem: storing character 99 at 1267
9999 mem: storing console in 1270
9999 mem: storing console data in 1272
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1270
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1273
9999 mem: storing 14 in location 1274
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 42 -> 43
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1277
9999 mem: incrementing refcount of 1270: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1278
9999 mem: incrementing refcount of 1140: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1279
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1280
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 1
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 0
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 43 -> 44
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1277 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1233
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1236
9999 mem: incrementing refcount of 1270: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1236 is 1270
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1271
9998 run: its type is "number"
9999 mem: location 1271 is 0
9999 mem: storing 0 in location 1237
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1272 is 1256
9999 mem: storing 1256 in location 1238
9999 mem: incrementing refcount of 1256: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9999 mem: storing 3 in location 1239
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1237 is 0
9999 mem: location 1239 is 3
9999 mem: storing 0 in location 1240
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9998 run: base address is 1257
9999 mem: location 1237 is 0
9998 run: address to copy is 1258
9998 run: its type is event
9999 mem: location 1258 is 0
9999 mem: location 1259 is 97
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: storing 0 in location 1242
9999 mem: storing 97 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1237 is 0
9999 mem: storing 1 in location 1237
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1256
9999 mem: location 1237 is 1
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1271
9999 mem: storing 1 in location 1271
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 97
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1236 is 1270
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1270
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1281
9999 mem: storing 97 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: decrementing refcount of 1270: 2 -> 1
9999 mem: storing 1270 in location 1277
9999 mem: incrementing refcount of 1270: 1 -> 2
9999 mem: storing 1 in location 1285
9999 mem: storing 0 in location 1286
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1281 is 0
9999 mem: location 1282 is 97
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1287
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1276 is 1008
9999 mem: location 1278 is 1140
9999 mem: location 1281 is 0
9999 mem: location 1282 is 97
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1289
9999 mem: storing 85 in location 1290
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1292
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1294
9999 mem: storing 97 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1298
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1293 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1299
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 46 -> 47
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1300
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1301
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1302
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1303
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1304
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1305
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1304 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1306
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1305 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1307
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1294 is 0
9999 mem: location 1295 is 97
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 1295 in location 1308
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1308 is 1295
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1309
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1320
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1325
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1341
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1342
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1347
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1348
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1348 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1349
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1350
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1354
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 0 in location 1358
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: storing 1 in location 1361
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1298
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1361 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1343
9999 mem: incrementing refcount of 1159: 8 -> 9
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1303 is 1144
9999 mem: location 1144 is 1159
9999 mem: storing 1159 in location 1355
9999 mem: incrementing refcount of 1159: 9 -> 10
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1293 is 1140
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 97
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1376
9999 mem: storing 31 in location 1377
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1379
9999 mem: incrementing refcount of 1140: 8 -> 9
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1380
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1381
9999 mem: incrementing refcount of 1008: 47 -> 48
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1382
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1380 is 97
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1409
9999 mem: storing 5 in location 1410
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1412
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1413
9999 mem: incrementing refcount of 1159: 10 -> 11
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1416
9999 mem: storing 1416 in location 1414
9999 mem: incrementing refcount of 1416: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1414 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 0
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: location 1412 is 97
9999 mem: location 1414 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy to is 1417
9999 mem: storing 97 in location 1417
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1413 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1413 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1415
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1413 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1414 is 1416
9999 mem: location 1413 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 1416 in location 1161
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: location 1413 is 1159
9999 mem: location 1414 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy to is 1419
9999 mem: storing 1159 in location 1419
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 0
9999 mem: location 1419 is 1159
9999 mem: location 1415 is 0
9999 mem: location 1414 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy to is 1418
9999 mem: storing 0 in location 1418
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1413 is 1159
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1416
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1416
9999 mem: storing 1416 in location 1207
9999 mem: incrementing refcount of 1416: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1416
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1416
9999 mem: location 1382 is 1144
9999 mem: decrementing refcount of 1159: 12 -> 11
9999 mem: storing 1416 in location 1144
9999 mem: incrementing refcount of 1416: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1383
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1384
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1385
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1386
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1383 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1387
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1388
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1381 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 107 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1389
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1381 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 107 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1390
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1386 is 4
9999 mem: storing 3 in location 1391
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1391 is 3
9999 mem: storing 0 in location 1392
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1384 is 1149
9999 mem: storing 1 in location 1149
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1416
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1416 in location 1206
9999 mem: incrementing refcount of 1416: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1416
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 0
9999 mem: location 1419 is 1159
9999 mem: location 1206 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy is 1418
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1418 is 0
9999 mem: storing 0 in location 1207
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1399
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1399 is 0
9999 mem: storing 1 in location 1400
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 4 in location 1401
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1387 is 1
9999 mem: location 1401 is 4
9999 mem: storing 0 in location 1402
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1388 is 0
9999 mem: location 1386 is 4
9999 mem: storing 0 in location 1403
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: storing 0 in location 1404
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1381 is 1008
9999 mem: location 1387 is 1
9999 mem: location 1388 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 0
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1381 is 1008
9999 mem: location 1380 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1221 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1221 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1212 is 97
9999 mem: location 1213 is 7
9999 mem: location 1230 is 1036
9999 mem: location 1230 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1231
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1221 is 0
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1232
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1221 is 0
9999 mem: storing 1 in location 1221
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 1
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1398
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1379 is 1140
9999 mem: location 1381 is 1008
9999 mem: location 1398 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 9 -> 8
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 8 -> 9
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1292
9999 mem: incrementing refcount of 1008: 51 -> 52
9999 mem: storing 0 in location 1298
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1345
9999 mem: incrementing refcount of 1159: 11 -> 12
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1312
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1312 is 1151
9999 mem: location 1151 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1355 is 1159
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 12 -> 13
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1416
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1416
9999 mem: storing 1416 in location 1207
9999 mem: incrementing refcount of 1416: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1416
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1416
9999 mem: storing 1416 in location 1319
9999 mem: incrementing refcount of 1416: 5 -> 6
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1416
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1416 in location 1206
9999 mem: incrementing refcount of 1416: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1416
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 0
9999 mem: location 1419 is 1159
9999 mem: location 1206 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy is 1418
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1418 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1357
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1420
9999 mem: storing 1420 in location 1311
9999 mem: incrementing refcount of 1420: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1306 is 1
9999 mem: location 1307 is 0
9999 mem: location 1343 is 1159
9999 mem: location 1304 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1305 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1345 is 1159
9999 mem: location 1319 is 1416
9999 mem: location 1357 is 0
9999 mem: location 1311 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1311 is 1420
9999 mem: skipping refcount at 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 1 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 1159 in location 1424
9999 mem: storing 1 in location 1425
9999 mem: storing 1 in location 1426
9999 mem: storing 1159 in location 1427
9999 mem: storing 1416 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 1 in location 1430
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1293 is 1140
9999 mem: location 1311 is 1420
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1409
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1412
9999 mem: incrementing refcount of 1140: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1413
9999 mem: incrementing refcount of 1420: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1412 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1412 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1414
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1413 is 1420
9999 mem: location 1414 is 1151
9999 mem: location 1151 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1156
9999 mem: incrementing refcount of 1420: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1432
9999 mem: storing 1432 in location 1158
9999 mem: incrementing refcount of 1432: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1420
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1158 is 1432
9999 mem: skipping refcount at 1432
9999 mem: storing 1420 in location 1433
9999 mem: storing 0 in location 1434
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1432
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1432
9999 mem: location 1414 is 1151
9999 mem: storing 1432 in location 1151
9999 mem: incrementing refcount of 1432: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1412 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1412 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1415
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1415 is 1152
9999 mem: storing 0 in location 1152
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1412 is 1140
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 10 -> 9
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1292 is 1008
9999 mem: location 1293 is 1140
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 51 -> 52
9999 mem: decrementing refcount of 1140: 10 -> 9
9999 mem: storing 1140 in location 1278
9999 mem: incrementing refcount of 1140: 9 -> 10
9999 mem: storing 0 in location 1288
9990 schedule: editor-event-loop/run_1001/scenario_editor-inserts-characters-into-empty-editor
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1279
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1280
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 1
9999 mem: location 1280 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 52 -> 53
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 53 -> 52
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 52 -> 53
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1277 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1233
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1236
9999 mem: incrementing refcount of 1270: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1236 is 1270
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 1
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1271
9998 run: its type is "number"
9999 mem: location 1271 is 1
9999 mem: storing 1 in location 1237
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 1
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1272 is 1256
9999 mem: storing 1256 in location 1238
9999 mem: incrementing refcount of 1256: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9999 mem: storing 3 in location 1239
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1237 is 1
9999 mem: location 1239 is 3
9999 mem: storing 0 in location 1240
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9998 run: base address is 1257
9999 mem: location 1237 is 1
9998 run: address to copy is 1262
9998 run: its type is event
9999 mem: location 1262 is 0
9999 mem: location 1263 is 98
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: storing 0 in location 1242
9999 mem: storing 98 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1237 is 1
9999 mem: storing 2 in location 1237
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 1
9999 mem: location 1272 is 1256
9999 mem: location 1237 is 2
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1271
9999 mem: storing 2 in location 1271
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 98
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1236 is 1270
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1270
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1281
9999 mem: storing 98 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: decrementing refcount of 1270: 3 -> 2
9999 mem: storing 1270 in location 1277
9999 mem: incrementing refcount of 1270: 2 -> 3
9999 mem: storing 1 in location 1285
9999 mem: storing 0 in location 1286
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1281 is 0
9999 mem: location 1282 is 98
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1287
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1276 is 1008
9999 mem: location 1278 is 1140
9999 mem: location 1281 is 0
9999 mem: location 1282 is 98
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1289
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1292
9999 mem: incrementing refcount of 1008: 53 -> 54
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1294
9999 mem: storing 98 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1298
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1293 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1299
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1300
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1301
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1302
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1303
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1304
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1305
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1304 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1306
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1305 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1307
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1294 is 0
9999 mem: location 1295 is 98
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 1295 in location 1308
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1308 is 1295
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1309
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1320
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1325
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1341
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1342
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1347
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1348
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1348 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1349
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1350
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1354
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 0 in location 1358
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: storing 1 in location 1361
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1298
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1361 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1343
9999 mem: incrementing refcount of 1159: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1303 is 1144
9999 mem: location 1144 is 1416
9999 mem: storing 1416 in location 1355
9999 mem: incrementing refcount of 1416: 7 -> 8
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1293 is 1140
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1376
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1379
9999 mem: incrementing refcount of 1140: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1380
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1381
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1416
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1382
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1380 is 98
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1416
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1409
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1412
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1416 in location 1413
9999 mem: incrementing refcount of 1416: 8 -> 9
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1435
9999 mem: storing 1435 in location 1414
9999 mem: incrementing refcount of 1435: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1414 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1438 is 0
9999 mem: location 1412 is 98
9999 mem: location 1414 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy to is 1436
9999 mem: storing 98 in location 1436
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1413 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 0
9999 mem: location 1419 is 1159
9999 mem: location 1413 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy is 1418
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1418 is 0
9999 mem: storing 0 in location 1415
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1413 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 0
9999 mem: location 1419 is 1159
9999 mem: location 1414 is 1435
9999 mem: location 1413 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy to is 1418
9999 mem: storing 1435 in location 1418
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 0
9999 mem: location 1438 is 0
9999 mem: location 1413 is 1416
9999 mem: location 1414 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy to is 1438
9999 mem: storing 1416 in location 1438
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 0
9999 mem: location 1438 is 1416
9999 mem: location 1415 is 0
9999 mem: location 1414 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy to is 1437
9999 mem: storing 0 in location 1437
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1413 is 1416
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1416
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1416 in location 1206
9999 mem: incrementing refcount of 1416: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1416
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1416
9999 mem: skipping refcount at 1416
9999 mem: location 1417 is 97
9999 mem: location 1418 is 1435
9999 mem: location 1419 is 1159
9999 mem: location 1206 is 1416
9999 mem: skipping refcount at 1416
9998 run: address to copy is 1418
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1418 is 1435
9999 mem: storing 1435 in location 1207
9999 mem: incrementing refcount of 1435: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1435
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1435
9999 mem: location 1382 is 1144
9999 mem: decrementing refcount of 1416: 10 -> 9
9999 mem: storing 1435 in location 1144
9999 mem: incrementing refcount of 1435: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1383
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1384
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1385
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1386
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1383 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1387
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1388
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1381 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 107 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1389
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1381 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 107 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1390
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1386 is 4
9999 mem: storing 3 in location 1391
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1391 is 3
9999 mem: storing 0 in location 1392
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1384 is 1149
9999 mem: storing 2 in location 1149
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1435
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1435 in location 1206
9999 mem: incrementing refcount of 1435: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1435
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 0
9999 mem: location 1438 is 1416
9999 mem: location 1206 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy is 1437
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1437 is 0
9999 mem: storing 0 in location 1207
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1399
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1399 is 0
9999 mem: storing 1 in location 1400
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 4 in location 1401
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1387 is 1
9999 mem: location 1401 is 4
9999 mem: storing 0 in location 1402
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 4
9999 mem: storing 0 in location 1403
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: storing 0 in location 1404
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1381 is 1008
9999 mem: location 1387 is 1
9999 mem: location 1388 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1158
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1381 is 1008
9999 mem: location 1380 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1221 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 23 -> 24
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1212 is 98
9999 mem: location 1213 is 7
9999 mem: location 1230 is 1038
9999 mem: location 1230 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1231
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1232
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1221 is 1
9999 mem: storing 2 in location 1221
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 2
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1398
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1379 is 1140
9999 mem: location 1381 is 1008
9999 mem: location 1398 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 12 -> 11
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 11 -> 12
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1292
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: storing 0 in location 1298
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1345
9999 mem: incrementing refcount of 1159: 14 -> 15
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1312
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1312 is 1151
9999 mem: location 1151 is 1432
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1312 is 1151
9999 mem: location 1151 is 1432
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1206
9999 mem: incrementing refcount of 1432: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1206 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 1420
9999 mem: location 1434 is 0
9999 mem: location 1206 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1433 is 1420
9999 mem: storing 1420 in location 1207
9999 mem: incrementing refcount of 1420: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1207 is 1420
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1420
9999 mem: storing 1420 in location 1311
9999 mem: incrementing refcount of 1420: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1311 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1311 is 1420
9999 mem: skipping refcount at 1420
9999 mem: storing 1422 in location 1318
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1318 is 1422
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1430
9998 run: its type is "number"
9999 mem: location 1430 is 1
9999 mem: storing 1 in location 1335
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1335 is 1
9998 run: jump-unless fell through
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1429
9999 mem: storing 1429 in location 1356
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1303 is 1144
9999 mem: location 1144 is 1435
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1435 in location 1206
9999 mem: incrementing refcount of 1435: 4 -> 5
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1435
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 0
9999 mem: location 1438 is 1416
9999 mem: location 1206 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy is 1437
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1437 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1356 is 1429
9999 mem: storing 0 in location 1429
 105 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1425
9999 mem: storing 1425 in location 1337
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1304 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1337 is 1425
9999 mem: storing 1 in location 1425
 105 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 1
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1426
9999 mem: storing 1426 in location 1338
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1305 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1338 is 1426
9999 mem: storing 2 in location 1426
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 2
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1427
9999 mem: storing 1427 in location 1339
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: location 1339 is 1427
9999 mem: decrementing refcount of 1159: 15 -> 14
9999 mem: storing 1159 in location 1427
9999 mem: incrementing refcount of 1159: 14 -> 15
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1292 is 1008
9999 mem: location 1293 is 1140
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: decrementing refcount of 1140: 12 -> 11
9999 mem: storing 1140 in location 1278
9999 mem: incrementing refcount of 1140: 11 -> 12
9999 mem: storing 0 in location 1288
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1279
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1280
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 1
9999 mem: location 1280 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 61 -> 62
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 2
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 61 -> 62
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1277 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1233
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1236
9999 mem: incrementing refcount of 1270: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1236 is 1270
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 2
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1271
9998 run: its type is "number"
9999 mem: location 1271 is 2
9999 mem: storing 2 in location 1237
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 2
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1272 is 1256
9999 mem: storing 1256 in location 1238
9999 mem: incrementing refcount of 1256: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9999 mem: storing 3 in location 1239
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1237 is 2
9999 mem: location 1239 is 3
9999 mem: storing 0 in location 1240
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9998 run: base address is 1257
9999 mem: location 1237 is 2
9998 run: address to copy is 1266
9998 run: its type is event
9999 mem: location 1266 is 0
9999 mem: location 1267 is 99
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: storing 0 in location 1242
9999 mem: storing 99 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1237 is 2
9999 mem: storing 3 in location 1237
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 2
9999 mem: location 1272 is 1256
9999 mem: location 1237 is 3
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1271
9999 mem: storing 3 in location 1271
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1242 is 0
9999 mem: location 1243 is 99
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1236 is 1270
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1270
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1281
9999 mem: storing 99 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: decrementing refcount of 1270: 4 -> 3
9999 mem: storing 1270 in location 1277
9999 mem: incrementing refcount of 1270: 3 -> 4
9999 mem: storing 1 in location 1285
9999 mem: storing 0 in location 1286
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1281 is 0
9999 mem: location 1282 is 99
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1287
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1276 is 1008
9999 mem: location 1278 is 1140
9999 mem: location 1281 is 0
9999 mem: location 1282 is 99
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1289
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1292
9999 mem: incrementing refcount of 1008: 62 -> 63
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1294
9999 mem: storing 99 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1298
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1293 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1299
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1300
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1301
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1302
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1303
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1304
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1305
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1304 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1306
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1305 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1307
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1294 is 0
9999 mem: location 1295 is 99
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 1295 in location 1308
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1308 is 1295
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1309
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1309 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1320
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1325
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1341
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1342
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1347
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1348
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1348 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1349
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1350
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1354
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 0 in location 1358
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: storing 1 in location 1361
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1298
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1361 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1343
9999 mem: incrementing refcount of 1159: 15 -> 16
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1303 is 1144
9999 mem: location 1144 is 1435
9999 mem: storing 1435 in location 1355
9999 mem: incrementing refcount of 1435: 5 -> 6
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1293 is 1140
9999 mem: location 1308 is 1295
9999 mem: location 1295 is 99
9999 mem: location 1292 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1376
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1379
9999 mem: incrementing refcount of 1140: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1380
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1381
9999 mem: incrementing refcount of 1008: 65 -> 66
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1435
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1382
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1380 is 99
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1435
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1409
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1412
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1435 in location 1413
9999 mem: incrementing refcount of 1435: 6 -> 7
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1439
9999 mem: storing 1439 in location 1414
9999 mem: incrementing refcount of 1439: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1414 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1412 is 99
9999 mem: location 1414 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1440
9999 mem: storing 99 in location 1440
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1413 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 0
9999 mem: location 1438 is 1416
9999 mem: location 1413 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy is 1437
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1437 is 0
9999 mem: storing 0 in location 1415
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1413 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 0
9999 mem: location 1438 is 1416
9999 mem: location 1414 is 1439
9999 mem: location 1413 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy to is 1437
9999 mem: storing 1439 in location 1437
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 99
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1413 is 1435
9999 mem: location 1414 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1442
9999 mem: storing 1435 in location 1442
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 99
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1435
9999 mem: location 1415 is 0
9999 mem: location 1414 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1441
9999 mem: storing 0 in location 1441
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1413 is 1435
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1435
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1435 in location 1206
9999 mem: incrementing refcount of 1435: 7 -> 8
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1435
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1435
9999 mem: skipping refcount at 1435
9999 mem: location 1436 is 98
9999 mem: location 1437 is 1439
9999 mem: location 1438 is 1416
9999 mem: location 1206 is 1435
9999 mem: skipping refcount at 1435
9998 run: address to copy is 1437
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1437 is 1439
9999 mem: storing 1439 in location 1207
9999 mem: incrementing refcount of 1439: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1439
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1439
9999 mem: location 1382 is 1144
9999 mem: decrementing refcount of 1435: 8 -> 7
9999 mem: storing 1439 in location 1144
9999 mem: incrementing refcount of 1439: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1383
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1384
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1385
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1379 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1386
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1383 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1387
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1388
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1381 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 107 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1389
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1381 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 107 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1390
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1386 is 4
9999 mem: storing 3 in location 1391
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1391 is 3
9999 mem: storing 0 in location 1392
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1384 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1384 is 1149
9999 mem: storing 3 in location 1149
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1382 is 1144
9999 mem: location 1144 is 1439
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1206
9999 mem: incrementing refcount of 1439: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1439
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 99
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1435
9999 mem: location 1206 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1441 is 0
9999 mem: storing 0 in location 1207
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1399
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1399 is 0
9999 mem: storing 1 in location 1400
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 4 in location 1401
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1387 is 1
9999 mem: location 1401 is 4
9999 mem: storing 0 in location 1402
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 4
9999 mem: storing 0 in location 1403
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: storing 0 in location 1404
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1381 is 1008
9999 mem: location 1387 is 1
9999 mem: location 1388 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1158
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 2
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1381 is 1008
9999 mem: location 1380 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-inserts-characters-into-empty-editor
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1221 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1221 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 24 -> 25
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1212 is 99
9999 mem: location 1213 is 7
9999 mem: location 1230 is 1040
9999 mem: location 1230 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1231
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1221 is 2
9999 mem: location 1231 is 9
9999 mem: storing 0 in location 1232
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1221 is 2
9999 mem: storing 3 in location 1221
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1221 is 3
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1398
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1379 is 1140
9999 mem: location 1381 is 1008
9999 mem: location 1398 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 14 -> 13
9999 mem: storing 1140 in location 1293
9999 mem: incrementing refcount of 1140: 13 -> 14
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1292
9999 mem: incrementing refcount of 1008: 69 -> 70
9999 mem: storing 0 in location 1298
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1345
9999 mem: incrementing refcount of 1159: 16 -> 17
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1312
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1312 is 1151
9999 mem: location 1151 is 1432
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1312 is 1151
9999 mem: location 1151 is 1432
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1206
9999 mem: incrementing refcount of 1432: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1206 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 1420
9999 mem: location 1434 is 0
9999 mem: location 1206 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1433 is 1420
9999 mem: storing 1420 in location 1207
9999 mem: incrementing refcount of 1420: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1207 is 1420
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1420
9999 mem: storing 1420 in location 1311
9999 mem: incrementing refcount of 1420: 6 -> 7
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1311 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 2
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1431 is 0
9999 mem: location 1311 is 1420
9999 mem: skipping refcount at 1420
9999 mem: storing 1422 in location 1318
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1318 is 1422
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 2
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1430
9998 run: its type is "number"
9999 mem: location 1430 is 1
9999 mem: storing 1 in location 1335
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1335 is 1
9998 run: jump-unless fell through
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 2
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1429
9999 mem: storing 1429 in location 1356
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1303 is 1144
9999 mem: location 1144 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1206
9999 mem: incrementing refcount of 1439: 4 -> 5
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1439
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 99
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1435
9999 mem: location 1206 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1441 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1356 is 1429
9999 mem: storing 0 in location 1429
 105 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 2
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1425
9999 mem: storing 1425 in location 1337
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1304 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1337 is 1425
9999 mem: storing 1 in location 1425
 105 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 2
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1426
9999 mem: storing 1426 in location 1338
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1305 is 1149
9999 mem: location 1149 is 3
9999 mem: location 1338 is 1426
9999 mem: storing 3 in location 1426
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1318 is 1422
9999 mem: location 1422 is 1
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1159
9999 mem: location 1425 is 1
9999 mem: location 1426 is 3
9999 mem: location 1427 is 1159
9999 mem: location 1428 is 1416
9999 mem: location 1429 is 0
9999 mem: location 1430 is 1
9999 mem: location 1318 is 1422
9998 run: address to copy is 1427
9999 mem: storing 1427 in location 1339
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1293 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: location 1339 is 1427
9999 mem: decrementing refcount of 1159: 17 -> 16
9999 mem: storing 1159 in location 1427
9999 mem: incrementing refcount of 1159: 16 -> 17
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1292 is 1008
9999 mem: location 1293 is 1140
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 69 -> 70
9999 mem: decrementing refcount of 1140: 14 -> 13
9999 mem: storing 1140 in location 1278
9999 mem: incrementing refcount of 1140: 13 -> 14
9999 mem: storing 0 in location 1288
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1279
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1439
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1432
9999 mem: location 1152 is 0
9999 mem: location 1278 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1280
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 1
9999 mem: location 1280 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 70 -> 71
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 3
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 70 -> 71
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1277 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1233
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1236
9999 mem: incrementing refcount of 1270: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1236 is 1270
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 3
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1271
9998 run: its type is "number"
9999 mem: location 1271 is 3
9999 mem: storing 3 in location 1237
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 3
9999 mem: location 1272 is 1256
9999 mem: location 1236 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1272 is 1256
9999 mem: storing 1256 in location 1238
9999 mem: incrementing refcount of 1256: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1238 is 1256
9999 mem: skipping refcount at 1256
9999 mem: storing 3 in location 1239
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1237 is 3
9999 mem: location 1239 is 3
9999 mem: storing 1 in location 1240
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
9999 mem: storing 1203 in location 1241
9999 mem: incrementing refcount of 1203: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1241 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1236 is 1270
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1270
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: decrementing refcount of 1270: 5 -> 4
9999 mem: storing 1270 in location 1277
9999 mem: incrementing refcount of 1270: 4 -> 5
9999 mem: storing 1 in location 1285
9999 mem: storing 1 in location 1286
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1276 is 1008
9999 mem: location 1277 is 1270
9999 mem: location 1278 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈     .\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {3: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
