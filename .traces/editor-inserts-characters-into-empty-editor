 102 run: assume-console {"\n    type [abc]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9992 load: after rewriting: type {"abc": "literal-string"}
9999 mem: storing 'type' event starting at 1243
9999 mem: storing 'text' tag at 1243
9999 mem: storing character 97 at 1244
9999 mem: storing 'text' tag at 1247
9999 mem: storing character 98 at 1248
9999 mem: storing 'text' tag at 1251
9999 mem: storing character 99 at 1252
9999 mem: storing console in 1255
9999 mem: storing console data in 1257
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1255
9999 mem: location 2 is 1127
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1258
9999 mem: storing 14 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 42 -> 43
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1262
9999 mem: incrementing refcount of 1255: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1263
9999 mem: incrementing refcount of 1127: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1264
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 0
9999 mem: storing 0 in location 1265
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1261 is 1008
9999 mem: location 1264 is 1
9999 mem: location 1265 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1145
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 0
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 43 -> 44
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1262 is 1255
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1218
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1221
9999 mem: incrementing refcount of 1255: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1221 is 1255
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1222
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1257
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1257 is 1241
9999 mem: storing 1241 in location 1223
9999 mem: incrementing refcount of 1241: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9999 mem: storing 3 in location 1224
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1222 is 0
9999 mem: location 1224 is 3
9999 mem: storing 0 in location 1225
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9998 run: base address is 1242
9999 mem: location 1222 is 0
9998 run: address to copy is 1243
9998 run: its type is event
9999 mem: location 1243 is 0
9999 mem: location 1244 is 97
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: storing 0 in location 1227
9999 mem: storing 97 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1222 is 0
9999 mem: storing 1 in location 1222
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1241
9999 mem: location 1222 is 1
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy to is 1256
9999 mem: storing 1 in location 1256
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1227 is 0
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1221 is 1255
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1255
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 97 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: decrementing refcount of 1255: 2 -> 1
9999 mem: storing 1255 in location 1262
9999 mem: incrementing refcount of 1255: 1 -> 2
9999 mem: storing 1 in location 1270
9999 mem: storing 0 in location 1271
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 97
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: storing 0 in location 1272
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1261 is 1008
9999 mem: location 1263 is 1127
9999 mem: location 1266 is 0
9999 mem: location 1267 is 97
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1274
9999 mem: storing 74 in location 1275
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1279
9999 mem: storing 97 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1283
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1278 is 1127
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 106 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1284
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 46 -> 47
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 106 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1285
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1132
9998 run: its type is "number"
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1286
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1133
9998 run: its type is "number"
9999 mem: location 1133 is 4
9999 mem: storing 4 in location 1287
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1146
9999 mem: storing 1146 in location 1288
9999 mem: incrementing refcount of 1146: 8 -> 9
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1289
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 0
9999 mem: storing 0 in location 1290
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1289 is 1
9999 mem: storing 1 in location 1291
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1290 is 0
9999 mem: storing 0 in location 1292
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1279 is 0
9999 mem: location 1280 is 97
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: storing 1280 in location 1293
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1293 is 1280
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1294
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1306
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1310
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jumping to instruction 164
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1321
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 202
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1322
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 223
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1325
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 245
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1326
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jumping to instruction 280
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1327
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 315
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1328
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 354
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1331
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 391
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 0 in location 1335
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 413
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: storing 1 in location 1336
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1283
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1336 is 1
9998 run: jumping to instruction 418
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1146
9999 mem: storing 1146 in location 1314
9999 mem: incrementing refcount of 1146: 9 -> 10
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1146
9999 mem: storing 1146 in location 1332
9999 mem: incrementing refcount of 1146: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1278 is 1127
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 97
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1350
9999 mem: storing 31 in location 1351
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1353
9999 mem: incrementing refcount of 1127: 8 -> 9
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1354
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 47 -> 48
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1146
9999 mem: storing 1146 in location 1356
9999 mem: incrementing refcount of 1146: 11 -> 12
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1354 is 97
9999 mem: location 1356 is 1146
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1383
9999 mem: storing 5 in location 1384
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1386
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1387
9999 mem: incrementing refcount of 1146: 12 -> 13
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1390
9999 mem: storing 1390 in location 1388
9999 mem: incrementing refcount of 1390: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1388 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 0
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: location 1386 is 97
9999 mem: location 1388 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy to is 1391
9999 mem: storing 97 in location 1391
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1387 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1387 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1389
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1387 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 167
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1388 is 1390
9999 mem: location 1387 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy to is 1148
9999 mem: storing 1390 in location 1148
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1388 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 0
9999 mem: location 1393 is 0
9999 mem: location 1387 is 1146
9999 mem: location 1388 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy to is 1393
9999 mem: storing 1146 in location 1393
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1388 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1146
9999 mem: location 1389 is 0
9999 mem: location 1388 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy to is 1392
9999 mem: storing 0 in location 1392
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1387 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1356 is 1146
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1191
9999 mem: incrementing refcount of 1146: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1146
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1390
9999 mem: location 1149 is 0
9999 mem: location 1191 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1390
9999 mem: storing 1390 in location 1192
9999 mem: incrementing refcount of 1390: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1390
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1390
9999 mem: decrementing refcount of 1146: 14 -> 13
9999 mem: storing 1390 in location 1356
9999 mem: incrementing refcount of 1390: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1146
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1356 is 1390
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1131
9999 mem: storing 1390 in location 1131
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1357
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 0
9999 mem: storing 0 in location 1358
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1132
9998 run: its type is "number"
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1359
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1133
9998 run: its type is "number"
9999 mem: location 1133 is 4
9999 mem: storing 4 in location 1360
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1357 is 1
9999 mem: storing 1 in location 1361
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1358 is 0
9999 mem: storing 0 in location 1362
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1355 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 107 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1363
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1355 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 107 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1364
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1360 is 4
9999 mem: storing 3 in location 1365
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1358 is 0
9999 mem: location 1365 is 3
9999 mem: storing 0 in location 1366
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1358 is 0
9999 mem: storing 1 in location 1358
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1358 is 1
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1136
9999 mem: storing 1 in location 1136
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1356 is 1390
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1390 in location 1191
9999 mem: incrementing refcount of 1390: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1390
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1146
9999 mem: location 1191 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy is 1392
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1192
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1373
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1374
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1364 is 5
9999 mem: storing 4 in location 1375
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1361 is 1
9999 mem: location 1375 is 4
9999 mem: storing 0 in location 1376
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1362 is 0
9999 mem: location 1360 is 4
9999 mem: storing 0 in location 1377
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1376 is 0
9999 mem: location 1377 is 0
9999 mem: storing 0 in location 1378
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1355 is 1008
9999 mem: location 1361 is 1
9999 mem: location 1362 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1145
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 0
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1355 is 1008
9999 mem: location 1354 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1197
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1198
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1200
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1197 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1204
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1204 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1204 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1206
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1206 is 0
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1206 is 0
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1207
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1204 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1210 is 10
9999 mem: location 1206 is 0
9999 mem: storing 10 in location 1210
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1211 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1212
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1197 is 97
9999 mem: storing 0 in location 1213
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1213 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1211 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1210 is 10
9999 mem: storing 1036 in location 1215
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1197 is 97
9999 mem: location 1198 is 7
9999 mem: location 1215 is 1036
9999 mem: location 1215 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1216
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1206 is 0
9999 mem: location 1216 is 9
9999 mem: storing 0 in location 1217
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1206 is 0
9999 mem: storing 1 in location 1206
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1196 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1372
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1353 is 1127
9999 mem: location 1355 is 1008
9999 mem: location 1372 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1127
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1127: 9 -> 8
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 8 -> 9
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 51 -> 52
9999 mem: storing 0 in location 1283
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1146
9999 mem: storing 1146 in location 1316
9999 mem: incrementing refcount of 1146: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1289
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 1
9999 mem: storing 1 in location 1290
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 1297
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jumping to instruction 440
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1146
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1191
9999 mem: incrementing refcount of 1146: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1146
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 167
9999 mem: location 1148 is 1390
9999 mem: location 1149 is 0
9999 mem: location 1191 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1390
9999 mem: storing 1390 in location 1192
9999 mem: incrementing refcount of 1390: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1390
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1390
9999 mem: storing 1390 in location 1305
9999 mem: incrementing refcount of 1390: 5 -> 6
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1305 is 1390
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1390 in location 1191
9999 mem: incrementing refcount of 1390: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1390
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1146
9999 mem: location 1191 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy is 1392
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1192
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1334
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1394
9999 mem: storing 1394 in location 1296
9999 mem: incrementing refcount of 1394: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1291 is 1
9999 mem: location 1292 is 0
9999 mem: location 1314 is 1146
9999 mem: location 1289 is 1
9999 mem: location 1290 is 1
9999 mem: location 1316 is 1146
9999 mem: location 1305 is 1390
9999 mem: location 1334 is 0
9999 mem: location 1296 is 1394
9999 mem: skipping refcount at 1394
9999 mem: location 1296 is 1394
9999 mem: skipping refcount at 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 1 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 1146 in location 1398
9999 mem: storing 1 in location 1399
9999 mem: storing 1 in location 1400
9999 mem: storing 1146 in location 1401
9999 mem: storing 1390 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 1 in location 1404
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1278 is 1127
9999 mem: location 1296 is 1394
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1383
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1386
9999 mem: incrementing refcount of 1127: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1394 in location 1387
9999 mem: incrementing refcount of 1394: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 1388
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1387 is 1394
9999 mem: location 1388 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1394 in location 1143
9999 mem: incrementing refcount of 1394: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1144
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1406
9999 mem: storing 1406 in location 1145
9999 mem: incrementing refcount of 1406: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1143 is 1394
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1406
9999 mem: skipping refcount at 1406
9999 mem: location 1145 is 1406
9999 mem: skipping refcount at 1406
9999 mem: storing 1394 in location 1407
9999 mem: storing 0 in location 1408
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1145 is 1406
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1406
9999 mem: storing 1406 in location 1388
9999 mem: incrementing refcount of 1406: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1388 is 1406
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1138
9999 mem: storing 1406 in location 1138
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1139
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1389
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1389
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1389 is 0
9999 mem: location 1386 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1139
9999 mem: storing 0 in location 1139
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1386 is 1127
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1127
9999 mem: decrementing refcount of 1127: 10 -> 9
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1277 is 1008
9999 mem: location 1278 is 1127
9999 mem: location 1283 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1127
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 51 -> 52
9999 mem: decrementing refcount of 1127: 10 -> 9
9999 mem: storing 1127 in location 1263
9999 mem: incrementing refcount of 1127: 9 -> 10
9999 mem: storing 0 in location 1273
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 25
9990 schedule: editor-event-loop/run_1001/scenario_editor-inserts-characters-into-empty-editor
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1264
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 1
9999 mem: storing 1 in location 1265
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1261 is 1008
9999 mem: location 1264 is 1
9999 mem: location 1265 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 52 -> 53
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1145
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 53 -> 52
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 52 -> 53
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1262 is 1255
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1218
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1221
9999 mem: incrementing refcount of 1255: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1221 is 1255
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 1
9999 mem: storing 1 in location 1222
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1257
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1257 is 1241
9999 mem: storing 1241 in location 1223
9999 mem: incrementing refcount of 1241: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9999 mem: storing 3 in location 1224
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1224 is 3
9999 mem: storing 0 in location 1225
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9998 run: base address is 1242
9999 mem: location 1222 is 1
9998 run: address to copy is 1247
9998 run: its type is event
9999 mem: location 1247 is 0
9999 mem: location 1248 is 98
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1227
9999 mem: storing 98 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1241
9999 mem: location 1222 is 2
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy to is 1256
9999 mem: storing 2 in location 1256
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1227 is 0
9999 mem: location 1228 is 98
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1221 is 1255
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1255
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 98 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: decrementing refcount of 1255: 3 -> 2
9999 mem: storing 1255 in location 1262
9999 mem: incrementing refcount of 1255: 2 -> 3
9999 mem: storing 1 in location 1270
9999 mem: storing 0 in location 1271
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 98
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: storing 0 in location 1272
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1261 is 1008
9999 mem: location 1263 is 1127
9999 mem: location 1266 is 0
9999 mem: location 1267 is 98
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1274
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 53 -> 54
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1279
9999 mem: storing 98 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1283
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1278 is 1127
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 106 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1284
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 106 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1285
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1132
9998 run: its type is "number"
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1286
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1133
9998 run: its type is "number"
9999 mem: location 1133 is 4
9999 mem: storing 4 in location 1287
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1390
9999 mem: storing 1390 in location 1288
9999 mem: incrementing refcount of 1390: 7 -> 8
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1289
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 1
9999 mem: storing 1 in location 1290
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1289 is 1
9999 mem: storing 1 in location 1291
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1290 is 1
9999 mem: storing 1 in location 1292
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1279 is 0
9999 mem: location 1280 is 98
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: storing 1280 in location 1293
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1293 is 1280
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1294
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1306
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1310
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jumping to instruction 164
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1321
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 202
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1322
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 223
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1325
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 245
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1326
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jumping to instruction 280
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1327
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 315
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1328
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 354
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1331
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 391
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 0 in location 1335
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 413
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: storing 1 in location 1336
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1283
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1336 is 1
9998 run: jumping to instruction 418
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1146
9999 mem: storing 1146 in location 1314
9999 mem: incrementing refcount of 1146: 15 -> 16
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1390
9999 mem: storing 1390 in location 1332
9999 mem: incrementing refcount of 1390: 8 -> 9
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1278 is 1127
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1350
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1353
9999 mem: incrementing refcount of 1127: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1354
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1390
9999 mem: storing 1390 in location 1356
9999 mem: incrementing refcount of 1390: 9 -> 10
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1354 is 98
9999 mem: location 1356 is 1390
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1383
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1386
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1390 in location 1387
9999 mem: incrementing refcount of 1390: 10 -> 11
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1409
9999 mem: storing 1409 in location 1388
9999 mem: incrementing refcount of 1409: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1388 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1386 is 98
9999 mem: location 1388 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy to is 1410
9999 mem: storing 98 in location 1410
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1387 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1146
9999 mem: location 1387 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy is 1392
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1389
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1387 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1146
9999 mem: location 1388 is 1409
9999 mem: location 1387 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy to is 1392
9999 mem: storing 1409 in location 1392
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1388 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1387 is 1390
9999 mem: location 1388 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy to is 1412
9999 mem: storing 1390 in location 1412
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1388 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1390
9999 mem: location 1389 is 0
9999 mem: location 1388 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy to is 1411
9999 mem: storing 0 in location 1411
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1387 is 1390
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1356 is 1390
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1390 in location 1191
9999 mem: incrementing refcount of 1390: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1390
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1390
9999 mem: skipping refcount at 1390
9999 mem: location 1391 is 97
9999 mem: location 1392 is 1409
9999 mem: location 1393 is 1146
9999 mem: location 1191 is 1390
9999 mem: skipping refcount at 1390
9998 run: address to copy is 1392
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1392 is 1409
9999 mem: storing 1409 in location 1192
9999 mem: incrementing refcount of 1409: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1409
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1409
9999 mem: decrementing refcount of 1390: 12 -> 11
9999 mem: storing 1409 in location 1356
9999 mem: incrementing refcount of 1409: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1390
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1356 is 1409
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1131
9999 mem: storing 1409 in location 1131
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1357
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 1
9999 mem: storing 1 in location 1358
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1132
9998 run: its type is "number"
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1359
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1133
9998 run: its type is "number"
9999 mem: location 1133 is 4
9999 mem: storing 4 in location 1360
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1357 is 1
9999 mem: storing 1 in location 1361
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1358 is 1
9999 mem: storing 1 in location 1362
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1355 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 107 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1363
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1355 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 107 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1364
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1360 is 4
9999 mem: storing 3 in location 1365
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1358 is 1
9999 mem: location 1365 is 3
9999 mem: storing 0 in location 1366
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1358 is 1
9999 mem: storing 2 in location 1358
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 1
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1358 is 2
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1136
9999 mem: storing 2 in location 1136
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1356 is 1409
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1409 in location 1191
9999 mem: incrementing refcount of 1409: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1409
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1390
9999 mem: location 1191 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy is 1411
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1192
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1373
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1374
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1364 is 5
9999 mem: storing 4 in location 1375
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1361 is 1
9999 mem: location 1375 is 4
9999 mem: storing 0 in location 1376
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1362 is 1
9999 mem: location 1360 is 4
9999 mem: storing 0 in location 1377
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1376 is 0
9999 mem: location 1377 is 0
9999 mem: storing 0 in location 1378
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1355 is 1008
9999 mem: location 1361 is 1
9999 mem: location 1362 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1145
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1355 is 1008
9999 mem: location 1354 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1197
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1198
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1200
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1197 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1204
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1204 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1204 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1206
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1206 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1206 is 1
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1207
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1204 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1210 is 10
9999 mem: location 1206 is 1
9999 mem: storing 11 in location 1210
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
9999 mem: incrementing refcount of 1014: 23 -> 24
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1211 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1212
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1197 is 98
9999 mem: storing 0 in location 1213
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1213 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1211 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1210 is 11
9999 mem: storing 1038 in location 1215
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1197 is 98
9999 mem: location 1198 is 7
9999 mem: location 1215 is 1038
9999 mem: location 1215 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1216
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1206 is 1
9999 mem: location 1216 is 9
9999 mem: storing 0 in location 1217
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1206 is 1
9999 mem: storing 2 in location 1206
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 2
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1196 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1372
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1353 is 1127
9999 mem: location 1355 is 1008
9999 mem: location 1372 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1127
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1127: 12 -> 11
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 11 -> 12
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: storing 0 in location 1283
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1146
9999 mem: storing 1146 in location 1316
9999 mem: incrementing refcount of 1146: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1289
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 2
9999 mem: storing 2 in location 1290
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1138 is 1406
9999 mem: storing 1406 in location 1297
9999 mem: incrementing refcount of 1406: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1297 is 1406
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1297 is 1406
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1406 in location 1191
9999 mem: incrementing refcount of 1406: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1191 is 1406
9999 mem: skipping refcount at 1406
9999 mem: location 1407 is 1394
9999 mem: location 1408 is 0
9999 mem: location 1191 is 1406
9999 mem: skipping refcount at 1406
9998 run: address to copy is 1407
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1407 is 1394
9999 mem: storing 1394 in location 1192
9999 mem: incrementing refcount of 1394: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1192 is 1394
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1394
9999 mem: storing 1394 in location 1296
9999 mem: incrementing refcount of 1394: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1296 is 1394
9999 mem: skipping refcount at 1394
9999 mem: location 1395 is 0
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1405 is 0
9999 mem: location 1296 is 1394
9999 mem: skipping refcount at 1394
9999 mem: storing 1396 in location 1304
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1304 is 1396
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1304 is 1396
9998 run: address to copy is 1404
9998 run: its type is "number"
9999 mem: location 1404 is 1
9999 mem: storing 1 in location 1317
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1317 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1409
9999 mem: decrementing refcount of 1390: 11 -> 10
9999 mem: storing 1409 in location 1288
9999 mem: incrementing refcount of 1409: 4 -> 5
 105 run: {insert-until: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1409
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1409 in location 1191
9999 mem: incrementing refcount of 1409: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1409
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1390
9999 mem: location 1191 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy is 1411
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1192
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1333
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}, {insert-until: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1333 is 0
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1403
9999 mem: storing 0 in location 1403
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1289 is 1
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1399
9999 mem: storing 1 in location 1399
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1290 is 2
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1400
9999 mem: storing 2 in location 1400
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 2
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1316 is 1146
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1401
9999 mem: storing 1146 in location 1401
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 447
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1277 is 1008
9999 mem: location 1278 is 1127
9999 mem: location 1283 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1127
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: decrementing refcount of 1127: 12 -> 11
9999 mem: storing 1127 in location 1263
9999 mem: incrementing refcount of 1127: 11 -> 12
9999 mem: storing 0 in location 1273
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1264
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 2
9999 mem: storing 2 in location 1265
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1261 is 1008
9999 mem: location 1264 is 1
9999 mem: location 1265 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 61 -> 62
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1145
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 2
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 61 -> 62
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1262 is 1255
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1218
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1221
9999 mem: incrementing refcount of 1255: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1221 is 1255
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 2
9999 mem: storing 2 in location 1222
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1257
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1257 is 1241
9999 mem: storing 1241 in location 1223
9999 mem: incrementing refcount of 1241: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9999 mem: storing 3 in location 1224
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1222 is 2
9999 mem: location 1224 is 3
9999 mem: storing 0 in location 1225
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9998 run: base address is 1242
9999 mem: location 1222 is 2
9998 run: address to copy is 1251
9998 run: its type is event
9999 mem: location 1251 is 0
9999 mem: location 1252 is 99
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: storing 0 in location 1227
9999 mem: storing 99 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1241
9999 mem: location 1222 is 3
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy to is 1256
9999 mem: storing 3 in location 1256
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1227 is 0
9999 mem: location 1228 is 99
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1221 is 1255
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1255
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1266
9999 mem: storing 99 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: decrementing refcount of 1255: 4 -> 3
9999 mem: storing 1255 in location 1262
9999 mem: incrementing refcount of 1255: 3 -> 4
9999 mem: storing 1 in location 1270
9999 mem: storing 0 in location 1271
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 99
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: storing 0 in location 1272
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1261 is 1008
9999 mem: location 1263 is 1127
9999 mem: location 1266 is 0
9999 mem: location 1267 is 99
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1274
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 62 -> 63
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1279
9999 mem: storing 99 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1283
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1278 is 1127
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 106 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1284
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 106 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1285
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1132
9998 run: its type is "number"
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1286
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1133
9998 run: its type is "number"
9999 mem: location 1133 is 4
9999 mem: storing 4 in location 1287
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1409
9999 mem: storing 1409 in location 1288
9999 mem: incrementing refcount of 1409: 6 -> 7
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1289
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 2
9999 mem: storing 2 in location 1290
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1289 is 1
9999 mem: storing 1 in location 1291
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1290 is 2
9999 mem: storing 2 in location 1292
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1279 is 0
9999 mem: location 1280 is 99
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: storing 1280 in location 1293
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1293 is 1280
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1294
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1306
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1310
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jumping to instruction 164
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1321
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 202
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1322
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 223
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1325
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 245
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1326
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jumping to instruction 280
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1327
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 315
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1328
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 354
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1331
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 391
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 0 in location 1335
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 413
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: storing 1 in location 1336
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1283
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1336 is 1
9998 run: jumping to instruction 418
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1146
9999 mem: storing 1146 in location 1314
9999 mem: incrementing refcount of 1146: 17 -> 18
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1409
9999 mem: storing 1409 in location 1332
9999 mem: incrementing refcount of 1409: 7 -> 8
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1278 is 1127
9999 mem: location 1293 is 1280
9999 mem: location 1280 is 99
9999 mem: location 1277 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1350
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1353
9999 mem: incrementing refcount of 1127: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1354
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 65 -> 66
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1409
9999 mem: storing 1409 in location 1356
9999 mem: incrementing refcount of 1409: 8 -> 9
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1354 is 99
9999 mem: location 1356 is 1409
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1383
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1386
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1409 in location 1387
9999 mem: incrementing refcount of 1409: 9 -> 10
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1413
9999 mem: storing 1413 in location 1388
9999 mem: incrementing refcount of 1413: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1388 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1386 is 99
9999 mem: location 1388 is 1413
9999 mem: skipping refcount at 1413
9998 run: address to copy to is 1414
9999 mem: storing 99 in location 1414
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1387 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1390
9999 mem: location 1387 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy is 1411
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1389
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1387 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1390
9999 mem: location 1388 is 1413
9999 mem: location 1387 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy to is 1411
9999 mem: storing 1413 in location 1411
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1388 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1414 is 99
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1387 is 1409
9999 mem: location 1388 is 1413
9999 mem: skipping refcount at 1413
9998 run: address to copy to is 1416
9999 mem: storing 1409 in location 1416
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1388 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1414 is 99
9999 mem: location 1415 is 0
9999 mem: location 1416 is 1409
9999 mem: location 1389 is 0
9999 mem: location 1388 is 1413
9999 mem: skipping refcount at 1413
9998 run: address to copy to is 1415
9999 mem: storing 0 in location 1415
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1387 is 1409
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1356 is 1409
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1409 in location 1191
9999 mem: incrementing refcount of 1409: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1409
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1409
9999 mem: skipping refcount at 1409
9999 mem: location 1410 is 98
9999 mem: location 1411 is 1413
9999 mem: location 1412 is 1390
9999 mem: location 1191 is 1409
9999 mem: skipping refcount at 1409
9998 run: address to copy is 1411
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1411 is 1413
9999 mem: storing 1413 in location 1192
9999 mem: incrementing refcount of 1413: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1413
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1413
9999 mem: decrementing refcount of 1409: 11 -> 10
9999 mem: storing 1413 in location 1356
9999 mem: incrementing refcount of 1413: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1409
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1356 is 1413
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1131
9999 mem: storing 1413 in location 1131
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1357
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 2
9999 mem: storing 2 in location 1358
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1132
9998 run: its type is "number"
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1359
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1133
9998 run: its type is "number"
9999 mem: location 1133 is 4
9999 mem: storing 4 in location 1360
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1357 is 1
9999 mem: storing 1 in location 1361
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1358 is 2
9999 mem: storing 2 in location 1362
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1355 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 107 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1363
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1355 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 107 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1364
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1360 is 4
9999 mem: storing 3 in location 1365
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1358 is 2
9999 mem: location 1365 is 3
9999 mem: storing 0 in location 1366
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1358 is 2
9999 mem: storing 3 in location 1358
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 2
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1358 is 3
9999 mem: location 1353 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy to is 1136
9999 mem: storing 3 in location 1136
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1356 is 1413
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1413 in location 1191
9999 mem: incrementing refcount of 1413: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1413
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1414 is 99
9999 mem: location 1415 is 0
9999 mem: location 1416 is 1409
9999 mem: location 1191 is 1413
9999 mem: skipping refcount at 1413
9998 run: address to copy is 1415
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1415 is 0
9999 mem: storing 0 in location 1192
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1373
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1374
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1364 is 5
9999 mem: storing 4 in location 1375
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1361 is 1
9999 mem: location 1375 is 4
9999 mem: storing 0 in location 1376
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1362 is 2
9999 mem: location 1360 is 4
9999 mem: storing 0 in location 1377
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1376 is 0
9999 mem: location 1377 is 0
9999 mem: storing 0 in location 1378
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1355 is 1008
9999 mem: location 1361 is 1
9999 mem: location 1362 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1145
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 2
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1355 is 1008
9999 mem: location 1354 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1197
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1199 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1198
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1200
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-inserts-characters-into-empty-editor
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1197 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1202
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1203
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1204
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1204 is 1
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1204 is 1
9999 mem: location 1203 is 5
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1206
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1206 is 2
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1206 is 2
9999 mem: location 1202 is 10
9999 mem: storing 1 in location 1205
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1205 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1207
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1204 is 1
9999 mem: location 1202 is 10
9999 mem: storing 10 in location 1210
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1210 is 10
9999 mem: location 1206 is 2
9999 mem: storing 12 in location 1210
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1211
9999 mem: incrementing refcount of 1014: 24 -> 25
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1211 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1212
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1197 is 99
9999 mem: storing 0 in location 1213
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1213 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1211 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1210 is 12
9999 mem: storing 1040 in location 1215
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1197 is 99
9999 mem: location 1198 is 7
9999 mem: location 1215 is 1040
9999 mem: location 1215 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1202 is 10
9999 mem: storing 9 in location 1216
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1206 is 2
9999 mem: location 1216 is 9
9999 mem: storing 0 in location 1217
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1206 is 2
9999 mem: storing 3 in location 1206
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 3
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1196 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1372
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1353 is 1127
9999 mem: location 1355 is 1008
9999 mem: location 1372 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1127
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1127: 14 -> 13
9999 mem: storing 1127 in location 1278
9999 mem: incrementing refcount of 1127: 13 -> 14
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 69 -> 70
9999 mem: storing 0 in location 1283
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1146
9999 mem: storing 1146 in location 1316
9999 mem: incrementing refcount of 1146: 18 -> 19
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1289
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 3
9999 mem: storing 3 in location 1290
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1138 is 1406
9999 mem: storing 1406 in location 1297
9999 mem: incrementing refcount of 1406: 4 -> 5
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1297 is 1406
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1297 is 1406
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1406 in location 1191
9999 mem: incrementing refcount of 1406: 5 -> 6
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1191 is 1406
9999 mem: skipping refcount at 1406
9999 mem: location 1407 is 1394
9999 mem: location 1408 is 0
9999 mem: location 1191 is 1406
9999 mem: skipping refcount at 1406
9998 run: address to copy is 1407
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1407 is 1394
9999 mem: storing 1394 in location 1192
9999 mem: incrementing refcount of 1394: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1192 is 1394
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1394
9999 mem: storing 1394 in location 1296
9999 mem: incrementing refcount of 1394: 6 -> 7
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1296 is 1394
9999 mem: skipping refcount at 1394
9999 mem: location 1395 is 0
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 2
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1405 is 0
9999 mem: location 1296 is 1394
9999 mem: skipping refcount at 1394
9999 mem: storing 1396 in location 1304
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1304 is 1396
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 2
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1304 is 1396
9998 run: address to copy is 1404
9998 run: its type is "number"
9999 mem: location 1404 is 1
9999 mem: storing 1 in location 1317
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1317 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1278 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1131
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1131 is 1413
9999 mem: decrementing refcount of 1409: 10 -> 9
9999 mem: storing 1413 in location 1288
9999 mem: incrementing refcount of 1413: 4 -> 5
 105 run: {insert-until: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1413
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1413 in location 1191
9999 mem: incrementing refcount of 1413: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1413
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1414 is 99
9999 mem: location 1415 is 0
9999 mem: location 1416 is 1409
9999 mem: location 1191 is 1413
9999 mem: skipping refcount at 1413
9998 run: address to copy is 1415
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1415 is 0
9999 mem: storing 0 in location 1192
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1333
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}, {insert-until: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 2
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1333 is 0
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1403
9999 mem: storing 0 in location 1403
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 2
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1289 is 1
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1399
9999 mem: storing 1 in location 1399
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 2
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1290 is 3
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1400
9999 mem: storing 3 in location 1400
 105 run: {typing: ("address" "insert-operation"), "lookup": ()} <- put {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1304 is 1396
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1146
9999 mem: location 1399 is 1
9999 mem: location 1400 is 3
9999 mem: location 1401 is 1146
9999 mem: location 1402 is 1390
9999 mem: location 1403 is 0
9999 mem: location 1404 is 1
9999 mem: location 1316 is 1146
9999 mem: location 1304 is 1396
9998 run: address to copy to is 1401
9999 mem: storing 1146 in location 1401
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 447
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1277 is 1008
9999 mem: location 1278 is 1127
9999 mem: location 1283 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1127
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 69 -> 70
9999 mem: decrementing refcount of 1127: 14 -> 13
9999 mem: storing 1127 in location 1263
9999 mem: incrementing refcount of 1127: 13 -> 14
9999 mem: storing 0 in location 1273
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 1
9999 mem: storing 1 in location 1264
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9999 mem: location 1128 is 1146
9999 mem: location 1129 is 1146
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1413
9999 mem: location 1132 is 0
9999 mem: location 1133 is 4
9999 mem: location 1134 is 1
9999 mem: location 1135 is 1
9999 mem: location 1136 is 3
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1406
9999 mem: location 1139 is 0
9999 mem: location 1263 is 1127
9999 mem: skipping refcount at 1127
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 3
9999 mem: storing 3 in location 1265
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1261 is 1008
9999 mem: location 1264 is 1
9999 mem: location 1265 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1140
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 70 -> 71
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1144
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1145
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1143 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1144 is 1
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1145 is 3
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1261
9999 mem: incrementing refcount of 1008: 70 -> 71
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1262 is 1255
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1218
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1221
9999 mem: incrementing refcount of 1255: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1221 is 1255
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 3
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 3
9999 mem: storing 3 in location 1222
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 3
9999 mem: location 1257 is 1241
9999 mem: location 1221 is 1255
9999 mem: skipping refcount at 1255
9998 run: address to copy is 1257
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1257 is 1241
9999 mem: storing 1241 in location 1223
9999 mem: incrementing refcount of 1241: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1223 is 1241
9999 mem: skipping refcount at 1241
9999 mem: storing 3 in location 1224
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1222 is 3
9999 mem: location 1224 is 3
9999 mem: storing 1 in location 1225
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
9999 mem: storing 1188 in location 1226
9999 mem: incrementing refcount of 1188: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1226 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1221 is 1255
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1255
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: decrementing refcount of 1255: 5 -> 4
9999 mem: storing 1255 in location 1262
9999 mem: incrementing refcount of 1255: 4 -> 5
9999 mem: storing 1 in location 1270
9999 mem: storing 1 in location 1271
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1261 is 1008
9999 mem: location 1262 is 1255
9999 mem: location 1263 is 1127
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈     .\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {3: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
