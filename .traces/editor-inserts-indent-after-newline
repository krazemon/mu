9991 parse: --- defining scenario_editor-inserts-indent-after-newline
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {10: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {10: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ab\n  cd\nef": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"ab\n  cd\nef": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 2, 8\n    type [\n]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    left-click 2, 8\n    type [\n]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3  # cursor row\n    4 <- 2  # cursor column (indented)\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 3  # cursor row\n    4 <- 2  # cursor column (indented)\n  ": "literal-string"}
9999 parse: recipe scenario_editor-inserts-indent-after-newline has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- deduce types for recipe scenario_editor-inserts-indent-after-newline
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- collect surrounding spaces for recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- transform names for recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-inserts-indent-after-newline
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {10: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- transform braces for recipe scenario_editor-inserts-indent-after-newline
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- type-check calls inside recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- check types of reply instructions in recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- type-check merge instructions in recipe scenario_editor-inserts-indent-after-newline
9991 transform: --- checking reply instructions against header for scenario_editor-inserts-indent-after-newline
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-inserts-indent-after-newline
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {10: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 10
9999 mem: storing 100 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 100
9999 mem: array size is 100
9999 mem: allocating size 202
9999 mem: new alloc: 1014
9999 mem: storing 100 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 10
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 10 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1216
9999 mem: storing 8 in location 1217
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1219 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1220
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1221
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1222
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 0
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 0
9998 run: address to copy to is 1016
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 0
9999 mem: storing 1 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 1
9998 run: address to copy to is 1018
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 2
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 2
9998 run: address to copy to is 1020
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 3
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 3
9998 run: address to copy to is 1022
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 4
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 4
9998 run: address to copy to is 1024
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 5
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 5
9998 run: address to copy to is 1026
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 6
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 6
9998 run: address to copy to is 1028
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 7
9998 run: address to copy to is 1030
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 8
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 8
9998 run: address to copy to is 1032
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 9
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 9
9998 run: address to copy to is 1034
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 10
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 10
9998 run: address to copy to is 1036
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 10
9999 mem: storing 11 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 11
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 11
9998 run: address to copy to is 1038
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 11
9999 mem: storing 12 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 12
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 12
9998 run: address to copy to is 1040
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 12
9999 mem: storing 13 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 13
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 13
9998 run: address to copy to is 1042
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 13
9999 mem: storing 14 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 14
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 14
9998 run: address to copy to is 1044
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 14
9999 mem: storing 15 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 15
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 15
9998 run: address to copy to is 1046
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 15
9999 mem: storing 16 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 16
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 16
9998 run: address to copy to is 1048
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 16
9999 mem: storing 17 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 17
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 17
9998 run: address to copy to is 1050
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 17
9999 mem: storing 18 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 18
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 18
9998 run: address to copy to is 1052
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 18
9999 mem: storing 19 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 19
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 19
9998 run: address to copy to is 1054
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 19
9999 mem: storing 20 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 20
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 20
9998 run: address to copy to is 1056
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 20
9999 mem: storing 21 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 21
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 21
9998 run: address to copy to is 1058
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 21
9999 mem: storing 22 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 22
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 22
9998 run: address to copy to is 1060
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 22
9999 mem: storing 23 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 23
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 23
9998 run: address to copy to is 1062
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 23
9999 mem: storing 24 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 24
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 24
9998 run: address to copy to is 1064
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 24
9999 mem: storing 25 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 25
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 25
9998 run: address to copy to is 1066
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 25
9999 mem: storing 26 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 26
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 26
9998 run: address to copy to is 1068
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 26
9999 mem: storing 27 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 27
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 27
9998 run: address to copy to is 1070
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 27
9999 mem: storing 28 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 28
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 28
9998 run: address to copy to is 1072
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 28
9999 mem: storing 29 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 29
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 29
9998 run: address to copy to is 1074
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 29
9999 mem: storing 30 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 30
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 30
9998 run: address to copy to is 1076
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 30
9999 mem: storing 31 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 31
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 31
9998 run: address to copy to is 1078
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 31
9999 mem: storing 32 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 32
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 32
9998 run: address to copy to is 1080
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 32
9999 mem: storing 33 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 33
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 33
9998 run: address to copy to is 1082
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 33
9999 mem: storing 34 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 34
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 34
9998 run: address to copy to is 1084
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 34
9999 mem: storing 35 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 35
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 35
9998 run: address to copy to is 1086
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 35
9999 mem: storing 36 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 36
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 36
9998 run: address to copy to is 1088
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 36
9999 mem: storing 37 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 37
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 37
9998 run: address to copy to is 1090
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 37
9999 mem: storing 38 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 38
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 38
9998 run: address to copy to is 1092
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 38
9999 mem: storing 39 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 39
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 39
9998 run: address to copy to is 1094
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 39
9999 mem: storing 40 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 40
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 40
9998 run: address to copy to is 1096
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 40
9999 mem: storing 41 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 41
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 41
9998 run: address to copy to is 1098
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 41
9999 mem: storing 42 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 42
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 42
9998 run: address to copy to is 1100
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 42
9999 mem: storing 43 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 43
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 43
9998 run: address to copy to is 1102
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 43
9999 mem: storing 44 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 44
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 44
9998 run: address to copy to is 1104
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 44
9999 mem: storing 45 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 45
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 45
9998 run: address to copy to is 1106
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 45
9999 mem: storing 46 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 46
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 46
9998 run: address to copy to is 1108
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 46
9999 mem: storing 47 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 47
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 47
9998 run: address to copy to is 1110
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 47
9999 mem: storing 48 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 48
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 48
9998 run: address to copy to is 1112
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 48
9999 mem: storing 49 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 49
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 49
9998 run: address to copy to is 1114
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 49
9999 mem: storing 50 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 50
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 50
9998 run: address to copy to is 1116
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1116
9999 mem: storing 7 in location 1117
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 50
9999 mem: storing 51 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 51
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 51
9998 run: address to copy to is 1118
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1118
9999 mem: storing 7 in location 1119
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 51
9999 mem: storing 52 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 52
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 52
9998 run: address to copy to is 1120
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1120
9999 mem: storing 7 in location 1121
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 52
9999 mem: storing 53 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 53
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 53
9998 run: address to copy to is 1122
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1122
9999 mem: storing 7 in location 1123
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 53
9999 mem: storing 54 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 54
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 54
9998 run: address to copy to is 1124
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 54
9999 mem: storing 55 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 55
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 55
9998 run: address to copy to is 1126
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1126
9999 mem: storing 7 in location 1127
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 55
9999 mem: storing 56 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 56
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 56
9998 run: address to copy to is 1128
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1128
9999 mem: storing 7 in location 1129
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 56
9999 mem: storing 57 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 57
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 57
9998 run: address to copy to is 1130
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1130
9999 mem: storing 7 in location 1131
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 57
9999 mem: storing 58 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 58
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 58
9998 run: address to copy to is 1132
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1132
9999 mem: storing 7 in location 1133
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 58
9999 mem: storing 59 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 59
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 59
9998 run: address to copy to is 1134
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1134
9999 mem: storing 7 in location 1135
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 59
9999 mem: storing 60 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 60
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 60
9998 run: address to copy to is 1136
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1136
9999 mem: storing 7 in location 1137
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 60
9999 mem: storing 61 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 61
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 61
9998 run: address to copy to is 1138
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1138
9999 mem: storing 7 in location 1139
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 61
9999 mem: storing 62 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 62
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 62
9998 run: address to copy to is 1140
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1140
9999 mem: storing 7 in location 1141
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 62
9999 mem: storing 63 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 63
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 63
9998 run: address to copy to is 1142
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1142
9999 mem: storing 7 in location 1143
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 63
9999 mem: storing 64 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 64
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 64
9998 run: address to copy to is 1144
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1144
9999 mem: storing 7 in location 1145
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 64
9999 mem: storing 65 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 65
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 65
9998 run: address to copy to is 1146
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1146
9999 mem: storing 7 in location 1147
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 65
9999 mem: storing 66 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 66
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 66
9998 run: address to copy to is 1148
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1148
9999 mem: storing 7 in location 1149
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 66
9999 mem: storing 67 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 67
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 67
9998 run: address to copy to is 1150
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1150
9999 mem: storing 7 in location 1151
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 67
9999 mem: storing 68 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 68
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 68
9998 run: address to copy to is 1152
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1152
9999 mem: storing 7 in location 1153
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 68
9999 mem: storing 69 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 69
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 69
9998 run: address to copy to is 1154
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1154
9999 mem: storing 7 in location 1155
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 69
9999 mem: storing 70 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 70
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 70
9998 run: address to copy to is 1156
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1156
9999 mem: storing 7 in location 1157
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 70
9999 mem: storing 71 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 71
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 71
9998 run: address to copy to is 1158
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1158
9999 mem: storing 7 in location 1159
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 71
9999 mem: storing 72 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 72
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 72
9998 run: address to copy to is 1160
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1160
9999 mem: storing 7 in location 1161
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 72
9999 mem: storing 73 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 73
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 73
9998 run: address to copy to is 1162
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1162
9999 mem: storing 7 in location 1163
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 73
9999 mem: storing 74 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 74
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 74
9998 run: address to copy to is 1164
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1164
9999 mem: storing 7 in location 1165
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 74
9999 mem: storing 75 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 75
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 75
9998 run: address to copy to is 1166
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1166
9999 mem: storing 7 in location 1167
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 75
9999 mem: storing 76 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 76
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 76
9998 run: address to copy to is 1168
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1168
9999 mem: storing 7 in location 1169
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 76
9999 mem: storing 77 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 77
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 77
9998 run: address to copy to is 1170
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1170
9999 mem: storing 7 in location 1171
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 77
9999 mem: storing 78 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 78
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 78
9998 run: address to copy to is 1172
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1172
9999 mem: storing 7 in location 1173
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 78
9999 mem: storing 79 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 79
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 79
9998 run: address to copy to is 1174
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1174
9999 mem: storing 7 in location 1175
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 79
9999 mem: storing 80 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 80
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
9990 schedule: clear-screen/new-fake-screen/scenario_editor-inserts-indent-after-newline
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 80
9998 run: address to copy to is 1176
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1176
9999 mem: storing 7 in location 1177
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 80
9999 mem: storing 81 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 81
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 81
9998 run: address to copy to is 1178
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1178
9999 mem: storing 7 in location 1179
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 81
9999 mem: storing 82 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 82
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 82
9998 run: address to copy to is 1180
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1180
9999 mem: storing 7 in location 1181
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 82
9999 mem: storing 83 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 83
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 83
9998 run: address to copy to is 1182
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1182
9999 mem: storing 7 in location 1183
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 83
9999 mem: storing 84 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 84
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 84
9998 run: address to copy to is 1184
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1184
9999 mem: storing 7 in location 1185
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 84
9999 mem: storing 85 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 85
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 85
9998 run: address to copy to is 1186
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1186
9999 mem: storing 7 in location 1187
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 85
9999 mem: storing 86 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 86
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 86
9998 run: address to copy to is 1188
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1188
9999 mem: storing 7 in location 1189
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 86
9999 mem: storing 87 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 87
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 87
9998 run: address to copy to is 1190
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1190
9999 mem: storing 7 in location 1191
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 87
9999 mem: storing 88 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 88
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 88
9998 run: address to copy to is 1192
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1192
9999 mem: storing 7 in location 1193
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 88
9999 mem: storing 89 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 89
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 89
9998 run: address to copy to is 1194
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1194
9999 mem: storing 7 in location 1195
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 89
9999 mem: storing 90 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 90
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 90
9998 run: address to copy to is 1196
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1196
9999 mem: storing 7 in location 1197
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 90
9999 mem: storing 91 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 91
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 91
9998 run: address to copy to is 1198
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1198
9999 mem: storing 7 in location 1199
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 91
9999 mem: storing 92 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 92
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 92
9998 run: address to copy to is 1200
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1200
9999 mem: storing 7 in location 1201
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 92
9999 mem: storing 93 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 93
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 93
9998 run: address to copy to is 1202
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1202
9999 mem: storing 7 in location 1203
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 93
9999 mem: storing 94 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 94
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 94
9998 run: address to copy to is 1204
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1204
9999 mem: storing 7 in location 1205
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 94
9999 mem: storing 95 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 95
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 95
9998 run: address to copy to is 1206
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1206
9999 mem: storing 7 in location 1207
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 95
9999 mem: storing 96 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 96
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 96
9998 run: address to copy to is 1208
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1208
9999 mem: storing 7 in location 1209
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 96
9999 mem: storing 97 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 97
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 97
9998 run: address to copy to is 1210
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1210
9999 mem: storing 7 in location 1211
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 97
9999 mem: storing 98 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 98
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 98
9998 run: address to copy to is 1212
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1212
9999 mem: storing 7 in location 1213
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 98
9999 mem: storing 99 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 99
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 99
9998 run: address to copy to is 1214
9999 mem: location 1224 is 0
9999 mem: location 1225 is 7
9999 mem: storing 0 in location 1214
9999 mem: storing 7 in location 1215
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 99
9999 mem: storing 100 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 100
9999 mem: location 1221 is 100
9999 mem: storing 1 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"ab\n  cd\nef": "literal-string"}
9999 mem: new string alloc: 1226
9999 mem: storing 1226 in location 1
9999 mem: incrementing refcount of 1226: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1226
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1238
9999 mem: storing 7 in location 1239
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1241
9999 mem: incrementing refcount of 1226: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1242
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1243
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1244
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1244 is 10
9999 mem: storing 9 in location 1244
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1247
9999 mem: storing 1247 in location 1245
9999 mem: incrementing refcount of 1247: 0 -> 1
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}, {left: "number"}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1243 is 0
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1252
9999 mem: storing 0 in location 1252
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}, {right: "number"}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1244 is 9
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1253
9999 mem: storing 9 in location 1253
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {1: "literal", "top": ()}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1255
9999 mem: storing 1 in location 1255
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {left: "number"}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1243 is 0
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 0 in location 1256
 103 run: {init: ("address" "shared" "duplex-list" "character")} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1260
9999 mem: storing 4 in location 1261
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1263
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1266
9999 mem: storing 1266 in location 1265
9999 mem: incrementing refcount of 1266: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1263 is 167
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1265 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 167 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1265 is 1266
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1266
9999 mem: storing 1266 in location 1246
9999 mem: incrementing refcount of 1266: 1 -> 2
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1246 is 1266
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1248
9999 mem: storing 1266 in location 1248
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1246 is 1266
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1249
9999 mem: storing 1266 in location 1249
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1246 is 1266
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1266 in location 1251
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1245 is 1247
9999 mem: location 1241 is 1226
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1219
9999 mem: incrementing refcount of 1247: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1220
9999 mem: incrementing refcount of 1226: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1220 is 1226
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9999 mem: storing 10 in location 1221
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1221 is 10
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1222
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1219 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1219 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1266
9999 mem: storing 1266 in location 1223
9999 mem: incrementing refcount of 1266: 2 -> 3
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 0
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 0
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 97
9999 mem: storing 97 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 97
9999 mem: location 1223 is 1266
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1270
9999 mem: storing 5 in location 1271
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1274
9999 mem: incrementing refcount of 1266: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1277
9999 mem: storing 1277 in location 1275
9999 mem: incrementing refcount of 1277: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1273 is 97
9999 mem: location 1275 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1278
9999 mem: storing 97 in location 1278
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1275 is 1277
9999 mem: location 1274 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy to is 1268
9999 mem: storing 1277 in location 1268
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1274 is 1266
9999 mem: location 1275 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1280
9999 mem: storing 1266 in location 1280
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1266
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1279
9999 mem: storing 0 in location 1279
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1266
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1266
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1281
9999 mem: storing 3 in location 1282
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 5 -> 4
9999 mem: storing 1277 in location 1223
9999 mem: incrementing refcount of 1277: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 0
9999 mem: storing 1 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 1
9998 run: address to copy is 1229
9998 run: its type is character
9999 mem: location 1229 is 98
9999 mem: storing 98 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 98
9999 mem: location 1223 is 1277
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1274
9999 mem: incrementing refcount of 1277: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1286
9999 mem: storing 1286 in location 1275
9999 mem: incrementing refcount of 1286: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1273 is 98
9999 mem: location 1275 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1287
9999 mem: storing 98 in location 1287
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1266
9999 mem: location 1274 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1266
9999 mem: location 1275 is 1286
9999 mem: location 1274 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1279
9999 mem: storing 1286 in location 1279
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1274 is 1277
9999 mem: location 1275 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1289
9999 mem: storing 1277 in location 1289
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1277
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1288
9999 mem: storing 0 in location 1288
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1277
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1277
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 5 -> 4
9999 mem: storing 1286 in location 1223
9999 mem: incrementing refcount of 1286: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 2
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 2
9998 run: address to copy is 1230
9998 run: its type is character
9999 mem: location 1230 is 10
9999 mem: storing 10 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 10
9999 mem: location 1223 is 1286
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1274
9999 mem: incrementing refcount of 1286: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1290
9999 mem: storing 1290 in location 1275
9999 mem: incrementing refcount of 1290: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1273 is 10
9999 mem: location 1275 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1291
9999 mem: storing 10 in location 1291
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1277
9999 mem: location 1274 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1277
9999 mem: location 1275 is 1290
9999 mem: location 1274 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1288
9999 mem: storing 1290 in location 1288
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1274 is 1286
9999 mem: location 1275 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1293
9999 mem: storing 1286 in location 1293
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1286
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1292
9999 mem: storing 0 in location 1292
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1286
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1286
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 5 -> 4
9999 mem: storing 1290 in location 1223
9999 mem: incrementing refcount of 1290: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 3
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 3
9998 run: address to copy is 1231
9998 run: its type is character
9999 mem: location 1231 is 32
9999 mem: storing 32 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 32
9999 mem: location 1223 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1274
9999 mem: incrementing refcount of 1290: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1294
9999 mem: storing 1294 in location 1275
9999 mem: incrementing refcount of 1294: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1273 is 32
9999 mem: location 1275 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1295
9999 mem: storing 32 in location 1295
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1286
9999 mem: location 1274 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1286
9999 mem: location 1275 is 1294
9999 mem: location 1274 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1292
9999 mem: storing 1294 in location 1292
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1274 is 1290
9999 mem: location 1275 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1297
9999 mem: storing 1290 in location 1297
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1290
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1296
9999 mem: storing 0 in location 1296
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1290
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 5 -> 4
9999 mem: storing 1294 in location 1223
9999 mem: incrementing refcount of 1294: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 4
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 4
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 32
9999 mem: storing 32 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 32
9999 mem: location 1223 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1274
9999 mem: incrementing refcount of 1294: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1298
9999 mem: storing 1298 in location 1275
9999 mem: incrementing refcount of 1298: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1273 is 32
9999 mem: location 1275 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1299
9999 mem: storing 32 in location 1299
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1290
9999 mem: location 1274 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1290
9999 mem: location 1275 is 1298
9999 mem: location 1274 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1296
9999 mem: storing 1298 in location 1296
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1274 is 1294
9999 mem: location 1275 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1301
9999 mem: storing 1294 in location 1301
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1294
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1300
9999 mem: storing 0 in location 1300
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1294
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 5 -> 4
9999 mem: storing 1298 in location 1223
9999 mem: incrementing refcount of 1298: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 5
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 5
9998 run: address to copy is 1233
9998 run: its type is character
9999 mem: location 1233 is 99
9999 mem: storing 99 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 99
9999 mem: location 1223 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1274
9999 mem: incrementing refcount of 1298: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1302
9999 mem: storing 1302 in location 1275
9999 mem: incrementing refcount of 1302: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1273 is 99
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1303
9999 mem: storing 99 in location 1303
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1294
9999 mem: location 1274 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1294
9999 mem: location 1275 is 1302
9999 mem: location 1274 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1300
9999 mem: storing 1302 in location 1300
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1274 is 1298
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1305
9999 mem: storing 1298 in location 1305
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1298
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1304
9999 mem: storing 0 in location 1304
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1298
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 5 -> 4
9999 mem: storing 1302 in location 1223
9999 mem: incrementing refcount of 1302: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 6
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 6
9998 run: address to copy is 1234
9998 run: its type is character
9999 mem: location 1234 is 100
9999 mem: storing 100 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 100
9999 mem: location 1223 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1274
9999 mem: incrementing refcount of 1302: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1306
9999 mem: storing 1306 in location 1275
9999 mem: incrementing refcount of 1306: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1273 is 100
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1307
9999 mem: storing 100 in location 1307
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1298
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1298
9999 mem: location 1275 is 1306
9999 mem: location 1274 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1304
9999 mem: storing 1306 in location 1304
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1274 is 1302
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1309
9999 mem: storing 1302 in location 1309
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1308
9999 mem: storing 0 in location 1308
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1302
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 5 -> 4
9999 mem: storing 1306 in location 1223
9999 mem: incrementing refcount of 1306: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 7
9998 run: address to copy is 1235
9998 run: its type is character
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 10
9999 mem: location 1223 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1274
9999 mem: incrementing refcount of 1306: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1310
9999 mem: storing 1310 in location 1275
9999 mem: incrementing refcount of 1310: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1273 is 10
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1311
9999 mem: storing 10 in location 1311
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1275 is 1310
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1308
9999 mem: storing 1310 in location 1308
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1274 is 1306
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1313
9999 mem: storing 1306 in location 1313
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1306
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1312
9999 mem: storing 0 in location 1312
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1306
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 5 -> 4
9999 mem: storing 1310 in location 1223
9999 mem: incrementing refcount of 1310: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 8
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 8
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 101
9999 mem: storing 101 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 101
9999 mem: location 1223 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1274
9999 mem: incrementing refcount of 1310: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1314
9999 mem: storing 1314 in location 1275
9999 mem: incrementing refcount of 1314: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: location 1273 is 101
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy to is 1315
9999 mem: storing 101 in location 1315
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1306
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1306
9999 mem: location 1275 is 1314
9999 mem: location 1274 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1312
9999 mem: storing 1314 in location 1312
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: location 1274 is 1310
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy to is 1317
9999 mem: storing 1310 in location 1317
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1310
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy to is 1316
9999 mem: storing 0 in location 1316
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1310
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 5 -> 4
9999 mem: storing 1314 in location 1223
9999 mem: incrementing refcount of 1314: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 9
9999 mem: location 1221 is 10
9999 mem: storing 0 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1220 is 1226
9999 mem: skipping refcount at 1226
9998 run: base address is 1227
9999 mem: location 1222 is 9
9998 run: address to copy is 1237
9998 run: its type is character
9999 mem: location 1237 is 102
9999 mem: storing 102 in location 1225
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1225 is 102
9999 mem: location 1223 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1273
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1274
9999 mem: incrementing refcount of 1314: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1318
9999 mem: storing 1318 in location 1275
9999 mem: incrementing refcount of 1318: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1273 is 102
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy to is 1319
9999 mem: storing 102 in location 1319
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1310
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 0
9999 mem: storing 0 in location 1276
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1310
9999 mem: location 1275 is 1318
9999 mem: location 1274 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy to is 1316
9999 mem: storing 1318 in location 1316
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1274 is 1314
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy to is 1321
9999 mem: storing 1314 in location 1321
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1276 is 0
9999 mem: location 1275 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy to is 1320
9999 mem: storing 0 in location 1320
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1314
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 5 -> 4
9999 mem: storing 1318 in location 1223
9999 mem: incrementing refcount of 1318: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1222 is 10
9999 mem: location 1221 is 10
9999 mem: storing 1 in location 1224
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1219 is 1247
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1247
9999 mem: decrementing refcount of 1247: 2 -> 1
9999 mem: storing 1247 in location 1245
9999 mem: incrementing refcount of 1247: 1 -> 2
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1242 is 1008
9999 mem: location 1245 is 1247
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1322
9999 mem: storing 26 in location 1323
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1326
9999 mem: incrementing refcount of 1247: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1247
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1327
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 105 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1328
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1329
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1330
9999 mem: incrementing refcount of 1266: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1266
9999 mem: storing 1266 in location 1331
9999 mem: incrementing refcount of 1266: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1266
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 7 -> 6
9999 mem: storing 1277 in location 1330
9999 mem: incrementing refcount of 1277: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1332
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1333
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 1
9999 mem: storing 1 in location 1335
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1336
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1266
9999 mem: storing 1266 in location 1337
9999 mem: incrementing refcount of 1266: 6 -> 7
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1264
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 1
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1277
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 1
9999 mem: storing 1 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1336 is 0
9999 mem: storing 1 in location 1340
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1266
9999 mem: decrementing refcount of 1266: 7 -> 6
9999 mem: storing 1266 in location 1337
9999 mem: incrementing refcount of 1266: 6 -> 7
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1330 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1278
9998 run: its type is "character"
9999 mem: location 1278 is 97
9999 mem: storing 97 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1350
9999 mem: storing 10 in location 1351
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 97
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 97
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 97
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 97
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1362
9999 mem: storing 24 in location 1363
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
9990 schedule: print/render/new-editor/scenario_editor-inserts-indent-after-newline
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 97
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 0
9999 mem: storing 10 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 97
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 97
9999 mem: location 1367 is 7
9999 mem: storing 97 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 10
9998 run: address to copy to is 1036
9999 mem: location 1384 is 97
9999 mem: location 1385 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1277
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 7 -> 6
9999 mem: storing 1286 in location 1330
9999 mem: incrementing refcount of 1286: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1266
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 7 -> 8
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 8 -> 7
9999 mem: storing 1277 in location 1331
9999 mem: incrementing refcount of 1277: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1286
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 1
9999 mem: storing 1 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1340
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1330 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1287
9998 run: its type is "character"
9999 mem: location 1287 is 98
9999 mem: storing 98 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 98
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 98
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 98
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 98
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 98
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 1
9999 mem: storing 11 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 98
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 98
9999 mem: location 1367 is 7
9999 mem: storing 98 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 11
9998 run: address to copy to is 1038
9999 mem: location 1384 is 98
9999 mem: location 1385 is 7
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1286
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 7 -> 6
9999 mem: storing 1290 in location 1330
9999 mem: incrementing refcount of 1290: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1277
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 9 -> 8
9999 mem: storing 1286 in location 1331
9999 mem: incrementing refcount of 1286: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1290
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 1
9999 mem: storing 1 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1340
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1330 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 10
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 10
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 10
9999 mem: storing 1 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 1
9999 mem: storing 1 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1343
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1329 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1220
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 10 -> 11
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 2
9999 mem: storing 12 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 4 -> 5
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 12
9998 run: address to copy to is 1040
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 11 -> 10
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 3
9999 mem: storing 13 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 13
9998 run: address to copy to is 1042
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 4
9999 mem: storing 14 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 14
9998 run: address to copy to is 1044
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 5
9999 mem: storing 15 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 7 -> 8
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 15
9998 run: address to copy to is 1046
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 6
9999 mem: storing 16 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 16
9998 run: address to copy to is 1048
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-inserts-indent-after-newline
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 7
9999 mem: storing 17 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 17
9998 run: address to copy to is 1050
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 8
9999 mem: storing 18 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 18
9998 run: address to copy to is 1052
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 9
9999 mem: storing 19 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 19
9998 run: address to copy to is 1054
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1333 is 1
9999 mem: storing 2 in location 1333
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 2
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1264
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 2
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 7 -> 6
9999 mem: storing 1294 in location 1330
9999 mem: incrementing refcount of 1294: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1286
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 9 -> 8
9999 mem: storing 1290 in location 1331
9999 mem: incrementing refcount of 1290: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1294
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1330 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "character"
9999 mem: location 1295 is 32
9999 mem: storing 32 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 32
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 32
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 0
9999 mem: storing 20 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 20
9998 run: address to copy to is 1056
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 7 -> 6
9999 mem: storing 1298 in location 1330
9999 mem: incrementing refcount of 1298: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 9 -> 8
9999 mem: storing 1294 in location 1331
9999 mem: incrementing refcount of 1294: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1298
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1330 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9998 run: its type is "character"
9999 mem: location 1299 is 32
9999 mem: storing 32 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 32
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 32
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 1
9999 mem: storing 21 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 21
9998 run: address to copy to is 1058
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 7 -> 6
9999 mem: storing 1302 in location 1330
9999 mem: incrementing refcount of 1302: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 9 -> 8
9999 mem: storing 1298 in location 1331
9999 mem: incrementing refcount of 1298: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1302
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1330 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is "character"
9999 mem: location 1303 is 99
9999 mem: storing 99 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 99
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 99
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 99
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 99
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 99
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 2
9999 mem: storing 22 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 99
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 99
9999 mem: location 1367 is 7
9999 mem: storing 99 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 22
9998 run: address to copy to is 1060
9999 mem: location 1384 is 99
9999 mem: location 1385 is 7
9999 mem: storing 99 in location 1060
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 7 -> 6
9999 mem: storing 1306 in location 1330
9999 mem: incrementing refcount of 1306: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 9 -> 8
9999 mem: storing 1302 in location 1331
9999 mem: incrementing refcount of 1302: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 2
9999 mem: storing 3 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1306
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1330 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is "character"
9999 mem: location 1307 is 100
9999 mem: storing 100 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 100
9999 mem: storing 0 in location 1356
9990 schedule: get-color/render/new-editor/scenario_editor-inserts-indent-after-newline
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 100
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 100
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 100
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 100
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 3
9999 mem: storing 23 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 100
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 100
9999 mem: location 1367 is 7
9999 mem: storing 100 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 23
9998 run: address to copy to is 1062
9999 mem: location 1384 is 100
9999 mem: location 1385 is 7
9999 mem: storing 100 in location 1062
9999 mem: storing 7 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 7 -> 6
9999 mem: storing 1310 in location 1330
9999 mem: incrementing refcount of 1310: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 9 -> 8
9999 mem: storing 1306 in location 1331
9999 mem: incrementing refcount of 1306: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 3
9999 mem: storing 4 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1310
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1330 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is "character"
9999 mem: location 1311 is 10
9999 mem: storing 10 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 10
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 10
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 10
9999 mem: storing 1 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1334 is 4
9999 mem: location 1329 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1220
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 24 -> 25
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 4
9999 mem: storing 24 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 16 -> 17
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 24
9998 run: address to copy to is 1064
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 25 -> 26
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 5
9999 mem: storing 25 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 17 -> 18
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 25
9998 run: address to copy to is 1066
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 26 -> 25
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 26 -> 27
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 6
9999 mem: storing 26 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 18 -> 19
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 26
9998 run: address to copy to is 1068
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 27 -> 28
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 7
9999 mem: storing 27 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 19 -> 20
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 27
9998 run: address to copy to is 1070
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 8
9999 mem: storing 28 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 20 -> 21
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 28
9998 run: address to copy to is 1072
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 29 -> 28
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 9
9999 mem: storing 29 in location 1379
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 21 -> 22
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 106 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 29
9998 run: address to copy to is 1074
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1333 is 2
9999 mem: storing 3 in location 1333
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 3
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1264
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 3
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 31 -> 30
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 30 -> 31
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 7 -> 6
9999 mem: storing 1314 in location 1330
9999 mem: incrementing refcount of 1314: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1306
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 9 -> 8
9999 mem: storing 1310 in location 1331
9999 mem: incrementing refcount of 1310: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1314
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1330 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is "character"
9999 mem: location 1315 is 101
9999 mem: storing 101 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
9990 schedule: get-color/render/new-editor/scenario_editor-inserts-indent-after-newline
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 101
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 101
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 101
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 101
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 101
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 0
9999 mem: storing 30 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 101
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 101
9999 mem: location 1367 is 7
9999 mem: storing 101 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 30
9998 run: address to copy to is 1076
9999 mem: location 1384 is 101
9999 mem: location 1385 is 7
9999 mem: storing 101 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 7 -> 6
9999 mem: storing 1318 in location 1330
9999 mem: incrementing refcount of 1318: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 9 -> 8
9999 mem: storing 1314 in location 1331
9999 mem: incrementing refcount of 1314: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1318
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1330 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is "character"
9999 mem: location 1319 is 102
9999 mem: storing 102 in location 1341
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1353
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1354
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1353 is 7
9999 mem: storing 1 in location 1355
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1354 is 102
9999 mem: storing 0 in location 1356
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1357
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1354 is 102
9999 mem: storing 0 in location 1359
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1353 is 7
9999 mem: storing 0 in location 1360
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1353 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 102
9999 mem: storing 0 in location 1342
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 102
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1366
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 102
9999 mem: storing 0 in location 1376
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 1
9999 mem: storing 31 in location 1379
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 23 -> 24
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 102
9999 mem: storing 0 in location 1382
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 102
9999 mem: location 1367 is 7
9999 mem: storing 102 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 31
9998 run: address to copy to is 1078
9999 mem: location 1384 is 102
9999 mem: location 1385 is 7
9999 mem: storing 102 in location 1078
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1318
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1284
9999 mem: incrementing refcount of 1318: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1318
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1284 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1320
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1320 is 0
9999 mem: storing 0 in location 1285
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1318: 6 -> 5
9999 mem: storing 0 in location 1330
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1314
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 9 -> 8
9999 mem: storing 1318 in location 1331
9999 mem: incrementing refcount of 1318: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 68
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1330 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1250
9999 mem: storing 0 in location 1250
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1339
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1346
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1339 is 0
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1347
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1348
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1349
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 80
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1333 is 3
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1254
9999 mem: storing 3 in location 1254
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1335 is 1
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1255
9999 mem: storing 1 in location 1255
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1336 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 0 in location 1256
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1337 is 1266
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1266 in location 1251
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1333 is 3
9999 mem: location 1334 is 2
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1247
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 2
9998 run: result 2 is 1008
9998 run: result 3 is 1247
9999 mem: decrementing refcount of 1008: 33 -> 32
9999 mem: storing 1008 in location 1242
9999 mem: incrementing refcount of 1008: 32 -> 33
9999 mem: decrementing refcount of 1247: 3 -> 2
9999 mem: storing 1247 in location 1245
9999 mem: incrementing refcount of 1247: 2 -> 3
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}, {1: "literal", "true": ()}
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1245 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1257
9999 mem: storing 1 in location 1257
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1245 is 1247
9999 mem: location 1242 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1247
9999 mem: storing 1247 in location 2
9999 mem: incrementing refcount of 1247: 3 -> 4
 102 run: assume-console {"\n    left-click 2, 8\n    type [\n]\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {8: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {8: "literal"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n": "literal-string"}
9992 load: after rewriting: type {"\n": "literal-string"}
9999 mem: storing 'left-click' event starting at 1390
9999 mem: storing 'type' event starting at 1394
9999 mem: storing 'text' tag at 1394
9999 mem: storing character 10 at 1395
9999 mem: storing console in 1398
9999 mem: storing console data in 1400
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1398
9999 mem: location 2 is 1247
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1401
9999 mem: storing 17 in location 1402
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 33 -> 34
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1398 in location 1405
9999 mem: incrementing refcount of 1398: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1406
9999 mem: incrementing refcount of 1247: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 1
9999 mem: storing 1 in location 1407
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1408
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1404 is 1008
9999 mem: location 1407 is 1
9999 mem: location 1408 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1264
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 1
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 35 -> 34
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 34 -> 35
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1405 is 1398
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1420
9999 mem: storing 12 in location 1421
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1398 in location 1423
9999 mem: incrementing refcount of 1398: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1423 is 1398
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 0
9999 mem: location 1400 is 1388
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy is 1399
9998 run: its type is "number"
9999 mem: location 1399 is 0
9999 mem: storing 0 in location 1424
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 0
9999 mem: location 1400 is 1388
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy is 1400
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1400 is 1388
9999 mem: storing 1388 in location 1425
9999 mem: incrementing refcount of 1388: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1425 is 1388
9999 mem: skipping refcount at 1388
9999 mem: storing 2 in location 1426
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1424 is 0
9999 mem: location 1426 is 2
9999 mem: storing 0 in location 1427
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1425 is 1388
9999 mem: skipping refcount at 1388
9998 run: base address is 1389
9999 mem: location 1424 is 0
9998 run: address to copy is 1390
9998 run: its type is event
9999 mem: location 1390 is 2
9999 mem: location 1391 is 65513
9999 mem: location 1392 is 2
9999 mem: location 1393 is 8
9999 mem: storing 2 in location 1429
9999 mem: storing 65513 in location 1430
9999 mem: storing 2 in location 1431
9999 mem: storing 8 in location 1432
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1424 is 0
9999 mem: storing 1 in location 1424
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 0
9999 mem: location 1400 is 1388
9999 mem: location 1424 is 1
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy to is 1399
9999 mem: storing 1 in location 1399
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1429 is 2
9999 mem: location 1430 is 65513
9999 mem: location 1431 is 2
9999 mem: location 1432 is 8
9999 mem: location 1423 is 1398
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 8]
9998 run: result 1 is 1398
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1409
9999 mem: storing 65513 in location 1410
9999 mem: storing 2 in location 1411
9999 mem: storing 8 in location 1412
9999 mem: decrementing refcount of 1398: 2 -> 1
9999 mem: storing 1398 in location 1405
9999 mem: incrementing refcount of 1398: 1 -> 2
9999 mem: storing 1 in location 1413
9999 mem: storing 0 in location 1414
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1409 is 2
9999 mem: location 1410 is 65513
9999 mem: location 1411 is 2
9999 mem: location 1412 is 8
9999 mem: storing 65513 in location 1415
9999 mem: storing 2 in location 1416
9999 mem: storing 8 in location 1417
9999 mem: storing 1 in location 1418
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: "touch-event"}
9999 mem: location 1404 is 1008
9999 mem: location 1406 is 1247
9999 mem: location 1415 is 65513
9999 mem: location 1416 is 2
9999 mem: location 1417 is 8
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1434
9999 mem: storing 31 in location 1435
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1437
9999 mem: incrementing refcount of 1008: 35 -> 36
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1438
9999 mem: incrementing refcount of 1247: 5 -> 6
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1439
9999 mem: storing 2 in location 1440
9999 mem: storing 8 in location 1441
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1438 is 1247
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1439 is 65513
9999 mem: location 1440 is 2
9999 mem: location 1441 is 8
9998 run: address to copy is 1440
9998 run: its type is "number"
9999 mem: location 1440 is 2
9999 mem: storing 2 in location 1442
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1442 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1439 is 65513
9999 mem: location 1440 is 2
9999 mem: location 1441 is 8
9998 run: address to copy is 1441
9998 run: its type is "number"
9999 mem: location 1441 is 8
9999 mem: storing 8 in location 1443
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1444
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1443 is 8
9999 mem: location 1444 is 0
9999 mem: storing 0 in location 1445
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1445 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1446
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1443 is 8
9999 mem: location 1446 is 9
9999 mem: storing 0 in location 1447
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 1
9999 mem: storing 1 in location 1448
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1449
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1450
9999 mem: incrementing refcount of 1266: 7 -> 8
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1437 is 1008
9999 mem: location 1438 is 1247
9999 mem: location 1442 is 2
9999 mem: location 1443 is 8
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1322
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 36 -> 37
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1326
9999 mem: incrementing refcount of 1247: 6 -> 7
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1327
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1328
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1247
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1329
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1330
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 37 -> 38
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 107 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1331
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1332
9999 mem: incrementing refcount of 1266: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1266
9999 mem: storing 1266 in location 1333
9999 mem: incrementing refcount of 1266: 9 -> 10
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 11 -> 10
9999 mem: storing 1277 in location 1332
9999 mem: incrementing refcount of 1277: 9 -> 10
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1334
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1335
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 1
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1327 is 2
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1255
9999 mem: storing 2 in location 1255
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1327 is 2
9999 mem: storing 2 in location 1336
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1328 is 8
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 8 in location 1256
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1328 is 8
9999 mem: storing 8 in location 1337
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 8
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1266
9999 mem: storing 1266 in location 1338
9999 mem: incrementing refcount of 1266: 10 -> 11
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1277
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1332 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1278
9998 run: its type is "character"
9999 mem: location 1278 is 97
9999 mem: storing 97 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 97
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 0
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 11 -> 10
9999 mem: storing 1286 in location 1332
9999 mem: incrementing refcount of 1286: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 12 -> 11
9999 mem: storing 1277 in location 1333
9999 mem: incrementing refcount of 1277: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 0
9999 mem: storing 1 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1286
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1332 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1287
9998 run: its type is "character"
9999 mem: location 1287 is 98
9999 mem: storing 98 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 98
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 1
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1286
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 11 -> 10
9999 mem: storing 1290 in location 1332
9999 mem: incrementing refcount of 1290: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 13 -> 12
9999 mem: storing 1286 in location 1333
9999 mem: incrementing refcount of 1286: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 1
9999 mem: storing 2 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1332 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 10
9999 mem: storing 1 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1335
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 11 -> 10
9999 mem: storing 1294 in location 1332
9999 mem: incrementing refcount of 1294: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1286
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 13 -> 12
9999 mem: storing 1290 in location 1333
9999 mem: incrementing refcount of 1290: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1294
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 0
9999 mem: location 1337 is 8
9999 mem: storing 0 in location 1341
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1332 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "character"
9999 mem: location 1295 is 32
9999 mem: storing 32 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 32
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 0
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1294
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 11 -> 10
9999 mem: storing 1298 in location 1332
9999 mem: incrementing refcount of 1298: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 13 -> 12
9999 mem: storing 1294 in location 1333
9999 mem: incrementing refcount of 1294: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 0
9999 mem: storing 1 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1298
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 1
9999 mem: location 1337 is 8
9999 mem: storing 0 in location 1341
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1332 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9998 run: its type is "character"
9999 mem: location 1299 is 32
9999 mem: storing 32 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 32
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 1
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1298
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 11 -> 10
9999 mem: storing 1302 in location 1332
9999 mem: incrementing refcount of 1302: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1294
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 13 -> 12
9999 mem: storing 1298 in location 1333
9999 mem: incrementing refcount of 1298: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 1
9999 mem: storing 2 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1302
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 2
9999 mem: location 1337 is 8
9999 mem: storing 0 in location 1341
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1332 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is "character"
9999 mem: location 1303 is 99
9999 mem: storing 99 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 99
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 2
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 11 -> 10
9999 mem: storing 1306 in location 1332
9999 mem: incrementing refcount of 1306: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1298
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 13 -> 12
9999 mem: storing 1302 in location 1333
9999 mem: incrementing refcount of 1302: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 2
9999 mem: storing 3 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1306
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 3
9999 mem: location 1337 is 8
9999 mem: storing 0 in location 1341
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1332 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is "character"
9999 mem: location 1307 is 100
9999 mem: storing 100 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 100
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 3
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 11 -> 10
9999 mem: storing 1310 in location 1332
9999 mem: incrementing refcount of 1310: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 13 -> 12
9999 mem: storing 1306 in location 1333
9999 mem: incrementing refcount of 1306: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 3
9999 mem: storing 4 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1310
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 4
9999 mem: location 1337 is 8
9999 mem: storing 0 in location 1341
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1332 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is "character"
9999 mem: location 1311 is 10
9999 mem: storing 10 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 10
9999 mem: storing 1 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 4
9999 mem: location 1337 is 8
9999 mem: storing 1 in location 1344
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 1
9998 run: jump-unless fell through
 106 run: {cursor-column: "number"} <- copy {column: "number"}
9999 mem: location 1335 is 4
9999 mem: storing 4 in location 1337
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 8
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1337 is 4
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 4 in location 1256
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1306
9999 mem: decrementing refcount of 1266: 11 -> 10
9999 mem: storing 1306 in location 1338
9999 mem: incrementing refcount of 1306: 12 -> 13
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1266
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1338 is 1306
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1306 in location 1251
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1334 is 2
9999 mem: storing 3 in location 1334
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1335
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 11 -> 10
9999 mem: storing 1314 in location 1332
9999 mem: incrementing refcount of 1314: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1306: 14 -> 13
9999 mem: storing 1310 in location 1333
9999 mem: incrementing refcount of 1310: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1314
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1332 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is "character"
9999 mem: location 1315 is 101
9999 mem: storing 101 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 101
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 0
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 11 -> 10
9999 mem: storing 1318 in location 1332
9999 mem: incrementing refcount of 1318: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 13 -> 12
9999 mem: storing 1314 in location 1333
9999 mem: incrementing refcount of 1314: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 0
9999 mem: storing 1 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 1318
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1331 is 10
9999 mem: storing 0 in location 1339
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1332 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1332 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is "character"
9999 mem: location 1319 is 102
9999 mem: storing 102 in location 1342
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1342 is 102
9999 mem: storing 0 in location 1343
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1335 is 1
9999 mem: location 1330 is 9
9999 mem: storing 0 in location 1345
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1284
9999 mem: incrementing refcount of 1318: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1318
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1284 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1320
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1320 is 0
9999 mem: storing 0 in location 1285
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1318: 10 -> 9
9999 mem: storing 0 in location 1332
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 13 -> 12
9999 mem: storing 1318 in location 1333
9999 mem: incrementing refcount of 1318: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1335 is 1
9999 mem: storing 2 in location 1335
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1335 is 2
9999 mem: location 1337 is 4
9999 mem: storing 1 in location 1346
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1340 is 0
9999 mem: location 1346 is 1
9999 mem: storing 0 in location 1347
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1348
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1349
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1326 is 1247
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1247
9999 mem: decrementing refcount of 1247: 7 -> 6
9999 mem: storing 1247 in location 1438
9999 mem: incrementing refcount of 1247: 6 -> 7
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1451
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1452
9999 mem: incrementing refcount of 1266: 10 -> 11
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 2
9999 mem: storing 2 in location 1453
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1438 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 4
9999 mem: storing 4 in location 1454
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 42
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1350
9999 mem: storing 1350 in location 1456
9999 mem: incrementing refcount of 1350: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1450 is 1266
9999 mem: location 1453 is 2
9999 mem: location 1454 is 4
9999 mem: location 1452 is 1266
9999 mem: location 1451 is 0
9999 mem: location 1456 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1456 is 1350
9999 mem: skipping refcount at 1350
9999 mem: storing 1 in location 1351
9999 mem: storing 1 in location 1352
9999 mem: storing 0 in location 1353
9999 mem: storing 1266 in location 1354
9999 mem: storing 2 in location 1355
9999 mem: storing 4 in location 1356
9999 mem: storing 1266 in location 1357
9999 mem: storing 0 in location 1358
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1438 is 1247
9999 mem: location 1456 is 1350
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1273
9999 mem: incrementing refcount of 1247: 7 -> 8
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1274
9999 mem: incrementing refcount of 1350: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1258 is 0
9999 mem: storing 0 in location 1275
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1274 is 1350
9999 mem: location 1275 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1263
9999 mem: incrementing refcount of 1350: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1467
9999 mem: storing 1467 in location 1265
9999 mem: incrementing refcount of 1467: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1263 is 1350
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1467
9999 mem: skipping refcount at 1467
9999 mem: location 1265 is 1467
9999 mem: skipping refcount at 1467
9999 mem: storing 1350 in location 1468
9999 mem: storing 0 in location 1469
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1265 is 1467
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1467
9999 mem: storing 1467 in location 1275
9999 mem: incrementing refcount of 1467: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1275 is 1467
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1258
9999 mem: storing 1467 in location 1258
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1276
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1276
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1276 is 0
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1259
9999 mem: storing 0 in location 1259
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1273 is 1247
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1247
9999 mem: decrementing refcount of 1247: 8 -> 7
9999 mem: storing 1247 in location 1438
9999 mem: incrementing refcount of 1247: 7 -> 8
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1438 is 1247
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 2
9999 mem: storing 2 in location 1407
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 4
9999 mem: storing 4 in location 1408
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1404 is 1008
9999 mem: location 1407 is 2
9999 mem: location 1408 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1264
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1265
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 2
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 4
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 38 -> 39
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1405 is 1398
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1420
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1398 in location 1423
9999 mem: incrementing refcount of 1398: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1423 is 1398
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1388
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy is 1399
9998 run: its type is "number"
9999 mem: location 1399 is 1
9999 mem: storing 1 in location 1424
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1388
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy is 1400
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1400 is 1388
9999 mem: storing 1388 in location 1425
9999 mem: incrementing refcount of 1388: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1425 is 1388
9999 mem: skipping refcount at 1388
9999 mem: storing 2 in location 1426
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1424 is 1
9999 mem: location 1426 is 2
9999 mem: storing 0 in location 1427
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1425 is 1388
9999 mem: skipping refcount at 1388
9998 run: base address is 1389
9999 mem: location 1424 is 1
9998 run: address to copy is 1394
9998 run: its type is event
9999 mem: location 1394 is 0
9999 mem: location 1395 is 10
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: storing 0 in location 1429
9999 mem: storing 10 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1424 is 1
9999 mem: storing 2 in location 1424
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 1
9999 mem: location 1400 is 1388
9999 mem: location 1424 is 2
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy to is 1399
9999 mem: storing 2 in location 1399
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1429 is 0
9999 mem: location 1430 is 10
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: location 1423 is 1398
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 10, 0, 0]
9998 run: result 1 is 1398
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1409
9999 mem: storing 10 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: decrementing refcount of 1398: 3 -> 2
9999 mem: storing 1398 in location 1405
9999 mem: incrementing refcount of 1398: 2 -> 3
9999 mem: storing 1 in location 1413
9999 mem: storing 0 in location 1414
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1409 is 0
9999 mem: location 1410 is 10
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1418
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1404 is 1008
9999 mem: location 1406 is 1247
9999 mem: location 1409 is 0
9999 mem: location 1410 is 10
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 mem: new alloc: 1470
9999 mem: storing 102 in location 1471
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1473
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1474
9999 mem: incrementing refcount of 1247: 8 -> 9
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1475
9999 mem: storing 10 in location 1476
9999 mem: storing 0 in location 1477
9999 mem: storing 0 in location 1478
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1479
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1474 is 1247
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1473 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1285
 106 run: return {width: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1480
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1473 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 41 -> 42
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 106 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1481
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1482
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1483
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1306
9999 mem: storing 1306 in location 1484
9999 mem: incrementing refcount of 1306: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 2
9999 mem: storing 2 in location 1485
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 4
9999 mem: storing 4 in location 1486
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1485 is 2
9999 mem: storing 2 in location 1487
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1486 is 4
9999 mem: storing 4 in location 1488
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1475 is 0
9999 mem: location 1476 is 10
9999 mem: location 1477 is 0
9999 mem: location 1478 is 0
9999 mem: storing 10 in location 1489
9999 mem: storing 1 in location 1490
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1491
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1529
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1533
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 0
9998 run: jumping to instruction 165
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1544
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 204
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1545
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1545 is 0
9998 run: jumping to instruction 225
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1548
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1548 is 0
9998 run: jumping to instruction 247
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1549
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 283
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1550
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1550 is 0
9998 run: jumping to instruction 319
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1551
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jumping to instruction 359
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1489 is 10
9999 mem: storing 0 in location 1554
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1554 is 0
9998 run: jumping to instruction 397
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1489 is 10
9999 mem: storing 1 in location 1558
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1558 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1485 is 2
9999 mem: storing 2 in location 1535
 105 run: {cursor-column-before: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1486 is 4
9999 mem: storing 4 in location 1536
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1537
9999 mem: incrementing refcount of 1266: 11 -> 12
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1306
9999 mem: storing 1306 in location 1555
9999 mem: incrementing refcount of 1306: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")} <- insert-new-line-and-indent {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}
9999 mem: location 1474 is 1247
9999 mem: location 1473 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1574
9999 mem: storing 21 in location 1575
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1577
9999 mem: incrementing refcount of 1247: 9 -> 10
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1578
9999 mem: incrementing refcount of 1008: 42 -> 43
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 2
9999 mem: storing 2 in location 1579
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 4
9999 mem: storing 4 in location 1580
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1306
9999 mem: storing 1306 in location 1581
9999 mem: incrementing refcount of 1306: 15 -> 16
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1582
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1583
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1578 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 107 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1584
 106 run: insert_3 {10: "literal", "newline": ()}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1581 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1273
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1274
9999 mem: incrementing refcount of 1306: 16 -> 17
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1597
9999 mem: storing 1597 in location 1275
9999 mem: incrementing refcount of 1597: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 0
9999 mem: location 1599 is 0
9999 mem: location 1600 is 0
9999 mem: location 1273 is 10
9999 mem: location 1275 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy to is 1598
9999 mem: storing 10 in location 1598
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1310
9999 mem: storing 1310 in location 1276
9999 mem: incrementing refcount of 1310: 12 -> 13
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1310
9999 mem: location 1309 is 1302
9999 mem: location 1275 is 1597
9999 mem: location 1274 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1308
9999 mem: storing 1597 in location 1308
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 0
9999 mem: location 1600 is 0
9999 mem: location 1274 is 1306
9999 mem: location 1275 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy to is 1600
9999 mem: storing 1306 in location 1600
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 0
9999 mem: location 1600 is 1306
9999 mem: location 1276 is 1310
9999 mem: location 1275 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy to is 1599
9999 mem: storing 1310 in location 1599
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 1310
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1276 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1306
9999 mem: location 1275 is 1597
9999 mem: location 1276 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1313
9999 mem: storing 1597 in location 1313
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1306
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1581 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1597
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1597
9999 mem: storing 1597 in location 1285
9999 mem: incrementing refcount of 1597: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1597
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1597
9999 mem: decrementing refcount of 1306: 18 -> 17
9999 mem: storing 1597 in location 1581
9999 mem: incrementing refcount of 1597: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1306
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1581 is 1597
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1597 in location 1251
 106 run: {cursor-row: "number"} <- add {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1579 is 2
9999 mem: storing 3 in location 1579
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1597
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 2
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1579 is 3
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1255
9999 mem: storing 3 in location 1255
 106 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1582 is 0
9999 mem: storing 0 in location 1580
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1597
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1580 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 0 in location 1256
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: "number"}, {screen-height: "number"}
9999 mem: location 1579 is 3
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1585
 106 run: jump-unless {below-screen?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 35
 106 run: {indent?: "boolean"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1597
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1257
9998 run: its type is "boolean"
9999 mem: location 1257 is 1
9999 mem: storing 1 in location 1591
 106 run: jump-if {indent?: "boolean"}, {1: "offset"}
9999 mem: location 1591 is 1
9998 run: jumping to instruction 39
 106 run: {d: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1597
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1577 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1266
9999 mem: storing 1266 in location 1592
9999 mem: incrementing refcount of 1266: 12 -> 13
 106 run: {end-of-previous-line: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1581 is 1597
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1284
9999 mem: incrementing refcount of 1597: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1597
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1310
9999 mem: location 1600 is 1306
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1600
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1600 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 17 -> 18
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: storing 1306 in location 1593
9999 mem: incrementing refcount of 1306: 18 -> 19
 106 run: {indent: "number"} <- line-indent {end-of-previous-line: ("address" "shared" "duplex-list" "character")}, {d: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1593 is 1306
9999 mem: location 1592 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1219
9999 mem: incrementing refcount of 1306: 19 -> 20
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1220
9999 mem: incrementing refcount of 1266: 13 -> 14
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1221
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1219 is 1306
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1306
9999 mem: location 1220 is 1266
9999 mem: storing 0 in location 1222
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1306
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1597
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1306: 21 -> 20
9999 mem: storing 1302 in location 1219
9999 mem: incrementing refcount of 1302: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1219 is 1302
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1302
9999 mem: location 1220 is 1266
9999 mem: storing 0 in location 1222
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1219 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1219 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is "character"
9999 mem: location 1303 is 99
9999 mem: storing 99 in location 1223
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1223 is 99
9999 mem: storing 0 in location 1224
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {is-space?: "boolean"} <- equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1223 is 99
9999 mem: storing 0 in location 1225
 107 run: jump-unless {is-space?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 21
 107 run: jump-if {is-space?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1221
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1302
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1302: 15 -> 14
9999 mem: storing 1298 in location 1219
9999 mem: incrementing refcount of 1298: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1219 is 1298
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1298
9999 mem: location 1220 is 1266
9999 mem: storing 0 in location 1222
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1219 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1219 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9998 run: its type is "character"
9999 mem: location 1299 is 32
9999 mem: storing 32 in location 1223
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1223 is 32
9999 mem: storing 0 in location 1224
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {is-space?: "boolean"} <- equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1223 is 32
9999 mem: storing 1 in location 1225
 107 run: jump-unless {is-space?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1221 is 0
9999 mem: storing 1 in location 1221
 107 run: jump-if {is-space?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 25
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1298
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1298: 15 -> 14
9999 mem: storing 1294 in location 1219
9999 mem: incrementing refcount of 1294: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1219 is 1294
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1294
9999 mem: location 1220 is 1266
9999 mem: storing 0 in location 1222
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1219 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1219 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "character"
9999 mem: location 1295 is 32
9999 mem: storing 32 in location 1223
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1223 is 32
9999 mem: storing 0 in location 1224
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {is-space?: "boolean"} <- equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1223 is 32
9999 mem: storing 1 in location 1225
 107 run: jump-unless {is-space?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1221 is 1
9999 mem: storing 2 in location 1221
 107 run: jump-if {is-space?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 25
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1294
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1297
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1297 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1294: 15 -> 14
9999 mem: storing 1290 in location 1219
9999 mem: incrementing refcount of 1290: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1219 is 1290
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1290
9999 mem: location 1220 is 1266
9999 mem: storing 0 in location 1222
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1219 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1219 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1223
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1223 is 10
9999 mem: storing 1 in location 1224
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 1
9998 run: jumping to instruction 27
 107 run: reply {result: "number"}
9999 mem: location 1221 is 2
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2
9999 mem: storing 2 in location 1594
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1595
 106 run: {indent-done?: "boolean"} <- greater-or-equal {i: "number"}, {indent: "number"}
9999 mem: location 1595 is 0
9999 mem: location 1594 is 2
9999 mem: storing 0 in location 1596
 106 run: jump-if {indent-done?: "boolean"}, {: "offset"}
9999 mem: location 1596 is 0
9998 run: jump-if fell through
 106 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {32: "literal", "space": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1577 is 1247
9999 mem: location 1578 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1434
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1437
9999 mem: incrementing refcount of 1247: 10 -> 11
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1438
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1439
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1597
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1597
9999 mem: storing 1597 in location 1440
9999 mem: incrementing refcount of 1597: 4 -> 5
 107 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1438 is 32
9999 mem: location 1440 is 1597
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 108 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1273
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1274
9999 mem: incrementing refcount of 1597: 5 -> 6
 108 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1601
9999 mem: storing 1601 in location 1275
9999 mem: incrementing refcount of 1601: 0 -> 1
 108 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1273 is 32
9999 mem: location 1275 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy to is 1602
9999 mem: storing 32 in location 1602
 108 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1310
9999 mem: location 1600 is 1306
9999 mem: location 1274 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1599
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1599 is 1310
9999 mem: storing 1310 in location 1276
9999 mem: incrementing refcount of 1310: 13 -> 14
 108 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1310
9999 mem: location 1600 is 1306
9999 mem: location 1275 is 1601
9999 mem: location 1274 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy to is 1599
9999 mem: storing 1601 in location 1599
 108 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1274 is 1597
9999 mem: location 1275 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy to is 1604
9999 mem: storing 1597 in location 1604
 108 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 0
9999 mem: location 1604 is 1597
9999 mem: location 1276 is 1310
9999 mem: location 1275 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy to is 1603
9999 mem: storing 1310 in location 1603
 108 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 1310
9998 run: jumping to instruction 11
 108 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1276 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1597
9999 mem: location 1275 is 1601
9999 mem: location 1276 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1313
9999 mem: storing 1601 in location 1313
 108 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1597
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 7
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1440 is 1597
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1284
9999 mem: incrementing refcount of 1597: 6 -> 7
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1597
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1601
9999 mem: location 1600 is 1306
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1599
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1599 is 1601
9999 mem: storing 1601 in location 1285
9999 mem: incrementing refcount of 1601: 1 -> 2
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1601
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1601
9999 mem: decrementing refcount of 1597: 7 -> 6
9999 mem: storing 1601 in location 1440
9999 mem: incrementing refcount of 1601: 2 -> 3
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1597
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1440 is 1601
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1601 in location 1251
 107 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 1441
 107 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1442
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1443
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1444
 107 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1441 is 3
9999 mem: storing 3 in location 1445
 107 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1442 is 0
9999 mem: storing 0 in location 1446
 107 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1439 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 45 -> 46
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1285
 108 run: return {width: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1447
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1439 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 46 -> 47
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 108 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1448
 107 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1444 is 9
9999 mem: storing 8 in location 1449
 107 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1442 is 0
9999 mem: location 1449 is 8
9999 mem: storing 0 in location 1450
 107 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1450 is 0
9998 run: jumping to instruction 45
 107 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1442 is 0
9999 mem: storing 1 in location 1442
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1442 is 1
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 1 in location 1256
 107 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1440 is 1601
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1601 in location 1284
9999 mem: incrementing refcount of 1601: 3 -> 4
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1601
9998 run: jumping to instruction 4
9990 schedule: next_2/insert-at-cursor/insert-new-line-and-indent/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1310
9999 mem: location 1604 is 1597
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1603
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1603 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 14 -> 15
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1310
9999 mem: storing 1310 in location 1457
9999 mem: incrementing refcount of 1310: 15 -> 16
 107 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1457 is 1310
9999 mem: storing 0 in location 1458
 107 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 61
 107 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1457 is 1310
9998 run: jump-unless fell through
 107 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1442 is 1
9999 mem: location 1447 is 10
9999 mem: storing 0 in location 1461
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1461 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1440 is 1601
9999 mem: storing 1601 in location 1463
9999 mem: incrementing refcount of 1601: 4 -> 5
 107 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1439 is 1008
9999 mem: location 1445 is 3
9999 mem: location 1446 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 47 -> 48
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1264
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 3
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
 107 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1446 is 0
9999 mem: storing 0 in location 1464
 107 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1456
 107 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1464 is 0
9999 mem: location 1444 is 9
9999 mem: storing 0 in location 1461
 107 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1461 is 0
9998 run: jumping to instruction 74
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1463 is 1601
9998 run: jump-unless fell through
 107 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1463 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1310
9999 mem: location 1604 is 1597
9999 mem: location 1463 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1602
9998 run: its type is "character"
9999 mem: location 1602 is 32
9999 mem: storing 32 in location 1465
 107 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1465 is 32
9999 mem: storing 0 in location 1466
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 0
9998 run: jump-if fell through
 107 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1439 is 1008
9999 mem: location 1465 is 32
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 48 -> 49
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jump-if fell through
 108 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1367
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 0
9999 mem: storing 30 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 24 -> 25
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 30
9998 run: address to copy to is 1076
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
 107 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1464 is 0
9999 mem: storing 1 in location 1464
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1463 is 1601
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1601 in location 1284
9999 mem: incrementing refcount of 1601: 5 -> 6
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1601
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1310
9999 mem: location 1604 is 1597
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1603
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1603 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 16 -> 17
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1601: 6 -> 5
9999 mem: storing 1310 in location 1463
9999 mem: incrementing refcount of 1310: 17 -> 18
 107 run: jump {: "offset"}
9998 run: jumping to instruction 70
 107 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1456
 107 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1464 is 1
9999 mem: location 1444 is 9
9999 mem: storing 0 in location 1461
 107 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1461 is 0
9998 run: jumping to instruction 74
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1463 is 1310
9998 run: jump-unless fell through
 107 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1463 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1601
9999 mem: location 1463 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is "character"
9999 mem: location 1311 is 10
9999 mem: storing 10 in location 1465
 107 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1465 is 10
9999 mem: storing 1 in location 1466
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 1
9998 run: jumping to instruction 82
 107 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1456
 107 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1247
9999 mem: location 1439 is 1008
9999 mem: location 1456 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1247
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1247: 11 -> 10
9999 mem: storing 1247 in location 1577
9999 mem: incrementing refcount of 1247: 10 -> 11
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1578
9999 mem: incrementing refcount of 1008: 48 -> 49
9999 mem: storing 0 in location 1590
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1595 is 0
9999 mem: storing 1 in location 1595
 106 run: jump {: "offset"}
9998 run: jumping to instruction 44
 106 run: {indent-done?: "boolean"} <- greater-or-equal {i: "number"}, {indent: "number"}
9999 mem: location 1595 is 1
9999 mem: location 1594 is 2
9999 mem: storing 0 in location 1596
 106 run: jump-if {indent-done?: "boolean"}, {: "offset"}
9999 mem: location 1596 is 0
9998 run: jump-if fell through
 106 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {32: "literal", "space": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1577 is 1247
9999 mem: location 1578 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1434
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1437
9999 mem: incrementing refcount of 1247: 11 -> 12
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1438
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1439
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1601
9999 mem: storing 1601 in location 1440
9999 mem: incrementing refcount of 1601: 5 -> 6
 107 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1438 is 32
9999 mem: location 1440 is 1601
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 108 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1273
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1601 in location 1274
9999 mem: incrementing refcount of 1601: 6 -> 7
 108 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1605
9999 mem: storing 1605 in location 1275
9999 mem: incrementing refcount of 1605: 0 -> 1
 108 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1275 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 0
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: location 1273 is 32
9999 mem: location 1275 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy to is 1606
9999 mem: storing 32 in location 1606
 108 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1274 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1310
9999 mem: location 1604 is 1597
9999 mem: location 1274 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1603
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1603 is 1310
9999 mem: storing 1310 in location 1276
9999 mem: incrementing refcount of 1310: 18 -> 19
 108 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1274 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1310
9999 mem: location 1604 is 1597
9999 mem: location 1275 is 1605
9999 mem: location 1274 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy to is 1603
9999 mem: storing 1605 in location 1603
 108 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: location 1274 is 1601
9999 mem: location 1275 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy to is 1608
9999 mem: storing 1601 in location 1608
 108 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 0
9999 mem: location 1608 is 1601
9999 mem: location 1276 is 1310
9999 mem: location 1275 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy to is 1607
9999 mem: storing 1310 in location 1607
 108 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1276 is 1310
9998 run: jumping to instruction 11
 108 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1276 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1601
9999 mem: location 1275 is 1605
9999 mem: location 1276 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy to is 1313
9999 mem: storing 1605 in location 1313
 108 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1274 is 1601
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 7
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1440 is 1601
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1601 in location 1284
9999 mem: incrementing refcount of 1601: 7 -> 8
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1601
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1605
9999 mem: location 1604 is 1597
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1603
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1603 is 1605
9999 mem: storing 1605 in location 1285
9999 mem: incrementing refcount of 1605: 1 -> 2
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1605
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1605
9999 mem: decrementing refcount of 1601: 8 -> 7
9999 mem: storing 1605 in location 1440
9999 mem: incrementing refcount of 1605: 2 -> 3
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1601
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1440 is 1605
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1605 in location 1251
 107 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 1441
 107 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 1
9999 mem: storing 1 in location 1442
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1443
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1444
 107 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1441 is 3
9999 mem: storing 3 in location 1445
 107 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1442 is 1
9999 mem: storing 1 in location 1446
 107 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1439 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 50 -> 51
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1285
 108 run: return {width: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1447
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1439 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 51 -> 52
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 108 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1448
 107 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1444 is 9
9999 mem: storing 8 in location 1449
 107 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1442 is 1
9999 mem: location 1449 is 8
9999 mem: storing 0 in location 1450
 107 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1450 is 0
9998 run: jumping to instruction 45
 107 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1442 is 1
9999 mem: storing 2 in location 1442
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1442 is 2
9999 mem: location 1437 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 2 in location 1256
 107 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1440 is 1605
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1284
9999 mem: incrementing refcount of 1605: 3 -> 4
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1605
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1607
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1607 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 19 -> 20
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1310
9999 mem: storing 1310 in location 1457
9999 mem: incrementing refcount of 1310: 20 -> 21
 107 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1457 is 1310
9999 mem: storing 0 in location 1458
 107 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 61
 107 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1457 is 1310
9998 run: jump-unless fell through
 107 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1442 is 2
9999 mem: location 1447 is 10
9999 mem: storing 0 in location 1461
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1461 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1440 is 1605
9999 mem: storing 1605 in location 1463
9999 mem: incrementing refcount of 1605: 4 -> 5
 107 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1439 is 1008
9999 mem: location 1445 is 3
9999 mem: location 1446 is 1
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 52 -> 53
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1264
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1265
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 3
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
 107 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1446 is 1
9999 mem: storing 1 in location 1464
 107 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1456
 107 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1464 is 1
9999 mem: location 1444 is 9
9999 mem: storing 0 in location 1461
 107 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1461 is 0
9998 run: jumping to instruction 74
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1463 is 1605
9998 run: jump-unless fell through
 107 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1463 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1463 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1606
9998 run: its type is "character"
9999 mem: location 1606 is 32
9999 mem: storing 32 in location 1465
 107 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1465 is 32
9999 mem: storing 0 in location 1466
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 0
9998 run: jump-if fell through
 107 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1439 is 1008
9999 mem: location 1465 is 32
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 53 -> 54
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jump-if fell through
 108 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1367
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 1
9999 mem: storing 31 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 25 -> 26
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 31
9998 run: address to copy to is 1078
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
 107 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1464 is 1
9999 mem: storing 2 in location 1464
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1463 is 1605
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1284
9999 mem: incrementing refcount of 1605: 5 -> 6
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1605
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1607
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1607 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 21 -> 22
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1605: 6 -> 5
9999 mem: storing 1310 in location 1463
9999 mem: incrementing refcount of 1310: 22 -> 23
 107 run: jump {: "offset"}
9998 run: jumping to instruction 70
 107 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1456
 107 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1464 is 2
9999 mem: location 1444 is 9
9999 mem: storing 0 in location 1461
 107 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1461 is 0
9998 run: jumping to instruction 74
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1463 is 1310
9998 run: jump-unless fell through
 107 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1463 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1605
9999 mem: location 1463 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is "character"
9999 mem: location 1311 is 10
9999 mem: storing 10 in location 1465
 107 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1465 is 10
9999 mem: storing 1 in location 1466
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 1
9998 run: jumping to instruction 82
 107 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1456
 107 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1247
9999 mem: location 1439 is 1008
9999 mem: location 1456 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1247
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1247: 12 -> 11
9999 mem: storing 1247 in location 1577
9999 mem: incrementing refcount of 1247: 11 -> 12
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1578
9999 mem: incrementing refcount of 1008: 53 -> 54
9999 mem: storing 0 in location 1590
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1595 is 1
9999 mem: storing 2 in location 1595
 106 run: jump {: "offset"}
9998 run: jumping to instruction 44
 106 run: {indent-done?: "boolean"} <- greater-or-equal {i: "number"}, {indent: "number"}
9999 mem: location 1595 is 2
9999 mem: location 1594 is 2
9999 mem: storing 1 in location 1596
 106 run: jump-if {indent-done?: "boolean"}, {: "offset"}
9999 mem: location 1596 is 1
9998 run: jumping to instruction 49
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1577 is 1247
9999 mem: location 1578 is 1008
9999 mem: location 1590 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1247
9999 mem: decrementing refcount of 1247: 12 -> 11
9999 mem: storing 1247 in location 1474
9999 mem: incrementing refcount of 1247: 11 -> 12
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1539
9999 mem: incrementing refcount of 1266: 14 -> 15
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 1485
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 1486
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1555 is 1306
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1597
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1597
9999 mem: storing 1597 in location 1285
9999 mem: incrementing refcount of 1597: 6 -> 7
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1597
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1597
9999 mem: storing 1597 in location 1528
9999 mem: incrementing refcount of 1597: 7 -> 8
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1474 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1605
9999 mem: decrementing refcount of 1306: 21 -> 20
9999 mem: storing 1605 in location 1484
9999 mem: incrementing refcount of 1605: 5 -> 6
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1484 is 1605
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1284
9999 mem: incrementing refcount of 1605: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1605
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1607
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1607 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 23 -> 24
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1310
9999 mem: storing 1310 in location 1557
9999 mem: incrementing refcount of 1310: 24 -> 25
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1609
9999 mem: storing 1609 in location 1493
9999 mem: incrementing refcount of 1609: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {0: "literal", "never-coalesce": ()}
9999 mem: location 1535 is 2
9999 mem: location 1536 is 4
9999 mem: location 1537 is 1266
9999 mem: location 1485 is 3
9999 mem: location 1486 is 3
9999 mem: location 1539 is 1266
9999 mem: location 1528 is 1597
9999 mem: location 1557 is 1310
9999 mem: location 1493 is 1609
9999 mem: skipping refcount at 1609
9999 mem: location 1493 is 1609
9999 mem: skipping refcount at 1609
9999 mem: storing 0 in location 1610
9999 mem: storing 2 in location 1611
9999 mem: storing 4 in location 1612
9999 mem: storing 1266 in location 1613
9999 mem: storing 3 in location 1614
9999 mem: storing 3 in location 1615
9999 mem: storing 1266 in location 1616
9999 mem: storing 1597 in location 1617
9999 mem: storing 1310 in location 1618
9999 mem: storing 0 in location 1619
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1474 is 1247
9999 mem: location 1493 is 1609
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1270
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1273
9999 mem: incrementing refcount of 1247: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1609 in location 1274
9999 mem: incrementing refcount of 1609: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1258 is 1467
9999 mem: storing 1467 in location 1275
9999 mem: incrementing refcount of 1467: 2 -> 3
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1274 is 1609
9999 mem: location 1275 is 1467
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1609 in location 1263
9999 mem: incrementing refcount of 1609: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1467 in location 1264
9999 mem: incrementing refcount of 1467: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1621
9999 mem: storing 1621 in location 1265
9999 mem: incrementing refcount of 1621: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1263 is 1609
9999 mem: location 1264 is 1467
9999 mem: location 1265 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1265 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 1609 in location 1622
9999 mem: storing 1467 in location 1623
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1265 is 1621
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1621
9999 mem: decrementing refcount of 1467: 4 -> 3
9999 mem: storing 1621 in location 1275
9999 mem: incrementing refcount of 1621: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1467
9999 mem: location 1259 is 0
9999 mem: location 1275 is 1621
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1258
9999 mem: storing 1621 in location 1258
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1276
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1276
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1276 is 0
9999 mem: location 1273 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1259
9999 mem: storing 0 in location 1259
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1273 is 1247
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1247
9999 mem: decrementing refcount of 1247: 13 -> 12
9999 mem: storing 1247 in location 1474
9999 mem: incrementing refcount of 1247: 12 -> 13
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1479
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1473 is 1008
9999 mem: location 1474 is 1247
9999 mem: location 1479 is 1
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1247
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 53 -> 54
9999 mem: decrementing refcount of 1247: 13 -> 12
9999 mem: storing 1247 in location 1406
9999 mem: incrementing refcount of 1247: 12 -> 13
9999 mem: storing 1 in location 1419
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1404 is 1008
9999 mem: location 1406 is 1247
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1238
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1241
9999 mem: incrementing refcount of 1008: 54 -> 55
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1242
9999 mem: incrementing refcount of 1247: 13 -> 14
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1242 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1242 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1243
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1242 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1242 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1244
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1241 is 1008
9999 mem: location 1242 is 1247
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1322
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1247 in location 1326
9999 mem: incrementing refcount of 1247: 14 -> 15
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1247
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1252
9998 run: its type is "number"
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1327
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 107 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1328
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 9
9999 mem: storing 9 in location 1329
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1266
9999 mem: storing 1266 in location 1330
9999 mem: incrementing refcount of 1266: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1266
9999 mem: storing 1266 in location 1331
9999 mem: incrementing refcount of 1266: 16 -> 17
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 18 -> 17
9999 mem: storing 1277 in location 1330
9999 mem: incrementing refcount of 1277: 13 -> 14
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1332
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1333
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 1335
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 2
9999 mem: storing 2 in location 1336
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1605
9999 mem: storing 1605 in location 1337
9999 mem: incrementing refcount of 1605: 7 -> 8
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1264
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 1
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1277
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1330 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1278
9998 run: its type is "character"
9999 mem: location 1278 is 97
9999 mem: storing 97 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1624
9999 mem: storing 10 in location 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 97
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 97
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 97
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 97
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 97
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 0
9999 mem: storing 10 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 26 -> 27
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 97
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 97
9999 mem: location 1367 is 7
9999 mem: storing 97 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 10
9998 run: address to copy to is 1036
9999 mem: location 1384 is 97
9999 mem: location 1385 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 15 -> 14
9999 mem: storing 1286 in location 1330
9999 mem: incrementing refcount of 1286: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1284
9999 mem: incrementing refcount of 1266: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1266
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 167
9999 mem: location 1268 is 1277
9999 mem: location 1269 is 0
9999 mem: location 1284 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1277
9999 mem: storing 1277 in location 1285
9999 mem: incrementing refcount of 1277: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1266: 18 -> 17
9999 mem: storing 1277 in location 1331
9999 mem: incrementing refcount of 1277: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1286
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1330 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1287
9998 run: its type is "character"
9999 mem: location 1287 is 98
9999 mem: storing 98 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 98
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 98
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 98
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 98
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 98
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 1
9999 mem: storing 11 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 27 -> 28
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 98
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 98
9999 mem: location 1367 is 7
9999 mem: storing 98 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 11
9998 run: address to copy to is 1038
9999 mem: location 1384 is 98
9999 mem: location 1385 is 7
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1286
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 15 -> 14
9999 mem: storing 1290 in location 1330
9999 mem: incrementing refcount of 1290: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1284
9999 mem: incrementing refcount of 1277: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 97
9999 mem: location 1279 is 1286
9999 mem: location 1280 is 1266
9999 mem: location 1284 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1286
9999 mem: storing 1286 in location 1285
9999 mem: incrementing refcount of 1286: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1277: 17 -> 16
9999 mem: storing 1286 in location 1331
9999 mem: incrementing refcount of 1286: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1330 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 10
9999 mem: storing 1 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1329 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1220
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 61 -> 62
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 2
9999 mem: storing 12 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 28 -> 29
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 12
9998 run: address to copy to is 1040
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 62 -> 63
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 3
9999 mem: storing 13 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 29 -> 30
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 13
9998 run: address to copy to is 1042
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 63 -> 62
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 63 -> 64
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 4
9999 mem: storing 14 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 30 -> 31
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 14
9998 run: address to copy to is 1044
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 63 -> 64
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 64 -> 65
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 5
9999 mem: storing 15 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 31 -> 32
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 15
9998 run: address to copy to is 1046
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 64 -> 65
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 65 -> 66
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 6
9999 mem: storing 16 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 32 -> 33
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 16
9998 run: address to copy to is 1048
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 65 -> 66
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 66 -> 67
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 7
9999 mem: storing 17 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 33 -> 34
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 17
9998 run: address to copy to is 1050
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 67 -> 68
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 8
9999 mem: storing 18 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 34 -> 35
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 18
9998 run: address to copy to is 1052
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 68 -> 69
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1371 is 10
9999 mem: storing 10 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 10
9999 mem: location 1375 is 9
9999 mem: storing 19 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 35 -> 36
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 19
9998 run: address to copy to is 1054
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1333 is 1
9999 mem: storing 2 in location 1333
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 2
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1264
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 2
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 17 -> 16
9999 mem: storing 1294 in location 1330
9999 mem: incrementing refcount of 1294: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1286
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1284
9999 mem: incrementing refcount of 1286: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1286
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 98
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1277
9999 mem: location 1284 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1285
9999 mem: incrementing refcount of 1290: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 17 -> 16
9999 mem: storing 1290 in location 1331
9999 mem: incrementing refcount of 1290: 17 -> 18
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1294
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1330 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1295
9998 run: its type is "character"
9999 mem: location 1295 is 32
9999 mem: storing 32 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 32
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 32
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 0
9999 mem: storing 20 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 20
9998 run: address to copy to is 1056
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1294
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 17 -> 16
9999 mem: storing 1298 in location 1330
9999 mem: incrementing refcount of 1298: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1284
9999 mem: incrementing refcount of 1290: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1284 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1285
9999 mem: incrementing refcount of 1294: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 19 -> 18
9999 mem: storing 1294 in location 1331
9999 mem: incrementing refcount of 1294: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1298
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1330 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9998 run: its type is "character"
9999 mem: location 1299 is 32
9999 mem: storing 32 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 32
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 32
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 1
9999 mem: storing 21 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 21
9998 run: address to copy to is 1058
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1298
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 17 -> 16
9999 mem: storing 1302 in location 1330
9999 mem: incrementing refcount of 1302: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1294
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1284
9999 mem: incrementing refcount of 1294: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1294
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 32
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1284 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1285
9999 mem: incrementing refcount of 1298: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 19 -> 18
9999 mem: storing 1298 in location 1331
9999 mem: incrementing refcount of 1298: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1302
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1330 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1303
9998 run: its type is "character"
9999 mem: location 1303 is 99
9999 mem: storing 99 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 99
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 99
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 99
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 99
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 72 -> 73
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 99
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 2
9999 mem: storing 22 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 99
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 99
9999 mem: location 1367 is 7
9999 mem: storing 99 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 22
9998 run: address to copy to is 1060
9999 mem: location 1384 is 99
9999 mem: location 1385 is 7
9999 mem: storing 99 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 17 -> 16
9999 mem: storing 1306 in location 1330
9999 mem: incrementing refcount of 1306: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1298
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1284
9999 mem: incrementing refcount of 1298: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1298
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 32
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1284 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1285
9999 mem: incrementing refcount of 1302: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 19 -> 18
9999 mem: storing 1302 in location 1331
9999 mem: incrementing refcount of 1302: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 2
9999 mem: storing 3 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1306
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1597
9999 mem: location 1309 is 1302
9999 mem: location 1330 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1307
9998 run: its type is "character"
9999 mem: location 1307 is 100
9999 mem: storing 100 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 100
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 100
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 100
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 3
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 100
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 73 -> 74
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 100
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 3
9999 mem: storing 23 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 100
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 100
9999 mem: location 1367 is 7
9999 mem: storing 100 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 23
9998 run: address to copy to is 1062
9999 mem: location 1384 is 100
9999 mem: location 1385 is 7
9999 mem: storing 100 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1597
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1597
9999 mem: storing 1597 in location 1285
9999 mem: incrementing refcount of 1597: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1597
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1597
9999 mem: decrementing refcount of 1306: 23 -> 22
9999 mem: storing 1597 in location 1330
9999 mem: incrementing refcount of 1597: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1302
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1284
9999 mem: incrementing refcount of 1302: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1302
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 99
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1284 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1285
9999 mem: incrementing refcount of 1306: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 19 -> 18
9999 mem: storing 1306 in location 1331
9999 mem: incrementing refcount of 1306: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 3
9999 mem: storing 4 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1597
9998 run: jump-unless fell through
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1601
9999 mem: location 1600 is 1306
9999 mem: location 1330 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1598
9998 run: its type is "character"
9999 mem: location 1598 is 10
9999 mem: storing 10 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 10
9999 mem: storing 1 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 2
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1334 is 4
9999 mem: location 1329 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 74 -> 75
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1220
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 75 -> 76
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 4
9999 mem: storing 24 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 40 -> 41
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 24
9998 run: address to copy to is 1064
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 75 -> 76
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 76 -> 77
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 5
9999 mem: storing 25 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 41 -> 42
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 25
9998 run: address to copy to is 1066
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 77 -> 78
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 6
9999 mem: storing 26 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 42 -> 43
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 26
9998 run: address to copy to is 1068
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 78 -> 79
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 7
9999 mem: storing 27 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 43 -> 44
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 27
9998 run: address to copy to is 1070
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 79 -> 80
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 8
9999 mem: storing 28 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 44 -> 45
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 28
9998 run: address to copy to is 1072
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 80 -> 79
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 80 -> 81
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1371 is 10
9999 mem: storing 20 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 20
9999 mem: location 1375 is 9
9999 mem: storing 29 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 45 -> 46
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 29
9998 run: address to copy to is 1074
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1333 is 2
9999 mem: storing 3 in location 1333
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 3
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1264
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 3
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1597
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1284
9999 mem: incrementing refcount of 1597: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1597
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1601
9999 mem: location 1600 is 1306
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1599
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1599 is 1601
9999 mem: storing 1601 in location 1285
9999 mem: incrementing refcount of 1601: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1601
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1601
9999 mem: decrementing refcount of 1597: 11 -> 10
9999 mem: storing 1601 in location 1330
9999 mem: incrementing refcount of 1601: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1306
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1306 in location 1284
9999 mem: incrementing refcount of 1306: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1306
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 100
9999 mem: location 1308 is 1597
9999 mem: location 1309 is 1302
9999 mem: location 1284 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy is 1308
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1308 is 1597
9999 mem: storing 1597 in location 1285
9999 mem: incrementing refcount of 1597: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1597
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1597
9999 mem: decrementing refcount of 1306: 25 -> 24
9999 mem: storing 1597 in location 1331
9999 mem: incrementing refcount of 1597: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1601
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 3
9999 mem: storing 1 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1605
9999 mem: location 1604 is 1597
9999 mem: location 1330 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1602
9998 run: its type is "character"
9999 mem: location 1602 is 32
9999 mem: storing 32 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 32
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 32
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 0
9999 mem: storing 30 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 30
9998 run: address to copy to is 1076
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1601
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1601 in location 1284
9999 mem: incrementing refcount of 1601: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1601
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1605
9999 mem: location 1604 is 1597
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1603
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1603 is 1605
9999 mem: storing 1605 in location 1285
9999 mem: incrementing refcount of 1605: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1605
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1605
9999 mem: decrementing refcount of 1601: 10 -> 9
9999 mem: storing 1605 in location 1330
9999 mem: incrementing refcount of 1605: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1597
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1284
9999 mem: incrementing refcount of 1597: 12 -> 13
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1597
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 10
9999 mem: location 1599 is 1601
9999 mem: location 1600 is 1306
9999 mem: location 1284 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1599
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1599 is 1601
9999 mem: storing 1601 in location 1285
9999 mem: incrementing refcount of 1601: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1601
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1601
9999 mem: decrementing refcount of 1597: 13 -> 12
9999 mem: storing 1601 in location 1331
9999 mem: incrementing refcount of 1601: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1605
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 3
9999 mem: storing 1 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1340
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1330 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1606
9998 run: its type is "character"
9999 mem: location 1606 is 32
9999 mem: storing 32 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 32
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 32
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 32
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 83 -> 84
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 1
9999 mem: storing 31 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 31
9998 run: address to copy to is 1078
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1605
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1284
9999 mem: incrementing refcount of 1605: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1605
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1607
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1607 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 25 -> 26
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1605: 11 -> 10
9999 mem: storing 1310 in location 1330
9999 mem: incrementing refcount of 1310: 26 -> 27
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1601
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1601 in location 1284
9999 mem: incrementing refcount of 1601: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1601
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 32
9999 mem: location 1603 is 1605
9999 mem: location 1604 is 1597
9999 mem: location 1284 is 1601
9999 mem: skipping refcount at 1601
9998 run: address to copy is 1603
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1603 is 1605
9999 mem: storing 1605 in location 1285
9999 mem: incrementing refcount of 1605: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1605
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1605
9999 mem: decrementing refcount of 1601: 12 -> 11
9999 mem: storing 1605 in location 1331
9999 mem: incrementing refcount of 1605: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1310
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 3
9999 mem: storing 1 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1340
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1605
9999 mem: decrementing refcount of 1605: 12 -> 11
9999 mem: storing 1605 in location 1337
9999 mem: incrementing refcount of 1605: 11 -> 12
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1605
9999 mem: location 1330 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9998 run: its type is "character"
9999 mem: location 1311 is 10
9999 mem: storing 10 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 10
9999 mem: storing 1 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 3
9999 mem: location 1335 is 3
9999 mem: storing 1 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 0 in location 1343
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1329 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 84 -> 85
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1220
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 85 -> 86
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 2
9999 mem: storing 32 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 48 -> 49
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 32
9998 run: address to copy to is 1080
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 86 -> 87
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 3
9999 mem: storing 33 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 49 -> 50
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 33
9998 run: address to copy to is 1082
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 87 -> 88
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 4
9999 mem: storing 34 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 50 -> 51
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 34
9998 run: address to copy to is 1084
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 88 -> 87
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 88 -> 89
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 5
9999 mem: storing 35 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 51 -> 52
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 35
9998 run: address to copy to is 1086
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 89 -> 88
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 89 -> 90
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 6
9999 mem: storing 36 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 52 -> 53
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 36
9998 run: address to copy to is 1088
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 90 -> 89
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 90 -> 91
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 7
9999 mem: storing 37 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 53 -> 54
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 37
9998 run: address to copy to is 1090
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 91 -> 92
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 8
9999 mem: storing 38 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 54 -> 55
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 38
9998 run: address to copy to is 1092
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 92 -> 91
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 92 -> 93
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 3
9999 mem: location 1371 is 10
9999 mem: storing 30 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 30
9999 mem: location 1375 is 9
9999 mem: storing 39 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 55 -> 56
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 39
9998 run: address to copy to is 1094
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 93 -> 92
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1333 is 3
9999 mem: storing 4 in location 1333
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1333 is 4
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1264
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 4
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1605
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 28 -> 27
9999 mem: storing 1314 in location 1330
9999 mem: incrementing refcount of 1314: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1605
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1284
9999 mem: incrementing refcount of 1605: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1605
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9999 mem: location 1606 is 32
9999 mem: location 1607 is 1310
9999 mem: location 1608 is 1601
9999 mem: location 1284 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1607
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1607 is 1310
9999 mem: storing 1310 in location 1285
9999 mem: incrementing refcount of 1310: 27 -> 28
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1310
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1310
9999 mem: decrementing refcount of 1605: 13 -> 12
9999 mem: storing 1310 in location 1331
9999 mem: incrementing refcount of 1310: 28 -> 29
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1314
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 4
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 4
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1330 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1315
9998 run: its type is "character"
9999 mem: location 1315 is 101
9999 mem: storing 101 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 101
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 101
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 101
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 0
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 101
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 101
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 0
9999 mem: storing 40 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 101
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 101
9999 mem: location 1367 is 7
9999 mem: storing 101 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 40
9998 run: address to copy to is 1096
9999 mem: location 1384 is 101
9999 mem: location 1385 is 7
9999 mem: storing 101 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 15 -> 14
9999 mem: storing 1318 in location 1330
9999 mem: incrementing refcount of 1318: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1310
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 29 -> 30
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1310
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 10
9999 mem: location 1312 is 1314
9999 mem: location 1313 is 1605
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1312 is 1314
9999 mem: storing 1314 in location 1285
9999 mem: incrementing refcount of 1314: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1314
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1314
9999 mem: decrementing refcount of 1310: 30 -> 29
9999 mem: storing 1314 in location 1331
9999 mem: incrementing refcount of 1314: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1318
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1333 is 4
9999 mem: location 1328 is 10
9999 mem: storing 0 in location 1338
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 4
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1330 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1330 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1319
9998 run: its type is "character"
9999 mem: location 1319 is 102
9999 mem: storing 102 in location 1341
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1332 is 7
9999 mem: location 1341 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 102
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 102
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 102
9999 mem: storing 0 in location 1342
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1329 is 9
9999 mem: storing 0 in location 1344
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1341 is 102
9999 mem: location 1332 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1369
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 102
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 1
9999 mem: storing 41 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 102
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 102
9999 mem: location 1367 is 7
9999 mem: storing 102 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 41
9998 run: address to copy to is 1098
9999 mem: location 1384 is 102
9999 mem: location 1385 is 7
9999 mem: storing 102 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1330 is 1318
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1318 in location 1284
9999 mem: incrementing refcount of 1318: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1318
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1318
9999 mem: skipping refcount at 1318
9999 mem: location 1319 is 102
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1314
9999 mem: location 1284 is 1318
9999 mem: skipping refcount at 1318
9998 run: address to copy is 1320
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1320 is 0
9999 mem: storing 0 in location 1285
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1318: 14 -> 13
9999 mem: storing 0 in location 1330
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1331 is 1314
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1314 in location 1284
9999 mem: incrementing refcount of 1314: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1284 is 1314
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9999 mem: location 1315 is 101
9999 mem: location 1316 is 1318
9999 mem: location 1317 is 1310
9999 mem: location 1284 is 1314
9999 mem: skipping refcount at 1314
9998 run: address to copy is 1316
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1316 is 1318
9999 mem: storing 1318 in location 1285
9999 mem: incrementing refcount of 1318: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1285 is 1318
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1318
9999 mem: decrementing refcount of 1314: 17 -> 16
9999 mem: storing 1318 in location 1331
9999 mem: incrementing refcount of 1318: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1334 is 1
9999 mem: storing 2 in location 1334
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 68
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1330 is 0
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1250
9999 mem: storing 0 in location 1250
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 4
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1339
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 2
9999 mem: location 1336 is 2
9999 mem: storing 1 in location 1346
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1339 is 0
9999 mem: location 1346 is 1
9999 mem: storing 0 in location 1347
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1333 is 4
9999 mem: location 1335 is 3
9999 mem: storing 0 in location 1348
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1349
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 80
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1333 is 4
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1254
9999 mem: storing 4 in location 1254
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1335 is 3
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1255
9999 mem: storing 3 in location 1255
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1336 is 2
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1256
9999 mem: storing 2 in location 1256
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1337 is 1605
9999 mem: location 1326 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy to is 1251
9999 mem: storing 1605 in location 1251
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1333 is 4
9999 mem: location 1334 is 2
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1247
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 2
9999 mem: storing 4 in location 1245
9999 mem: storing 2 in location 1246
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1241 is 1008
9999 mem: location 1246 is 2
9999 mem: location 1244 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 96 -> 97
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1220
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 2
9999 mem: storing 42 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 42
9998 run: address to copy to is 1100
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 97 -> 98
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 3
9999 mem: storing 43 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 43
9998 run: address to copy to is 1102
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 98 -> 99
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 4
9999 mem: storing 44 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 44
9998 run: address to copy to is 1104
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 99 -> 100
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 5
9999 mem: storing 45 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 45
9998 run: address to copy to is 1106
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 101 -> 102
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 6
9999 mem: storing 46 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 46
9998 run: address to copy to is 1108
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 102 -> 101
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 7
9999 mem: storing 47 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 47
9998 run: address to copy to is 1110
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 8
9999 mem: storing 48 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 48
9998 run: address to copy to is 1112
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1371 is 10
9999 mem: storing 40 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 40
9999 mem: location 1375 is 9
9999 mem: storing 49 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 49
9998 run: address to copy to is 1114
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1241 is 1008
9999 mem: location 1245 is 5
9999 mem: location 1243 is 0
9999 mem: location 1244 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1420
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1423
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1424
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1425
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1426
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1427
9999 mem: storing 1 in location 1428
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1429
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1431
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1424 is 5
9999 mem: location 1425 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1264
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 5
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1423
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 0
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 0
9999 mem: storing 50 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 50
9998 run: address to copy to is 1116
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1116
9999 mem: storing 245 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 0
9999 mem: storing 1 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 1
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 1
9999 mem: storing 51 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 51
9998 run: address to copy to is 1118
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1118
9999 mem: storing 245 in location 1119
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 1
9999 mem: storing 2 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 2
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 2
9999 mem: storing 52 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 52
9998 run: address to copy to is 1120
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1120
9999 mem: storing 245 in location 1121
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 2
9999 mem: storing 3 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 3
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 3
9999 mem: storing 53 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 69 -> 70
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 53
9998 run: address to copy to is 1122
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1122
9999 mem: storing 245 in location 1123
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 3
9999 mem: storing 4 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 4
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 4
9999 mem: storing 54 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 70 -> 71
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 54
9998 run: address to copy to is 1124
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1124
9999 mem: storing 245 in location 1125
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 4
9999 mem: storing 5 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 5
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 5
9999 mem: storing 55 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 71 -> 72
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 55
9998 run: address to copy to is 1126
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1126
9999 mem: storing 245 in location 1127
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 5
9999 mem: storing 6 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 6
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 6
9999 mem: storing 56 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 72 -> 73
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 56
9998 run: address to copy to is 1128
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1128
9999 mem: storing 245 in location 1129
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 6
9999 mem: storing 7 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 7
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 7
9999 mem: storing 57 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 73 -> 74
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 57
9998 run: address to copy to is 1130
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1130
9999 mem: storing 245 in location 1131
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 7
9999 mem: storing 8 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 8
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 8
9999 mem: storing 58 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 74 -> 75
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 58
9998 run: address to copy to is 1132
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1132
9999 mem: storing 245 in location 1133
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 8
9999 mem: storing 9 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 9
9999 mem: location 1426 is 9
9999 mem: storing 1 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1423 is 1008
9999 mem: location 1427 is 9480
9999 mem: location 1429 is 245
9999 mem: location 1431 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1366
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1367
9999 mem: storing 1 in location 1368
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1373
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 5
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1376
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 5
9999 mem: location 1371 is 10
9999 mem: storing 50 in location 1379
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 50
9999 mem: location 1375 is 9
9999 mem: storing 59 in location 1379
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 75 -> 76
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 9480
9999 mem: storing 0 in location 1382
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 9480
9999 mem: location 1367 is 245
9999 mem: storing 9480 in location 1384
9999 mem: storing 245 in location 1385
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 59
9998 run: address to copy to is 1134
9999 mem: location 1384 is 9480
9999 mem: location 1385 is 245
9999 mem: storing 9480 in location 1134
9999 mem: storing 245 in location 1135
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1425 is 9
9999 mem: storing 10 in location 1425
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1425 is 10
9999 mem: location 1426 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1423 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1241 is 1008
9999 mem: location 1245 is 6
9999 mem: location 1243 is 0
9999 mem: location 1243 is 0
9999 mem: location 1244 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 117 -> 118
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1264
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 6
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 118 -> 119
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 120 -> 121
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 0
9999 mem: storing 60 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 60
9998 run: address to copy to is 1136
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1136
9999 mem: storing 7 in location 1137
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 121 -> 122
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 1
9999 mem: storing 61 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 61
9998 run: address to copy to is 1138
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1138
9999 mem: storing 7 in location 1139
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 1
9999 mem: storing 2 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 122 -> 123
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 2
9999 mem: storing 62 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 62
9998 run: address to copy to is 1140
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1140
9999 mem: storing 7 in location 1141
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 123 -> 124
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 3
9999 mem: storing 63 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 79 -> 80
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 63
9998 run: address to copy to is 1142
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1142
9999 mem: storing 7 in location 1143
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 4
9999 mem: storing 64 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 80 -> 81
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 64
9998 run: address to copy to is 1144
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1144
9999 mem: storing 7 in location 1145
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 125 -> 126
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 5
9999 mem: storing 65 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 81 -> 82
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 65
9998 run: address to copy to is 1146
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1146
9999 mem: storing 7 in location 1147
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 126 -> 127
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 6
9999 mem: storing 66 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 82 -> 83
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 66
9998 run: address to copy to is 1148
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1148
9999 mem: storing 7 in location 1149
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 127 -> 126
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 127 -> 128
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 7
9999 mem: storing 67 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 83 -> 84
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 67
9998 run: address to copy to is 1150
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1150
9999 mem: storing 7 in location 1151
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 8
9999 mem: storing 68 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 84 -> 85
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 68
9998 run: address to copy to is 1152
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1152
9999 mem: storing 7 in location 1153
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 129 -> 130
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1373
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 6
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 6
9999 mem: location 1371 is 10
9999 mem: storing 60 in location 1379
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 60
9999 mem: location 1375 is 9
9999 mem: storing 69 in location 1379
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 85 -> 86
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 108 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 69
9998 run: address to copy to is 1154
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1154
9999 mem: storing 7 in location 1155
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1636
9999 mem: storing 7 in location 1637
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1639
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1640
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1641
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1642
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1640 is 6
9999 mem: storing 7 in location 1640
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1640 is 7
9999 mem: location 1641 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 131 -> 132
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1264
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 7
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1639
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1639 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1284
9999 mem: incrementing refcount of 1008: 132 -> 133
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1284 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1284 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1285
 108 run: return {height: "number"}
9999 mem: location 1285 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1643
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1640 is 7
9999 mem: location 1643 is 10
9999 mem: storing 0 in location 1644
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1644 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1640 is 7
9999 mem: location 1641 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 133 -> 134
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1264
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 7
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 1008 in location 1639
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1641 is 0
9999 mem: location 1642 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 134 -> 135
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 135 -> 136
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 0
9999 mem: storing 70 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 86 -> 87
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 70
9998 run: address to copy to is 1156
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1156
9999 mem: storing 7 in location 1157
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 136 -> 135
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 135 -> 136
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 136 -> 137
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 1
9999 mem: storing 71 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 87 -> 88
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 71
9998 run: address to copy to is 1158
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1158
9999 mem: storing 7 in location 1159
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 1
9999 mem: storing 2 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 137 -> 138
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 2
9999 mem: storing 72 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 88 -> 89
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 72
9998 run: address to copy to is 1160
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1160
9999 mem: storing 7 in location 1161
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 137 -> 138
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 138 -> 139
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 3
9999 mem: storing 73 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 89 -> 90
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 73
9998 run: address to copy to is 1162
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1162
9999 mem: storing 7 in location 1163
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 139 -> 138
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 138 -> 139
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 139 -> 140
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 4
9999 mem: storing 74 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 90 -> 91
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 74
9998 run: address to copy to is 1164
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1164
9999 mem: storing 7 in location 1165
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 139 -> 140
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 140 -> 141
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 5
9999 mem: storing 75 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 91 -> 92
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 75
9998 run: address to copy to is 1166
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1166
9999 mem: storing 7 in location 1167
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 141 -> 140
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 140 -> 141
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 141 -> 142
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 6
9999 mem: storing 76 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 92 -> 93
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 76
9998 run: address to copy to is 1168
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1168
9999 mem: storing 7 in location 1169
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 142 -> 143
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 7
9999 mem: storing 77 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 93 -> 94
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 77
9998 run: address to copy to is 1170
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1170
9999 mem: storing 7 in location 1171
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 143 -> 144
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 8
9999 mem: storing 78 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 94 -> 95
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 78
9998 run: address to copy to is 1172
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1172
9999 mem: storing 7 in location 1173
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 143 -> 144
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 144 -> 145
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 7
9999 mem: location 1371 is 10
9999 mem: storing 70 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 70
9999 mem: location 1375 is 9
9999 mem: storing 79 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 95 -> 96
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 79
9998 run: address to copy to is 1174
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1174
9999 mem: storing 7 in location 1175
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 144 -> 145
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
9990 schedule: clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1640 is 7
9999 mem: storing 8 in location 1640
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1640 is 8
9999 mem: location 1643 is 10
9999 mem: storing 0 in location 1644
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1644 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1640 is 8
9999 mem: location 1641 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 145 -> 146
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1264
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 8
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 146 -> 145
9999 mem: storing 1008 in location 1639
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1641 is 0
9999 mem: location 1642 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 146 -> 147
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 147 -> 148
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 0
9999 mem: storing 80 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 96 -> 97
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 80
9998 run: address to copy to is 1176
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1176
9999 mem: storing 7 in location 1177
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 148 -> 147
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 147 -> 148
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 148 -> 149
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 1
9999 mem: storing 81 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 97 -> 98
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 81
9998 run: address to copy to is 1178
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1178
9999 mem: storing 7 in location 1179
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 1
9999 mem: storing 2 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 149 -> 150
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 2
9999 mem: storing 82 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 98 -> 99
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 82
9998 run: address to copy to is 1180
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1180
9999 mem: storing 7 in location 1181
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 149 -> 150
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 150 -> 151
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 3
9999 mem: storing 83 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 99 -> 100
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 83
9998 run: address to copy to is 1182
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1182
9999 mem: storing 7 in location 1183
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 150 -> 151
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 151 -> 152
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 4
9999 mem: storing 84 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 100 -> 101
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 84
9998 run: address to copy to is 1184
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1184
9999 mem: storing 7 in location 1185
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 151 -> 152
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 152 -> 153
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 5
9999 mem: storing 85 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 101 -> 102
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 85
9998 run: address to copy to is 1186
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1186
9999 mem: storing 7 in location 1187
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 152 -> 153
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 153 -> 154
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 6
9999 mem: storing 86 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 102 -> 103
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 86
9998 run: address to copy to is 1188
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1188
9999 mem: storing 7 in location 1189
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 153 -> 154
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 154 -> 155
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 7
9999 mem: storing 87 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 103 -> 104
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 87
9998 run: address to copy to is 1190
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1190
9999 mem: storing 7 in location 1191
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 154 -> 155
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 155 -> 156
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 8
9999 mem: storing 88 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 104 -> 105
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 88
9998 run: address to copy to is 1192
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1192
9999 mem: storing 7 in location 1193
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 155 -> 156
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 156 -> 157
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 8
9999 mem: location 1371 is 10
9999 mem: storing 80 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 80
9999 mem: location 1375 is 9
9999 mem: storing 89 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 105 -> 106
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 89
9998 run: address to copy to is 1194
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1194
9999 mem: storing 7 in location 1195
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 156 -> 157
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1640 is 8
9999 mem: storing 9 in location 1640
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1640 is 9
9999 mem: location 1643 is 10
9999 mem: storing 0 in location 1644
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1644 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1640 is 9
9999 mem: location 1641 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 157 -> 158
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1264
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1265
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 9
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 0
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1639
9999 mem: incrementing refcount of 1008: 157 -> 158
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1639 is 1008
9999 mem: location 1641 is 0
9999 mem: location 1642 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1216
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 158 -> 159
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1221
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1222
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1223
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 159 -> 160
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 0
9999 mem: storing 90 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 106 -> 107
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 90
9998 run: address to copy to is 1196
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1196
9999 mem: storing 7 in location 1197
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 0
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 0
9999 mem: storing 1 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 1
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 160 -> 159
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 159 -> 160
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 160 -> 161
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 1
9999 mem: storing 91 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 107 -> 108
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 91
9998 run: address to copy to is 1198
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1198
9999 mem: storing 7 in location 1199
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 2
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 161 -> 160
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 160 -> 161
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 1
9999 mem: storing 2 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 161 -> 162
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 2
9999 mem: storing 92 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 108 -> 109
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 92
9998 run: address to copy to is 1200
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1200
9999 mem: storing 7 in location 1201
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 2
9999 mem: storing 3 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 3
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 162 -> 161
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 161 -> 162
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 162 -> 163
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 3
9999 mem: storing 93 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 109 -> 110
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 93
9998 run: address to copy to is 1202
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1202
9999 mem: storing 7 in location 1203
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 3
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 3
9999 mem: storing 4 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 4
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 163 -> 162
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 162 -> 163
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 3
9999 mem: storing 4 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 4
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 163 -> 164
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 4
9999 mem: storing 94 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 110 -> 111
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 94
9998 run: address to copy to is 1204
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1204
9999 mem: storing 7 in location 1205
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 4
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 4
9999 mem: storing 5 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 5
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 164 -> 163
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 163 -> 164
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 4
9999 mem: storing 5 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 5
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 164 -> 165
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 5
9999 mem: storing 95 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 111 -> 112
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 95
9998 run: address to copy to is 1206
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1206
9999 mem: storing 7 in location 1207
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 5
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 5
9999 mem: storing 6 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 6
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 165 -> 164
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 164 -> 165
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 5
9999 mem: storing 6 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 6
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 165 -> 166
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 6
9999 mem: storing 96 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 112 -> 113
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 96
9998 run: address to copy to is 1208
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1208
9999 mem: storing 7 in location 1209
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 6
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 6
9999 mem: storing 7 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 7
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 166 -> 165
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 165 -> 166
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 6
9999 mem: storing 7 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 7
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 166 -> 167
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 7
9999 mem: storing 97 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 113 -> 114
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 97
9998 run: address to copy to is 1210
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1210
9999 mem: storing 7 in location 1211
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-inserts-indent-after-newline
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 7
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 7
9999 mem: storing 8 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 8
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 166 -> 167
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 7
9999 mem: storing 8 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 8
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 167 -> 168
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 8
9999 mem: storing 98 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 114 -> 115
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 98
9998 run: address to copy to is 1212
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1212
9999 mem: storing 7 in location 1213
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 8
9999 mem: location 1386 is 9
9999 mem: storing 0 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1375 is 8
9999 mem: storing 9 in location 1375
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1375 is 9
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 168 -> 167
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 167 -> 168
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 8
9999 mem: storing 9 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 9
9999 mem: location 1221 is 9
9999 mem: storing 0 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1222 is 32
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1362
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1365
9999 mem: incrementing refcount of 1008: 168 -> 169
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1366
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1367
9999 mem: storing 1 in location 1368
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1369
9999 mem: storing 1 in location 1370
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1366 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1365 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1371
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1372
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1373
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1373 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1372 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1375
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1375 is 9
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1371 is 10
9999 mem: storing 1 in location 1374
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1376
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1373 is 9
9999 mem: location 1371 is 10
9999 mem: storing 90 in location 1379
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1379 is 90
9999 mem: location 1375 is 9
9999 mem: storing 99 in location 1379
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1380
9999 mem: incrementing refcount of 1014: 115 -> 116
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1381
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1366 is 32
9999 mem: storing 0 in location 1382
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1366 is 32
9999 mem: location 1367 is 7
9999 mem: storing 32 in location 1384
9999 mem: storing 7 in location 1385
 109 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1380 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1379 is 99
9998 run: address to copy to is 1214
9999 mem: location 1384 is 32
9999 mem: location 1385 is 7
9999 mem: storing 32 in location 1214
9999 mem: storing 7 in location 1215
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1371 is 10
9999 mem: storing 9 in location 1386
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1375 is 9
9999 mem: location 1386 is 9
9999 mem: storing 1 in location 1387
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1365 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 169 -> 168
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 168 -> 169
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 9
9999 mem: storing 10 in location 1220
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1220 is 10
9999 mem: location 1221 is 9
9999 mem: storing 1 in location 1225
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1640 is 9
9999 mem: storing 10 in location 1640
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1640 is 10
9999 mem: location 1643 is 10
9999 mem: storing 1 in location 1644
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1644 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1639 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1241 is 1008
9999 mem: location 1242 is 1247
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 169 -> 168
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 168 -> 169
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 1407
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 1406 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 2
9999 mem: storing 2 in location 1408
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1404 is 1008
9999 mem: location 1407 is 3
9999 mem: location 1408 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1260
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1263
9999 mem: incrementing refcount of 1008: 169 -> 170
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1264
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1265
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1263 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1264 is 3
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1263 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1263 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 170 -> 169
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 169 -> 170
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1405 is 1398
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1420
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1398 in location 1423
9999 mem: incrementing refcount of 1398: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1423 is 1398
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 2
9999 mem: location 1400 is 1388
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy is 1399
9998 run: its type is "number"
9999 mem: location 1399 is 2
9999 mem: storing 2 in location 1424
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9999 mem: location 1399 is 2
9999 mem: location 1400 is 1388
9999 mem: location 1423 is 1398
9999 mem: skipping refcount at 1398
9998 run: address to copy is 1400
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1400 is 1388
9999 mem: storing 1388 in location 1425
9999 mem: incrementing refcount of 1388: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1425 is 1388
9999 mem: skipping refcount at 1388
9999 mem: storing 2 in location 1426
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1424 is 2
9999 mem: location 1426 is 2
9999 mem: storing 1 in location 1427
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1281
9999 mem: storing 1281 in location 1428
9999 mem: incrementing refcount of 1281: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1428 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1423 is 1398
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1398
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: decrementing refcount of 1398: 4 -> 3
9999 mem: storing 1398 in location 1405
9999 mem: incrementing refcount of 1398: 3 -> 4
9999 mem: storing 1 in location 1413
9999 mem: storing 1 in location 1414
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1404 is 1008
9999 mem: location 1405 is 1398
9999 mem: location 1406 is 1247
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 2 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 3
9999 mem: storing 3 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1247
9999 mem: skipping refcount at 1247
9999 mem: location 1248 is 1266
9999 mem: location 1249 is 1266
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1605
9999 mem: location 1252 is 0
9999 mem: location 1253 is 9
9999 mem: location 1254 is 4
9999 mem: location 1255 is 3
9999 mem: location 1256 is 2
9999 mem: location 1257 is 1
9999 mem: location 1258 is 1621
9999 mem: location 1259 is 0
9999 mem: location 2 is 1247
9999 mem: skipping refcount at 1247
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 3  # cursor row\n    4 <- 2  # cursor column (indented)\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
