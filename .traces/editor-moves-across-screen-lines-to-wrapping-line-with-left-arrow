 102 run: screen-should-contain {"\n    .          .\n    .abcd↩     .\n    .ef        .\n    .g         .\n    .┈┈┈┈┈     .\n  ": "literal-string"}
 102 run: assume-console {"\n    left-click 3, 0\n    press left-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {left-arrow: ()}
9992 load: after rewriting: press {left-arrow: ()}
9999 mem: storing 'left-click' event starting at 1303
9999 mem: storing 'press' event starting at 1307
9999 mem: storing console in 1311
9999 mem: storing console data in 1313
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1311
9999 mem: location 2 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1314
9999 mem: storing 14 in location 1315
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1317
9999 mem: incrementing refcount of 1008: 62 -> 63
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1319
9999 mem: incrementing refcount of 1145: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1320
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1321
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1317 is 1008
9999 mem: location 1320 is 1
9999 mem: location 1321 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 63 -> 64
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 0
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1317
9999 mem: incrementing refcount of 1008: 63 -> 64
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1318 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1278
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1281
9999 mem: incrementing refcount of 1311: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1281 is 1311
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1301
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "number"
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1282
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1301
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1313 is 1301
9999 mem: storing 1301 in location 1283
9999 mem: incrementing refcount of 1301: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1283 is 1301
9999 mem: skipping refcount at 1301
9999 mem: storing 2 in location 1284
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 2
9999 mem: storing 0 in location 1285
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1283 is 1301
9999 mem: skipping refcount at 1301
9998 run: base address is 1302
9999 mem: location 1282 is 0
9998 run: address to copy is 1303
9998 run: its type is event
9999 mem: location 1303 is 2
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 3
9999 mem: location 1306 is 0
9999 mem: storing 2 in location 1287
9999 mem: storing 65513 in location 1288
9999 mem: storing 3 in location 1289
9999 mem: storing 0 in location 1290
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1282 is 0
9999 mem: storing 1 in location 1282
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1301
9999 mem: location 1282 is 1
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy to is 1312
9999 mem: storing 1 in location 1312
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1287 is 2
9999 mem: location 1288 is 65513
9999 mem: location 1289 is 3
9999 mem: location 1290 is 0
9999 mem: location 1281 is 1311
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1311
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1322
9999 mem: storing 65513 in location 1323
9999 mem: storing 3 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1311: 2 -> 1
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 1 -> 2
9999 mem: storing 1 in location 1326
9999 mem: storing 0 in location 1327
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1322 is 2
9999 mem: location 1323 is 65513
9999 mem: location 1324 is 3
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1328
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1328 is 1323
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1317 is 1008
9999 mem: location 1319 is 1145
9999 mem: location 1328 is 1323
9999 mem: location 1323 is 65513
9999 mem: location 1324 is 3
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 64 -> 65
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1256
9999 mem: incrementing refcount of 1145: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1257
9999 mem: storing 3 in location 1258
9999 mem: storing 0 in location 1259
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1256 is 1145
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1257 is 65513
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 3
9999 mem: storing 3 in location 1260
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1260 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1257 is 65513
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1261
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1262
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1263
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 4
9999 mem: storing 4 in location 1264
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1261 is 0
9999 mem: location 1264 is 4
9999 mem: storing 0 in location 1265
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1266
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1267
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1268
9999 mem: incrementing refcount of 1164: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1255 is 1008
9999 mem: location 1256 is 1145
9999 mem: location 1260 is 3
9999 mem: location 1261 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1212
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1215
9999 mem: incrementing refcount of 1008: 65 -> 66
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1216
9999 mem: incrementing refcount of 1145: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1217
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1218
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1216 is 1145
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1219
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 4
9999 mem: storing 4 in location 1220
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1215 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1182
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1182 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1182 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1182 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1183
 107 run: return {height: "number"}
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1221
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1222
9999 mem: incrementing refcount of 1164: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1164
9999 mem: storing 1164 in location 1223
9999 mem: incrementing refcount of 1164: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1182
9999 mem: incrementing refcount of 1164: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1164
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1175
9999 mem: location 1167 is 0
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1175
9999 mem: storing 1175 in location 1183
9999 mem: incrementing refcount of 1175: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1164: 14 -> 13
9999 mem: storing 1175 in location 1222
9999 mem: incrementing refcount of 1175: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1224
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1225
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1217 is 3
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1153
9999 mem: storing 3 in location 1153
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1217 is 3
9999 mem: storing 3 in location 1226
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1218 is 0
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1154
9999 mem: storing 0 in location 1154
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1227
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1164
9999 mem: storing 1164 in location 1228
9999 mem: incrementing refcount of 1164: 13 -> 14
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1175
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1164
9999 mem: location 1222 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1176
9998 run: its type is "character"
9999 mem: location 1176 is 97
9999 mem: storing 97 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 97
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 0
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1182
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1164
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1184
9999 mem: storing 1184 in location 1183
9999 mem: incrementing refcount of 1184: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1175: 15 -> 14
9999 mem: storing 1184 in location 1222
9999 mem: incrementing refcount of 1184: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1182
9999 mem: incrementing refcount of 1164: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1164
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1175
9999 mem: location 1167 is 0
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1175
9999 mem: storing 1175 in location 1183
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1164: 15 -> 14
9999 mem: storing 1175 in location 1223
9999 mem: incrementing refcount of 1175: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 0
9999 mem: storing 1 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1184
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1222 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 98
9999 mem: storing 98 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 98
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 1
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1182
9999 mem: incrementing refcount of 1184: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1184
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1186
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1183
9999 mem: incrementing refcount of 1188: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1184: 15 -> 14
9999 mem: storing 1188 in location 1222
9999 mem: incrementing refcount of 1188: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1182
9999 mem: incrementing refcount of 1175: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1164
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1184
9999 mem: storing 1184 in location 1183
9999 mem: incrementing refcount of 1184: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1175: 17 -> 16
9999 mem: storing 1184 in location 1223
9999 mem: incrementing refcount of 1184: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1188
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1222 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is "character"
9999 mem: location 1189 is 99
9999 mem: storing 99 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 99
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 2
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1182
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1188
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1183
9999 mem: incrementing refcount of 1192: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 15 -> 14
9999 mem: storing 1192 in location 1222
9999 mem: incrementing refcount of 1192: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1182
9999 mem: incrementing refcount of 1184: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1184
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1186
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1183
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1184: 17 -> 16
9999 mem: storing 1188 in location 1223
9999 mem: incrementing refcount of 1188: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 2
9999 mem: storing 3 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 100
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1222 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 100
9999 mem: storing 100 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 100
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 3
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 100
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1183
9999 mem: incrementing refcount of 1196: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 15 -> 14
9999 mem: storing 1196 in location 1222
9999 mem: incrementing refcount of 1196: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1182
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1188
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1183
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 17 -> 16
9999 mem: storing 1192 in location 1223
9999 mem: incrementing refcount of 1192: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 3
9999 mem: storing 4 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1196
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 1
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 101
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1222 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 101
9999 mem: storing 101 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 101
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 4
9999 mem: location 1220 is 4
9999 mem: storing 1 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1225
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1224 is 1
9999 mem: storing 2 in location 1224
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1196
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 101
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1222 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 101
9999 mem: storing 101 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 101
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 0
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1182
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 101
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1183
9999 mem: incrementing refcount of 1200: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 15 -> 14
9999 mem: storing 1200 in location 1222
9999 mem: incrementing refcount of 1200: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 100
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1183
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 17 -> 16
9999 mem: storing 1196 in location 1223
9999 mem: incrementing refcount of 1196: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 0
9999 mem: storing 1 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1200
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 102
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1222 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 102
9999 mem: storing 102 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 102
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 1
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1182
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 102
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1182 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1183
9999 mem: incrementing refcount of 1204: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 15 -> 14
9999 mem: storing 1204 in location 1222
9999 mem: incrementing refcount of 1204: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1182
9999 mem: incrementing refcount of 1196: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 101
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1183
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 17 -> 16
9999 mem: storing 1200 in location 1223
9999 mem: incrementing refcount of 1200: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 1
9999 mem: storing 2 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1204
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1222 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 10
9999 mem: storing 10 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 10
9999 mem: storing 1 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 2
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1224 is 2
9999 mem: storing 3 in location 1224
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1225
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1182
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1183
9999 mem: incrementing refcount of 1208: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 15 -> 14
9999 mem: storing 1208 in location 1222
9999 mem: incrementing refcount of 1208: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1182
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 102
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1182 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1183
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 17 -> 16
9999 mem: storing 1204 in location 1223
9999 mem: incrementing refcount of 1204: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 1208
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1224 is 3
9999 mem: location 1221 is 5
9999 mem: storing 0 in location 1229
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 3
9999 mem: location 1226 is 3
9999 mem: storing 1 in location 1230
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1225 is 0
9999 mem: location 1227 is 0
9999 mem: storing 1 in location 1231
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1204
9999 mem: decrementing refcount of 1164: 14 -> 13
9999 mem: storing 1204 in location 1228
9999 mem: incrementing refcount of 1204: 16 -> 17
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1228 is 1204
9999 mem: location 1216 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1149
9999 mem: storing 1204 in location 1149
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1222 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 103
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1204
9999 mem: location 1222 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 103
9999 mem: storing 103 in location 1232
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1232 is 103
9999 mem: storing 0 in location 1233
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1225 is 0
9999 mem: location 1220 is 4
9999 mem: storing 0 in location 1235
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1222 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1182
9999 mem: incrementing refcount of 1208: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 103
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1204
9999 mem: location 1182 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1183
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1208: 14 -> 13
9999 mem: storing 0 in location 1222
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1223 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1182
9999 mem: incrementing refcount of 1204: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1183
9999 mem: incrementing refcount of 1208: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1183 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 18 -> 17
9999 mem: storing 1208 in location 1223
9999 mem: incrementing refcount of 1208: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1225 is 0
9999 mem: storing 1 in location 1225
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 3
9999 mem: location 1226 is 3
9999 mem: storing 1 in location 1230
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1225 is 1
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1236
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1230 is 1
9999 mem: location 1236 is 0
9999 mem: storing 0 in location 1237
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1224 is 3
9999 mem: location 1226 is 3
9999 mem: storing 0 in location 1238
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1239
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1239 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1216 is 1145
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 9 -> 8
9999 mem: storing 1145 in location 1256
9999 mem: incrementing refcount of 1145: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1269
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1270
9999 mem: incrementing refcount of 1164: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1271
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1256 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1272
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 41
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
9999 mem: storing 1240 in location 1274
9999 mem: incrementing refcount of 1240: 0 -> 1
9990 schedule: move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-across-screen-lines-to-wrapping-line-with-left-arrow
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1266 is 1
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1164
9999 mem: location 1271 is 3
9999 mem: location 1272 is 0
9999 mem: location 1270 is 1164
9999 mem: location 1269 is 0
9999 mem: location 1274 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1274 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1 in location 1241
9999 mem: storing 1 in location 1242
9999 mem: storing 0 in location 1243
9999 mem: storing 1164 in location 1244
9999 mem: storing 3 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 1164 in location 1247
9999 mem: storing 0 in location 1248
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1256 is 1145
9999 mem: location 1274 is 1240
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1168
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1171
9999 mem: incrementing refcount of 1145: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1172
9999 mem: incrementing refcount of 1240: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1173
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1172 is 1240
9999 mem: location 1173 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1161
9999 mem: incrementing refcount of 1240: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1162
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1330
9999 mem: storing 1330 in location 1163
9999 mem: incrementing refcount of 1330: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1240
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1163 is 1330
9999 mem: skipping refcount at 1330
9999 mem: storing 1240 in location 1331
9999 mem: storing 0 in location 1332
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1330
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1330
9999 mem: storing 1330 in location 1173
9999 mem: incrementing refcount of 1330: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1173 is 1330
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1156
9999 mem: storing 1330 in location 1156
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1174
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1174
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1174 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1171 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 10 -> 9
9999 mem: storing 1145 in location 1256
9999 mem: incrementing refcount of 1145: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1256 is 1145
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1320
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1321
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1317 is 1008
9999 mem: location 1320 is 3
9999 mem: location 1321 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 3
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 0
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1317
9999 mem: incrementing refcount of 1008: 67 -> 68
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1318 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1278
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1281
9999 mem: incrementing refcount of 1311: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1281 is 1311
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1301
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "number"
9999 mem: location 1312 is 1
9999 mem: storing 1 in location 1282
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1301
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1313 is 1301
9999 mem: storing 1301 in location 1283
9999 mem: incrementing refcount of 1301: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1283 is 1301
9999 mem: skipping refcount at 1301
9999 mem: storing 2 in location 1284
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1282 is 1
9999 mem: location 1284 is 2
9999 mem: storing 0 in location 1285
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1283 is 1301
9999 mem: skipping refcount at 1301
9998 run: base address is 1302
9999 mem: location 1282 is 1
9998 run: address to copy is 1307
9998 run: its type is event
9999 mem: location 1307 is 1
9999 mem: location 1308 is 65515
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: storing 1 in location 1287
9999 mem: storing 65515 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1282 is 1
9999 mem: storing 2 in location 1282
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1301
9999 mem: location 1282 is 2
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy to is 1312
9999 mem: storing 2 in location 1312
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1287 is 1
9999 mem: location 1288 is 65515
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1281 is 1311
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1311
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1322
9999 mem: storing 65515 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1311: 3 -> 2
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 2 -> 3
9999 mem: storing 1 in location 1326
9999 mem: storing 0 in location 1327
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65515
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1328
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1317 is 1008
9999 mem: location 1319 is 1145
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65515
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1333
9999 mem: storing 74 in location 1334
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1336
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1337
9999 mem: incrementing refcount of 1145: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1338
9999 mem: storing 65515 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1342
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1337 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1336 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1182
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1182 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1182 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1182 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1183
 106 run: return {width: "number"}
9999 mem: location 1183 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1343
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1336 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1182
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1182 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1182 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1182 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1183
 106 run: return {height: "number"}
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1344
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1345
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 4
9999 mem: storing 4 in location 1346
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1204
9999 mem: storing 1204 in location 1347
9999 mem: incrementing refcount of 1204: 17 -> 18
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1348
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1349
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1348 is 3
9999 mem: storing 3 in location 1350
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1351
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1338 is 1
9999 mem: location 1339 is 65515
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: storing 0 in location 1352
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1338 is 1
9999 mem: location 1339 is 65515
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: storing 1339 in location 1396
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1396 is 1339
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 0 in location 1369
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 0 in location 1380
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 0 in location 1385
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 0 in location 1386
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 0 in location 1397
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 632
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 0 in location 1398
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1398 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1396 is 1339
9999 mem: location 1339 is 65515
9999 mem: storing 1 in location 1399
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"left arrow": "literal-string"}
  10 app: left arrow 
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1347 is 1204
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1182
9999 mem: incrementing refcount of 1204: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1204
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1200
9999 mem: storing 1200 in location 1183
9999 mem: incrementing refcount of 1200: 16 -> 17
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1200
9999 mem: storing 1200 in location 1400
9999 mem: incrementing refcount of 1200: 17 -> 18
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1342
 105 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1400 is 1200
9998 run: jumping to instruction 675
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1371
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1372
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1373
9999 mem: incrementing refcount of 1164: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-left {editor: ("address" "shared" "editor-data")}
9999 mem: location 1337 is 1145
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1409
9999 mem: storing 20 in location 1410
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1412
9999 mem: incrementing refcount of 1145: 11 -> 12
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1204
9999 mem: storing 1204 in location 1413
9999 mem: incrementing refcount of 1204: 19 -> 20
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1414
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1415
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1416
 106 run: {at-left-margin?: "boolean"} <- equal {cursor-column: "number"}, {left: "number"}
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: storing 1 in location 1417
 106 run: jump-if {at-left-margin?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jumping to instruction 14
 106 run: {top-of-screen?: "boolean"} <- equal {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1414 is 3
9999 mem: storing 0 in location 1419
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1418
 106 run: jump-if {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jump-if fell through
 106 run: {cursor-row: "number"} <- subtract {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1414 is 3
9999 mem: storing 2 in location 1414
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1414 is 2
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1153
9999 mem: storing 2 in location 1153
 106 run: jump-unless {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 35
 106 run: {previous-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1413 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1413 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 10
9999 mem: storing 10 in location 1423
 106 run: {previous-character-is-newline?: "boolean"} <- equal {previous-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1423 is 10
9999 mem: storing 1 in location 1424
 106 run: jump-unless {previous-character-is-newline?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"switching to previous line": "literal-string"}
  10 app: switching to previous line 
 106 run: {d: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1164
9999 mem: storing 1164 in location 1425
9999 mem: incrementing refcount of 1164: 15 -> 16
 106 run: {end-of-line: "number"} <- previous-line-length {before-cursor: ("address" "shared" "duplex-list" "character")}, {d: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1413 is 1204
9999 mem: location 1425 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1139
9999 mem: incrementing refcount of 1204: 20 -> 21
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1140
9999 mem: incrementing refcount of 1164: 16 -> 17
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1141
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1139 is 1204
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1204
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1142 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1204
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1182
9999 mem: incrementing refcount of 1204: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1204
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1182 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1200
9999 mem: storing 1200 in location 1183
9999 mem: incrementing refcount of 1200: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1204: 22 -> 21
9999 mem: storing 1200 in location 1139
9999 mem: incrementing refcount of 1200: 19 -> 20
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1200
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1200
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 102
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1139 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 102
9999 mem: storing 102 in location 1143
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 102
9999 mem: storing 0 in location 1144
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 0
9999 mem: storing 1 in location 1141
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1200
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1182
9999 mem: incrementing refcount of 1200: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1200
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 102
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1182 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1196
9999 mem: storing 1196 in location 1183
9999 mem: incrementing refcount of 1196: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1200: 21 -> 20
9999 mem: storing 1196 in location 1139
9999 mem: incrementing refcount of 1196: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1196
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1196
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 101
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1139 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 101
9999 mem: storing 101 in location 1143
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 101
9999 mem: storing 0 in location 1144
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 1
9999 mem: storing 2 in location 1141
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1196
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1182
9999 mem: incrementing refcount of 1196: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1196
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 101
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1192
9999 mem: storing 1192 in location 1183
9999 mem: incrementing refcount of 1192: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1196: 19 -> 18
9999 mem: storing 1192 in location 1139
9999 mem: incrementing refcount of 1192: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1192
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1192
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 100
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1139 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 100
9999 mem: storing 100 in location 1143
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 100
9999 mem: storing 0 in location 1144
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 2
9999 mem: storing 3 in location 1141
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1192
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1192
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 100
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1188
9999 mem: storing 1188 in location 1183
9999 mem: incrementing refcount of 1188: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1192: 19 -> 18
9999 mem: storing 1188 in location 1139
9999 mem: incrementing refcount of 1188: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1188
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1188
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1139 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is "character"
9999 mem: location 1189 is 99
9999 mem: storing 99 in location 1143
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 99
9999 mem: storing 0 in location 1144
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 3
9999 mem: storing 4 in location 1141
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1188
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1182
9999 mem: incrementing refcount of 1188: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1188
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1184
9999 mem: storing 1184 in location 1183
9999 mem: incrementing refcount of 1184: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1188: 19 -> 18
9999 mem: storing 1184 in location 1139
9999 mem: incrementing refcount of 1184: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1184
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1184
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1139 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 98
9999 mem: storing 98 in location 1143
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 98
9999 mem: storing 0 in location 1144
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 4
9999 mem: storing 5 in location 1141
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1184
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1182
9999 mem: incrementing refcount of 1184: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1184
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1175
9999 mem: storing 1175 in location 1183
9999 mem: incrementing refcount of 1175: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1184: 19 -> 18
9999 mem: storing 1175 in location 1139
9999 mem: incrementing refcount of 1175: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1175
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1175
9999 mem: location 1140 is 1164
9999 mem: storing 0 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1164
9999 mem: location 1139 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1176
9998 run: its type is "character"
9999 mem: location 1176 is 97
9999 mem: storing 97 in location 1143
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 97
9999 mem: storing 0 in location 1144
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 5
9999 mem: storing 6 in location 1141
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1175
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1182
9999 mem: incrementing refcount of 1175: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1182 is 1175
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1164
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1178
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1178 is 1164
9999 mem: storing 1164 in location 1183
9999 mem: incrementing refcount of 1164: 17 -> 18
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1164
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1164
9999 mem: decrementing refcount of 1175: 19 -> 18
9999 mem: storing 1164 in location 1139
9999 mem: incrementing refcount of 1164: 18 -> 19
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1164
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1164
9999 mem: location 1140 is 1164
9999 mem: storing 1 in location 1142
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1141 is 6
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1426
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 4
9999 mem: storing 4 in location 1427
 106 run: {width: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1427 is 4
9999 mem: location 1416 is 0
9999 mem: storing 4 in location 1428
 106 run: {wrap?: "boolean"} <- greater-than {end-of-line: "number"}, {width: "number"}
9999 mem: location 1426 is 6
9999 mem: location 1428 is 4
9999 mem: storing 1 in location 1429
 106 run: jump-unless {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 1
9998 run: jump-unless fell through
 106 run: _, {column-offset: "number"} <- divide-with-remainder {end-of-line: "number"}, {width: "number"}
9999 mem: location 1426 is 6
9999 mem: location 1428 is 4
9999 mem: storing 2 in location 1430
 106 run: {cursor-column: "number"} <- add {left: "number"}, {column-offset: "number"}
9999 mem: location 1416 is 0
9999 mem: location 1430 is 2
9999 mem: storing 2 in location 1415
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1415 is 2
9999 mem: location 1412 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1154
9999 mem: storing 2 in location 1154
 106 run: jump-if {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 1
9998 run: jumping to instruction 56
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1412 is 1145
9999 mem: location 1418 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 12 -> 11
9999 mem: storing 1145 in location 1337
9999 mem: incrementing refcount of 1145: 11 -> 12
9999 mem: storing 0 in location 1342
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1200
9999 mem: decrementing refcount of 1204: 21 -> 20
9999 mem: storing 1200 in location 1347
9999 mem: incrementing refcount of 1200: 20 -> 21
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1204
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1347 is 1200
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1149
9999 mem: storing 1200 in location 1149
 105 run: {undo-coalesce-tag: "number"} <- copy {1: "literal", "left-arrow": ()}
9999 mem: storing 1 in location 1374
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1375
9999 mem: incrementing refcount of 1164: 19 -> 20
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1348
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1349
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1374 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1337 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1156 is 1330
9999 mem: storing 1330 in location 1356
9999 mem: incrementing refcount of 1330: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1356 is 1330
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1356 is 1330
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1182
9999 mem: incrementing refcount of 1330: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1182 is 1330
9999 mem: skipping refcount at 1330
9999 mem: location 1331 is 1240
9999 mem: location 1332 is 0
9999 mem: location 1182 is 1330
9999 mem: skipping refcount at 1330
9998 run: address to copy is 1331
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1331 is 1240
9999 mem: storing 1240 in location 1183
9999 mem: incrementing refcount of 1240: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1183 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1355
9999 mem: incrementing refcount of 1240: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1355 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 3
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1355 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1362
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1362 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1362 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 3
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 0
9999 mem: location 1362 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1376
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1374 is 1
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1377
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 700
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1431
9999 mem: decrementing refcount of 1240: 5 -> 4
9999 mem: storing 1431 in location 1355
9999 mem: incrementing refcount of 1431: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1371 is 3
9999 mem: location 1372 is 0
9999 mem: location 1373 is 1164
9999 mem: location 1348 is 2
9999 mem: location 1349 is 2
9999 mem: location 1375 is 1164
9999 mem: location 1374 is 1
9999 mem: location 1355 is 1431
9999 mem: skipping refcount at 1431
9999 mem: location 1355 is 1431
9999 mem: skipping refcount at 1431
9999 mem: storing 1 in location 1432
9999 mem: storing 3 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 1164 in location 1435
9999 mem: storing 2 in location 1436
9999 mem: storing 2 in location 1437
9999 mem: storing 1164 in location 1438
9999 mem: storing 1 in location 1439
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1337 is 1145
9999 mem: location 1355 is 1431
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1168
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1171
9999 mem: incrementing refcount of 1145: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1431 in location 1172
9999 mem: incrementing refcount of 1431: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1156 is 1330
9999 mem: storing 1330 in location 1173
9999 mem: incrementing refcount of 1330: 4 -> 5
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1172 is 1431
9999 mem: location 1173 is 1330
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1431 in location 1161
9999 mem: incrementing refcount of 1431: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1330 in location 1162
9999 mem: incrementing refcount of 1330: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1443
9999 mem: storing 1443 in location 1163
9999 mem: incrementing refcount of 1443: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1431
9999 mem: location 1162 is 1330
9999 mem: location 1163 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1163 is 1443
9999 mem: skipping refcount at 1443
9999 mem: storing 1431 in location 1444
9999 mem: storing 1330 in location 1445
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1443
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1443
9999 mem: decrementing refcount of 1330: 6 -> 5
9999 mem: storing 1443 in location 1173
9999 mem: incrementing refcount of 1443: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1330
9999 mem: location 1157 is 0
9999 mem: location 1173 is 1443
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1156
9999 mem: storing 1443 in location 1156
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1443
9999 mem: location 1157 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1174
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1174
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1443
9999 mem: location 1157 is 0
9999 mem: location 1174 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1171 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 13 -> 12
9999 mem: storing 1145 in location 1337
9999 mem: incrementing refcount of 1145: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1336 is 1008
9999 mem: location 1337 is 1145
9999 mem: location 1342 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1317
9999 mem: incrementing refcount of 1008: 70 -> 71
9999 mem: decrementing refcount of 1145: 13 -> 12
9999 mem: storing 1145 in location 1319
9999 mem: incrementing refcount of 1145: 12 -> 13
9999 mem: storing 0 in location 1329
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1443
9999 mem: location 1157 is 0
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1320
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1443
9999 mem: location 1157 is 0
9999 mem: location 1319 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1321
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1317 is 1008
9999 mem: location 1320 is 2
9999 mem: location 1321 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 71 -> 72
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1317
9999 mem: incrementing refcount of 1008: 71 -> 72
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1318 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1278
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1281
9999 mem: incrementing refcount of 1311: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1281 is 1311
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 2
9999 mem: location 1313 is 1301
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "number"
9999 mem: location 1312 is 2
9999 mem: storing 2 in location 1282
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 2
9999 mem: location 1313 is 1301
9999 mem: location 1281 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1313 is 1301
9999 mem: storing 1301 in location 1283
9999 mem: incrementing refcount of 1301: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1283 is 1301
9999 mem: skipping refcount at 1301
9999 mem: storing 2 in location 1284
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1282 is 2
9999 mem: location 1284 is 2
9999 mem: storing 1 in location 1285
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1179
9999 mem: storing 1179 in location 1286
9999 mem: incrementing refcount of 1179: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1286 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1281 is 1311
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1311
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: decrementing refcount of 1311: 4 -> 3
9999 mem: storing 1311 in location 1318
9999 mem: incrementing refcount of 1311: 3 -> 4
9999 mem: storing 1 in location 1326
9999 mem: storing 1 in location 1327
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1317 is 1008
9999 mem: location 1318 is 1311
9999 mem: location 1319 is 1145
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1443
9999 mem: location 1157 is 0
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1200
9999 mem: location 1150 is 0
9999 mem: location 1151 is 4
9999 mem: location 1152 is 3
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1443
9999 mem: location 1157 is 0
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2  # previous row\n    4 <- 2  # end of wrapped line\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
