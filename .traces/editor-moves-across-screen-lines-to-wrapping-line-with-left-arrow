 102 run: screen-should-contain {"\n    .          .\n    .abcd↩     .\n    .ef        .\n    .g         .\n    .┈┈┈┈┈     .\n  ": "literal-string"}
 102 run: assume-console {"\n    left-click 3, 0\n    press left-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {left-arrow: ()}
9992 load: after rewriting: press {left-arrow: ()}
9999 mem: storing 'left-click' event starting at 1317
9999 mem: storing 'press' event starting at 1321
9999 mem: storing console in 1325
9999 mem: storing console data in 1327
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1325
9999 mem: location 2 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1328
9999 mem: storing 14 in location 1329
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 62 -> 63
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1333
9999 mem: incrementing refcount of 1148: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 1
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1164
9999 mem: incrementing refcount of 1008: 63 -> 64
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 63 -> 64
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1325
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1292
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1295
9999 mem: incrementing refcount of 1325: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1295 is 1325
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 0
9999 mem: location 1327 is 1315
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9998 run: its type is "number"
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1296
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 0
9999 mem: location 1327 is 1315
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1327
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1327 is 1315
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 2 in location 1298
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1296 is 0
9999 mem: location 1298 is 2
9999 mem: storing 0 in location 1299
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1296 is 0
9998 run: address to copy is 1317
9998 run: its type is event
9999 mem: location 1317 is 2
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 3
9999 mem: location 1320 is 0
9999 mem: storing 2 in location 1301
9999 mem: storing 65513 in location 1302
9999 mem: storing 3 in location 1303
9999 mem: storing 0 in location 1304
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1296 is 0
9999 mem: storing 1 in location 1296
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 0
9999 mem: location 1327 is 1315
9999 mem: location 1296 is 1
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy to is 1326
9999 mem: storing 1 in location 1326
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1301 is 2
9999 mem: location 1302 is 65513
9999 mem: location 1303 is 3
9999 mem: location 1304 is 0
9999 mem: location 1295 is 1325
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1325
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1336
9999 mem: storing 65513 in location 1337
9999 mem: storing 3 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1325: 2 -> 1
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 1 -> 2
9999 mem: storing 1 in location 1340
9999 mem: storing 0 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1336 is 2
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 3
9999 mem: location 1339 is 0
9999 mem: storing 1337 in location 1342
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 1337
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1331 is 1008
9999 mem: location 1333 is 1148
9999 mem: location 1342 is 1337
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 3
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1344
9999 mem: storing 27 in location 1345
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1347
9999 mem: incrementing refcount of 1008: 64 -> 65
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1348
9999 mem: incrementing refcount of 1148: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1349
9999 mem: storing 3 in location 1350
9999 mem: storing 0 in location 1351
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1348 is 1148
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1349 is 65513
9999 mem: location 1350 is 3
9999 mem: location 1351 is 0
9998 run: address to copy is 1350
9998 run: its type is "number"
9999 mem: location 1350 is 3
9999 mem: storing 3 in location 1352
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1352 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1349 is 65513
9999 mem: location 1350 is 3
9999 mem: location 1351 is 0
9998 run: address to copy is 1351
9998 run: its type is "number"
9999 mem: location 1351 is 0
9999 mem: storing 0 in location 1353
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1354
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1353 is 0
9999 mem: location 1354 is 0
9999 mem: storing 0 in location 1355
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1356
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1353 is 0
9999 mem: location 1356 is 4
9999 mem: storing 0 in location 1357
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1358
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1359
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: storing 1167 in location 1360
9999 mem: incrementing refcount of 1167: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1347 is 1008
9999 mem: location 1348 is 1148
9999 mem: location 1352 is 3
9999 mem: location 1353 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1373
9999 mem: storing 26 in location 1374
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1376
9999 mem: incrementing refcount of 1008: 65 -> 66
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1377
9999 mem: incrementing refcount of 1148: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1378
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1379
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1377 is 1148
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1380
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1381
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1376 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1195
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1195 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1195 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1196
 107 run: return {height: "number"}
9999 mem: location 1196 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1382
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: storing 1167 in location 1383
9999 mem: incrementing refcount of 1167: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1167
9999 mem: storing 1167 in location 1384
9999 mem: incrementing refcount of 1167: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1195
9999 mem: incrementing refcount of 1167: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1167
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1188
9999 mem: location 1170 is 0
9999 mem: location 1195 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1169 is 1188
9999 mem: storing 1188 in location 1196
9999 mem: incrementing refcount of 1188: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 1188 in location 1383
9999 mem: incrementing refcount of 1188: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1385
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1386
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1387
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1387 is 1156
9999 mem: storing 3 in location 1156
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1388
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1379 is 0
9999 mem: location 1388 is 1157
9999 mem: storing 0 in location 1157
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1377 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1389
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1188
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1167
9999 mem: location 1383 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is "character"
9999 mem: location 1189 is 97
9999 mem: storing 97 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 97
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 0
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1195
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1188
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1167
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1190 is 1197
9999 mem: storing 1197 in location 1196
9999 mem: incrementing refcount of 1197: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1188: 15 -> 14
9999 mem: storing 1197 in location 1383
9999 mem: incrementing refcount of 1197: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1195
9999 mem: incrementing refcount of 1167: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1167
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1188
9999 mem: location 1170 is 0
9999 mem: location 1195 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1169 is 1188
9999 mem: storing 1188 in location 1196
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 1188 in location 1384
9999 mem: incrementing refcount of 1188: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 0
9999 mem: storing 1 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1197
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1383 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 98
9999 mem: storing 98 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 98
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1195
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 15 -> 14
9999 mem: storing 1201 in location 1383
9999 mem: incrementing refcount of 1201: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1195
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1188
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1167
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1190 is 1197
9999 mem: storing 1197 in location 1196
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1188: 17 -> 16
9999 mem: storing 1197 in location 1384
9999 mem: incrementing refcount of 1197: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 1
9999 mem: storing 2 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1383 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 99
9999 mem: storing 99 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 99
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 2
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1195
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1196
9999 mem: incrementing refcount of 1205: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 15 -> 14
9999 mem: storing 1205 in location 1383
9999 mem: incrementing refcount of 1205: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1195
9999 mem: incrementing refcount of 1197: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 17 -> 16
9999 mem: storing 1201 in location 1384
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 2
9999 mem: storing 3 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 100
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1383 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 100
9999 mem: storing 100 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 100
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 3
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 100
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1196
9999 mem: incrementing refcount of 1209: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 15 -> 14
9999 mem: storing 1209 in location 1383
9999 mem: incrementing refcount of 1209: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1195
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1196
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 17 -> 16
9999 mem: storing 1205 in location 1384
9999 mem: incrementing refcount of 1205: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 3
9999 mem: storing 4 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 101
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1383 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 101
9999 mem: storing 101 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 101
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 4
9999 mem: location 1381 is 4
9999 mem: storing 1 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1386
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1385 is 1
9999 mem: storing 2 in location 1385
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 2
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 101
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1383 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 101
9999 mem: storing 101 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 101
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 0
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1195
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 101
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1196
9999 mem: incrementing refcount of 1213: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 15 -> 14
9999 mem: storing 1213 in location 1383
9999 mem: incrementing refcount of 1213: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 100
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1196
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 17 -> 16
9999 mem: storing 1209 in location 1384
9999 mem: incrementing refcount of 1209: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 0
9999 mem: storing 1 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 2
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 102
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1383 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 102
9999 mem: storing 102 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 102
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1195
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 102
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1195 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1196
9999 mem: incrementing refcount of 1217: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 15 -> 14
9999 mem: storing 1217 in location 1383
9999 mem: incrementing refcount of 1217: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1195
9999 mem: incrementing refcount of 1209: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 101
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1196
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 17 -> 16
9999 mem: storing 1213 in location 1384
9999 mem: incrementing refcount of 1213: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 1
9999 mem: storing 2 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 2
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 10
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1383 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 10
9999 mem: storing 10 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 10
9999 mem: storing 1 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1385 is 2
9999 mem: storing 3 in location 1385
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1386
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1195
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 10
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1196
9999 mem: incrementing refcount of 1221: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 15 -> 14
9999 mem: storing 1221 in location 1383
9999 mem: incrementing refcount of 1221: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1195
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 102
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1195 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1196
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 17 -> 16
9999 mem: storing 1217 in location 1384
9999 mem: incrementing refcount of 1217: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 3
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 1 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 0
9999 mem: location 1388 is 1157
9999 mem: location 1157 is 0
9999 mem: storing 1 in location 1392
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1217
9999 mem: location 1389 is 1152
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: storing 1217 in location 1152
9999 mem: incrementing refcount of 1217: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1383 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 103
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 0
9999 mem: location 1381 is 4
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1195
9999 mem: incrementing refcount of 1221: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1195 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1196
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1221: 14 -> 13
9999 mem: storing 0 in location 1383
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1195
9999 mem: incrementing refcount of 1217: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 10
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1196
9999 mem: incrementing refcount of 1221: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1196 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 18 -> 17
9999 mem: storing 1221 in location 1384
9999 mem: incrementing refcount of 1221: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 0
9999 mem: storing 1 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 1 in location 1391
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 1
9999 mem: location 1388 is 1157
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1397
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1391 is 1
9999 mem: location 1397 is 0
9999 mem: storing 0 in location 1398
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1399
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: storing 0 in location 1400
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1377 is 1148
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: decrementing refcount of 1148: 9 -> 8
9999 mem: storing 1148 in location 1348
9999 mem: incrementing refcount of 1148: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1361
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1362
9990 schedule: move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-across-screen-lines-to-wrapping-line-with-left-arrow
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1363
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: storing 1167 in location 1364
9999 mem: incrementing refcount of 1167: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 1255 in location 1366
9999 mem: incrementing refcount of 1255: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1358 is 1
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1167
9999 mem: location 1362 is 3
9999 mem: location 1363 is 0
9999 mem: location 1364 is 1167
9999 mem: location 1361 is 0
9999 mem: location 1366 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1366 is 1255
9999 mem: skipping refcount at 1255
9999 mem: storing 1 in location 1256
9999 mem: storing 1 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 1167 in location 1259
9999 mem: storing 3 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 1167 in location 1262
9999 mem: storing 0 in location 1263
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1348 is 1148
9999 mem: location 1366 is 1255
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1181
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1184
9999 mem: incrementing refcount of 1148: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1185
9999 mem: incrementing refcount of 1255: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1186
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1185 is 1255
9999 mem: location 1186 is 1159
9999 mem: location 1159 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1255 in location 1164
9999 mem: incrementing refcount of 1255: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1165
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1401
9999 mem: storing 1401 in location 1166
9999 mem: incrementing refcount of 1401: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1164 is 1255
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1401
9999 mem: skipping refcount at 1401
9999 mem: location 1166 is 1401
9999 mem: skipping refcount at 1401
9999 mem: storing 1255 in location 1402
9999 mem: storing 0 in location 1403
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1166 is 1401
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1401
9999 mem: location 1186 is 1159
9999 mem: storing 1401 in location 1159
9999 mem: incrementing refcount of 1401: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1187 is 1160
9999 mem: storing 0 in location 1160
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1184 is 1148
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: decrementing refcount of 1148: 10 -> 9
9999 mem: storing 1148 in location 1348
9999 mem: incrementing refcount of 1148: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1348 is 1148
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 3
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1164
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 3
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 67 -> 68
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1325
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1292
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1295
9999 mem: incrementing refcount of 1325: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1295 is 1325
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 1
9999 mem: location 1327 is 1315
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9998 run: its type is "number"
9999 mem: location 1326 is 1
9999 mem: storing 1 in location 1296
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 1
9999 mem: location 1327 is 1315
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1327
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1327 is 1315
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 2 in location 1298
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1296 is 1
9999 mem: location 1298 is 2
9999 mem: storing 0 in location 1299
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1296 is 1
9998 run: address to copy is 1321
9998 run: its type is event
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65515
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1301
9999 mem: storing 65515 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1296 is 1
9999 mem: storing 2 in location 1296
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 1
9999 mem: location 1327 is 1315
9999 mem: location 1296 is 2
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy to is 1326
9999 mem: storing 2 in location 1326
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65515
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1295 is 1325
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1325
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1336
9999 mem: storing 65515 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1325: 3 -> 2
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 2 -> 3
9999 mem: storing 1 in location 1340
9999 mem: storing 0 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1336 is 1
9999 mem: location 1337 is 65515
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 0 in location 1342
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1331 is 1008
9999 mem: location 1333 is 1148
9999 mem: location 1336 is 1
9999 mem: location 1337 is 65515
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1404
9999 mem: storing 85 in location 1405
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1408
9999 mem: incrementing refcount of 1148: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1409
9999 mem: storing 65515 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1413
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1408 is 1148
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1195
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1195 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1195 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1196
 106 run: return {width: "number"}
9999 mem: location 1196 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1414
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1195
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1195 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1195 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1196
 106 run: return {height: "number"}
9999 mem: location 1196 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1415
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1416
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1417
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1418
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1419
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1420
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1419 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1421
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1420 is 1157
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1422
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 65515
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1423
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 65515
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 1410 in location 1477
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1477 is 1410
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 0 in location 1440
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1440 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 0 in location 1456
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1456 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 0 in location 1463
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 0 in location 1464
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 0 in location 1478
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 0 in location 1479
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65515
9999 mem: storing 1 in location 1480
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1480 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"left arrow": "literal-string"}
  10 app: left arrow 
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1418 is 1152
9999 mem: location 1152 is 1217
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1195
9999 mem: incrementing refcount of 1217: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1217
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 10
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1213
9999 mem: storing 1213 in location 1196
9999 mem: incrementing refcount of 1213: 16 -> 17
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1481
9999 mem: incrementing refcount of 1213: 17 -> 18
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1413
 105 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1481 is 1213
9998 run: jumping to instruction 682
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1443
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1444
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: storing 1167 in location 1445
9999 mem: incrementing refcount of 1167: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-left {editor: ("address" "shared" "editor-data")}
9999 mem: location 1408 is 1148
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1491
9999 mem: storing 20 in location 1492
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1494
9999 mem: incrementing refcount of 1148: 11 -> 12
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1217
9999 mem: storing 1217 in location 1495
9999 mem: incrementing refcount of 1217: 18 -> 19
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1496
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1497
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1498
 106 run: {at-left-margin?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {left: "number"}
9999 mem: location 1497 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1498 is 0
9999 mem: storing 1 in location 1499
 106 run: jump-if {at-left-margin?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 1
9998 run: jumping to instruction 13
 106 run: {top-of-screen?: "boolean"} <- equal {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1496 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1501
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1500
 106 run: jump-if {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jump-if fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1496 is 1156
9999 mem: location 1156 is 3
9999 mem: location 1496 is 1156
9999 mem: storing 2 in location 1156
 106 run: jump-unless {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 32
 106 run: {previous-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1495 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 10
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1495 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 10
9999 mem: storing 10 in location 1505
 106 run: {previous-character-is-newline?: "boolean"} <- equal {previous-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1505 is 10
9999 mem: storing 1 in location 1506
 106 run: jump-unless {previous-character-is-newline?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"switching to previous line": "literal-string"}
  10 app: switching to previous line 
 106 run: {d: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1167
9999 mem: storing 1167 in location 1507
9999 mem: incrementing refcount of 1167: 14 -> 15
 106 run: {end-of-line: "number"} <- previous-line-length {before-cursor: ("address" "shared" "duplex-list" "character")}, {d: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1495 is 1217
9999 mem: location 1507 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1119
9999 mem: incrementing refcount of 1217: 19 -> 20
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1120
9999 mem: incrementing refcount of 1167: 15 -> 16
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1217
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1217
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1217
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1195
9999 mem: incrementing refcount of 1217: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1217
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 10
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1195 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1213
9999 mem: storing 1213 in location 1196
9999 mem: incrementing refcount of 1213: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1217: 21 -> 20
9999 mem: storing 1213 in location 1119
9999 mem: incrementing refcount of 1213: 19 -> 20
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1213
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1213
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 102
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1119 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 102
9999 mem: storing 102 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 102
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1213
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1195
9999 mem: incrementing refcount of 1213: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1213
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 102
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1195 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 1209
9999 mem: storing 1209 in location 1196
9999 mem: incrementing refcount of 1209: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1213: 21 -> 20
9999 mem: storing 1209 in location 1119
9999 mem: incrementing refcount of 1209: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1209
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1209
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 101
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1119 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 101
9999 mem: storing 101 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 101
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1209
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1195
9999 mem: incrementing refcount of 1209: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1209
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 101
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1195 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1205
9999 mem: storing 1205 in location 1196
9999 mem: incrementing refcount of 1205: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1209: 19 -> 18
9999 mem: storing 1205 in location 1119
9999 mem: incrementing refcount of 1205: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1205
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1205
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 100
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1119 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 100
9999 mem: storing 100 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 100
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1205
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1195
9999 mem: incrementing refcount of 1205: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1205
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 100
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1195 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1201
9999 mem: storing 1201 in location 1196
9999 mem: incrementing refcount of 1201: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1205: 19 -> 18
9999 mem: storing 1201 in location 1119
9999 mem: incrementing refcount of 1201: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1201
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1201
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1119 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 99
9999 mem: storing 99 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 99
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1201
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1195
9999 mem: incrementing refcount of 1201: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1201
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 99
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1197
9999 mem: location 1195 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1197
9999 mem: storing 1197 in location 1196
9999 mem: incrementing refcount of 1197: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1201: 19 -> 18
9999 mem: storing 1197 in location 1119
9999 mem: incrementing refcount of 1197: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1197
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1197
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1119 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 98
9999 mem: storing 98 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 98
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1197
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1195
9999 mem: incrementing refcount of 1197: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1197
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 98
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1188
9999 mem: location 1195 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1188
9999 mem: storing 1188 in location 1196
9999 mem: incrementing refcount of 1188: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1197: 19 -> 18
9999 mem: storing 1188 in location 1119
9999 mem: incrementing refcount of 1188: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1188
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1188
9999 mem: location 1120 is 1167
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1167
9999 mem: location 1119 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is "character"
9999 mem: location 1189 is 97
9999 mem: storing 97 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 97
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1188
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1195
9999 mem: incrementing refcount of 1188: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1188
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 97
9999 mem: location 1190 is 1197
9999 mem: location 1191 is 1167
9999 mem: location 1195 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1167
9999 mem: storing 1167 in location 1196
9999 mem: incrementing refcount of 1167: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1167
9999 mem: decrementing refcount of 1188: 19 -> 18
9999 mem: storing 1167 in location 1119
9999 mem: incrementing refcount of 1167: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1167
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1167
9999 mem: location 1120 is 1167
9999 mem: storing 1 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1121 is 6
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1508
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1217
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1509
 106 run: {width: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1509 is 4
9999 mem: location 1498 is 0
9999 mem: storing 4 in location 1510
 106 run: {wrap?: "boolean"} <- greater-than {end-of-line: "number"}, {width: "number"}
9999 mem: location 1508 is 6
9999 mem: location 1510 is 4
9999 mem: storing 1 in location 1511
 106 run: jump-unless {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 1
9998 run: jump-unless fell through
 106 run: _, {column-offset: "number"} <- divide-with-remainder {end-of-line: "number"}, {width: "number"}
9999 mem: location 1508 is 6
9999 mem: location 1510 is 4
9999 mem: storing 2 in location 1512
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {left: "number"}, {column-offset: "number"}
9999 mem: location 1498 is 0
9999 mem: location 1512 is 2
9999 mem: location 1497 is 1157
9999 mem: storing 2 in location 1157
 106 run: jump-if {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 1
9998 run: jumping to instruction 51
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1494 is 1148
9999 mem: location 1500 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1148: 12 -> 11
9999 mem: storing 1148 in location 1408
9999 mem: incrementing refcount of 1148: 11 -> 12
9999 mem: storing 0 in location 1413
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1481 is 1213
9999 mem: location 1418 is 1152
9999 mem: decrementing refcount of 1217: 20 -> 19
9999 mem: storing 1213 in location 1152
9999 mem: incrementing refcount of 1213: 20 -> 21
 105 run: {undo-coalesce-tag: "number"} <- copy {1: "literal", "left-arrow": ()}
9999 mem: storing 1 in location 1446
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1447
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1448
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: storing 1167 in location 1449
9999 mem: incrementing refcount of 1167: 18 -> 19
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1446 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1408 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1427
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1427 is 1159
9999 mem: location 1159 is 1401
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1427 is 1159
9999 mem: location 1159 is 1401
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1401 in location 1195
9999 mem: incrementing refcount of 1401: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1195 is 1401
9999 mem: skipping refcount at 1401
9999 mem: location 1402 is 1255
9999 mem: location 1403 is 0
9999 mem: location 1195 is 1401
9999 mem: skipping refcount at 1401
9998 run: address to copy is 1402
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1402 is 1255
9999 mem: storing 1255 in location 1196
9999 mem: incrementing refcount of 1255: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1196 is 1255
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1255
9999 mem: storing 1255 in location 1426
9999 mem: incrementing refcount of 1255: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1426 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1167
9999 mem: location 1260 is 3
9999 mem: location 1261 is 0
9999 mem: location 1262 is 1167
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1426 is 1255
9999 mem: skipping refcount at 1255
9999 mem: storing 1257 in location 1432
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1432 is 1257
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1432 is 1257
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1167
9999 mem: location 1260 is 3
9999 mem: location 1261 is 0
9999 mem: location 1262 is 1167
9999 mem: location 1263 is 0
9999 mem: location 1432 is 1257
9998 run: address to copy is 1263
9998 run: its type is "number"
9999 mem: location 1263 is 0
9999 mem: storing 0 in location 1450
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1446 is 1
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1451
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 709
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1513
9999 mem: decrementing refcount of 1255: 5 -> 4
9999 mem: storing 1513 in location 1426
9999 mem: incrementing refcount of 1513: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1443 is 3
9999 mem: location 1444 is 0
9999 mem: location 1445 is 1167
9999 mem: location 1447 is 2
9999 mem: location 1448 is 2
9999 mem: location 1449 is 1167
9999 mem: location 1446 is 1
9999 mem: location 1426 is 1513
9999 mem: skipping refcount at 1513
9999 mem: location 1426 is 1513
9999 mem: skipping refcount at 1513
9999 mem: storing 1 in location 1514
9999 mem: storing 3 in location 1515
9999 mem: storing 0 in location 1516
9999 mem: storing 1167 in location 1517
9999 mem: storing 2 in location 1518
9999 mem: storing 2 in location 1519
9999 mem: storing 1167 in location 1520
9999 mem: storing 1 in location 1521
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1408 is 1148
9999 mem: location 1426 is 1513
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1181
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1148 in location 1184
9999 mem: incrementing refcount of 1148: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1513 in location 1185
9999 mem: incrementing refcount of 1513: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1401
9999 mem: location 1160 is 0
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1186
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1185 is 1513
9999 mem: location 1186 is 1159
9999 mem: location 1159 is 1401
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1513 in location 1164
9999 mem: incrementing refcount of 1513: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1401 in location 1165
9999 mem: incrementing refcount of 1401: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1525
9999 mem: storing 1525 in location 1166
9999 mem: incrementing refcount of 1525: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1164 is 1513
9999 mem: location 1165 is 1401
9999 mem: location 1166 is 1525
9999 mem: skipping refcount at 1525
9999 mem: location 1166 is 1525
9999 mem: skipping refcount at 1525
9999 mem: storing 1513 in location 1526
9999 mem: storing 1401 in location 1527
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1166 is 1525
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1525
9999 mem: location 1186 is 1159
9999 mem: decrementing refcount of 1401: 4 -> 3
9999 mem: storing 1525 in location 1159
9999 mem: incrementing refcount of 1525: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1525
9999 mem: location 1160 is 0
9999 mem: location 1184 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1187 is 1160
9999 mem: storing 0 in location 1160
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1184 is 1148
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: decrementing refcount of 1148: 13 -> 12
9999 mem: storing 1148 in location 1408
9999 mem: incrementing refcount of 1148: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1407 is 1008
9999 mem: location 1408 is 1148
9999 mem: location 1413 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1148
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 70 -> 71
9999 mem: decrementing refcount of 1148: 13 -> 12
9999 mem: storing 1148 in location 1333
9999 mem: incrementing refcount of 1148: 12 -> 13
9999 mem: storing 0 in location 1343
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1525
9999 mem: location 1160 is 0
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1525
9999 mem: location 1160 is 0
9999 mem: location 1333 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1335 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1164
9999 mem: incrementing refcount of 1008: 71 -> 72
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1166
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 71 -> 72
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1325
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1292
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1295
9999 mem: incrementing refcount of 1325: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1295 is 1325
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 2
9999 mem: location 1327 is 1315
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9998 run: its type is "number"
9999 mem: location 1326 is 2
9999 mem: storing 2 in location 1296
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 2
9999 mem: location 1327 is 1315
9999 mem: location 1295 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1327
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1327 is 1315
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 2 in location 1298
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1296 is 2
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1192
9999 mem: storing 1192 in location 1300
9999 mem: incrementing refcount of 1192: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1300 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1295 is 1325
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1325
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1325: 4 -> 3
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 3 -> 4
9999 mem: storing 1 in location 1340
9999 mem: storing 1 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1331 is 1008
9999 mem: location 1332 is 1325
9999 mem: location 1333 is 1148
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1525
9999 mem: location 1160 is 0
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1213
9999 mem: location 1153 is 0
9999 mem: location 1154 is 4
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 2
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1525
9999 mem: location 1160 is 0
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2  # previous row\n    4 <- 2  # end of wrapped line\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
