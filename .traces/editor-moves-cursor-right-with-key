 102 run: assume-console {"\n    press right-arrow\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'press' event starting at 1277
9999 mem: storing 'type' event starting at 1281
9999 mem: storing 'text' tag at 1281
9999 mem: storing character 48 at 1282
9999 mem: storing console in 1285
9999 mem: storing console data in 1287
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1285
9999 mem: location 2 is 1130
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1288
9999 mem: storing 14 in location 1289
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1291
9999 mem: incrementing refcount of 1008: 65 -> 66
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1292
9999 mem: incrementing refcount of 1285: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1293
9999 mem: incrementing refcount of 1130: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1294
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1295
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1291 is 1008
9999 mem: location 1294 is 1
9999 mem: location 1295 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1148
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1146 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1148 is 0
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1291
9999 mem: incrementing refcount of 1008: 66 -> 67
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1292 is 1285
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1252
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1255
9999 mem: incrementing refcount of 1285: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1255 is 1285
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1275
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1286
9998 run: its type is "number"
9999 mem: location 1286 is 0
9999 mem: storing 0 in location 1256
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1275
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1287 is 1275
9999 mem: storing 1275 in location 1257
9999 mem: incrementing refcount of 1275: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1257 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 2 in location 1258
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1256 is 0
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1259
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1259 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1257 is 1275
9999 mem: skipping refcount at 1275
9998 run: base address is 1276
9999 mem: location 1256 is 0
9998 run: address to copy is 1277
9998 run: its type is event
9999 mem: location 1277 is 1
9999 mem: location 1278 is 65514
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1261
9999 mem: storing 65514 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1256 is 0
9999 mem: storing 1 in location 1256
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1275
9999 mem: location 1256 is 1
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy to is 1286
9999 mem: storing 1 in location 1286
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1261 is 1
9999 mem: location 1262 is 65514
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1255 is 1285
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1285
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1296
9999 mem: storing 65514 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: decrementing refcount of 1285: 2 -> 1
9999 mem: storing 1285 in location 1292
9999 mem: incrementing refcount of 1285: 1 -> 2
9999 mem: storing 1 in location 1300
9999 mem: storing 0 in location 1301
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65514
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1302
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1291 is 1008
9999 mem: location 1293 is 1130
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65514
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1304
9999 mem: storing 74 in location 1305
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1307
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1308
9999 mem: incrementing refcount of 1130: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1309
9999 mem: storing 65514 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1313
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1308 is 1130
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1307 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 68 -> 69
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 106 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1314
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1307 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 106 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1315
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 0
9999 mem: storing 0 in location 1316
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 9
9999 mem: storing 9 in location 1317
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1149
9999 mem: storing 1149 in location 1318
9999 mem: incrementing refcount of 1149: 10 -> 11
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1319
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1320
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1319 is 1
9999 mem: storing 1 in location 1321
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1320 is 0
9999 mem: storing 0 in location 1322
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1309 is 1
9999 mem: location 1310 is 65514
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1323
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1309 is 1
9999 mem: location 1310 is 65514
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 1310 in location 1367
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1367 is 1310
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1340
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1351
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1356
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1357
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1368
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 632
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1369
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 0 in location 1370
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 707
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1367 is 1310
9999 mem: location 1310 is 65514
9999 mem: storing 1 in location 1372
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1177
9999 mem: incrementing refcount of 1149: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1149
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1170
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1170
9999 mem: storing 1170 in location 1178
9999 mem: incrementing refcount of 1170: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1373
9999 mem: incrementing refcount of 1170: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1170
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1342
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1343
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1149
9999 mem: storing 1149 in location 1344
9999 mem: incrementing refcount of 1149: 12 -> 13
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1170
9999 mem: decrementing refcount of 1149: 13 -> 12
9999 mem: storing 1170 in location 1318
9999 mem: incrementing refcount of 1170: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1149
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1318 is 1170
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1134
9999 mem: storing 1170 in location 1134
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1308 is 1130
9999 mem: location 1315 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1380
9999 mem: storing 21 in location 1381
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1383
9999 mem: incrementing refcount of 1130: 8 -> 9
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1384
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1170
9999 mem: storing 1170 in location 1385
9999 mem: incrementing refcount of 1170: 15 -> 16
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1386
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1387
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 0
9999 mem: storing 0 in location 1388
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 9
9999 mem: storing 9 in location 1389
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1385 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1149
9999 mem: location 1385 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1171
9998 run: its type is "character"
9999 mem: location 1171 is 97
9999 mem: storing 97 in location 1390
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1390 is 97
9999 mem: storing 0 in location 1391
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 37
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1389 is 9
9999 mem: storing 8 in location 1398
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1387 is 0
9999 mem: location 1398 is 8
9999 mem: storing 0 in location 1399
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 71
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1387 is 0
9999 mem: storing 1 in location 1387
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1387 is 1
9999 mem: location 1383 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1139
9999 mem: storing 1 in location 1139
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1393
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1383 is 1130
9999 mem: location 1393 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1130
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1130: 9 -> 8
9999 mem: storing 1130 in location 1308
9999 mem: incrementing refcount of 1130: 8 -> 9
9999 mem: storing 0 in location 1313
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1307 is 1008
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1148
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1146 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1148 is 0
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1307
9999 mem: incrementing refcount of 1008: 70 -> 71
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1345
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1149
9999 mem: storing 1149 in location 1346
9999 mem: incrementing refcount of 1149: 12 -> 13
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1319
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 1
9999 mem: storing 1 in location 1320
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1345 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1327
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 739
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1215
9999 mem: storing 1215 in location 1326
9999 mem: incrementing refcount of 1215: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1342 is 1
9999 mem: location 1343 is 0
9999 mem: location 1344 is 1149
9999 mem: location 1319 is 1
9999 mem: location 1320 is 1
9999 mem: location 1346 is 1149
9999 mem: location 1345 is 2
9999 mem: location 1326 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1326 is 1215
9999 mem: skipping refcount at 1215
9999 mem: storing 1 in location 1216
9999 mem: storing 1 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 1149 in location 1219
9999 mem: storing 1 in location 1220
9999 mem: storing 1 in location 1221
9999 mem: storing 1149 in location 1222
9999 mem: storing 2 in location 1223
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1308 is 1130
9999 mem: location 1326 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1166
9999 mem: incrementing refcount of 1130: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1167
9999 mem: incrementing refcount of 1215: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1168
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1215
9999 mem: location 1168 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1146
9999 mem: incrementing refcount of 1215: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1147
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1403
9999 mem: storing 1403 in location 1148
9999 mem: incrementing refcount of 1403: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1146 is 1215
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1403
9999 mem: skipping refcount at 1403
9999 mem: location 1148 is 1403
9999 mem: skipping refcount at 1403
9999 mem: storing 1215 in location 1404
9999 mem: storing 0 in location 1405
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1148 is 1403
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1403
9999 mem: storing 1403 in location 1168
9999 mem: incrementing refcount of 1403: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1168 is 1403
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1141
9999 mem: storing 1403 in location 1141
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 1169
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1169
9990 schedule: add-operation/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-right-with-key
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1169 is 0
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1142
9999 mem: storing 0 in location 1142
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1166 is 1130
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1130: 10 -> 9
9999 mem: storing 1130 in location 1308
9999 mem: incrementing refcount of 1130: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1307 is 1008
9999 mem: location 1308 is 1130
9999 mem: location 1313 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1130
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1291
9999 mem: incrementing refcount of 1008: 70 -> 71
9999 mem: decrementing refcount of 1130: 10 -> 9
9999 mem: storing 1130 in location 1293
9999 mem: incrementing refcount of 1130: 9 -> 10
9999 mem: storing 0 in location 1303
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1294
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 1
9999 mem: storing 1 in location 1295
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1291 is 1008
9999 mem: location 1294 is 1
9999 mem: location 1295 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 71 -> 72
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1148
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1146 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1148 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1291
9999 mem: incrementing refcount of 1008: 71 -> 72
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1292 is 1285
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1252
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1255
9999 mem: incrementing refcount of 1285: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1255 is 1285
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 1
9999 mem: location 1287 is 1275
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1286
9998 run: its type is "number"
9999 mem: location 1286 is 1
9999 mem: storing 1 in location 1256
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 1
9999 mem: location 1287 is 1275
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1287 is 1275
9999 mem: storing 1275 in location 1257
9999 mem: incrementing refcount of 1275: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1257 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 2 in location 1258
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1259
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1259 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1257 is 1275
9999 mem: skipping refcount at 1275
9998 run: base address is 1276
9999 mem: location 1256 is 1
9998 run: address to copy is 1281
9998 run: its type is event
9999 mem: location 1281 is 0
9999 mem: location 1282 is 48
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1261
9999 mem: storing 48 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 1
9999 mem: location 1287 is 1275
9999 mem: location 1256 is 2
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy to is 1286
9999 mem: storing 2 in location 1286
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1261 is 0
9999 mem: location 1262 is 48
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1255 is 1285
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1285
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1296
9999 mem: storing 48 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: decrementing refcount of 1285: 3 -> 2
9999 mem: storing 1285 in location 1292
9999 mem: incrementing refcount of 1285: 2 -> 3
9999 mem: storing 1 in location 1300
9999 mem: storing 0 in location 1301
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1296 is 0
9999 mem: location 1297 is 48
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1302
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1291 is 1008
9999 mem: location 1293 is 1130
9999 mem: location 1296 is 0
9999 mem: location 1297 is 48
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1304
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1307
9999 mem: incrementing refcount of 1008: 72 -> 73
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1308
9999 mem: incrementing refcount of 1130: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1309
9999 mem: storing 48 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1313
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1308 is 1130
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1307 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 73 -> 74
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 106 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1314
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1307 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 106 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1315
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 0
9999 mem: storing 0 in location 1316
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 9
9999 mem: storing 9 in location 1317
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1170
9999 mem: storing 1170 in location 1318
9999 mem: incrementing refcount of 1170: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1319
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 1
9999 mem: storing 1 in location 1320
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1319 is 1
9999 mem: storing 1 in location 1321
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1320 is 1
9999 mem: storing 1 in location 1322
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1309 is 0
9999 mem: location 1310 is 48
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 1310 in location 1323
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1323 is 1310
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1324
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1336
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1340
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 164
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1351
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 202
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1352
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 223
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1355
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 245
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1356
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 280
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1357
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 315
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1358
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 354
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1361
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 391
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 0 in location 1365
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 413
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: storing 1 in location 1366
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1313
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1366 is 1
9998 run: jumping to instruction 418
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1149
9999 mem: storing 1149 in location 1344
9999 mem: incrementing refcount of 1149: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1170
9999 mem: storing 1170 in location 1362
9999 mem: incrementing refcount of 1170: 17 -> 18
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1308 is 1130
9999 mem: location 1323 is 1310
9999 mem: location 1310 is 48
9999 mem: location 1307 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1406
9999 mem: storing 31 in location 1407
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1409
9999 mem: incrementing refcount of 1130: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1410
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1411
9999 mem: incrementing refcount of 1008: 75 -> 76
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1170
9999 mem: storing 1170 in location 1412
9999 mem: incrementing refcount of 1170: 18 -> 19
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1410 is 48
9999 mem: location 1412 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1166
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1167
9999 mem: incrementing refcount of 1170: 19 -> 20
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1439
9999 mem: storing 1439 in location 1168
9999 mem: incrementing refcount of 1439: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1166 is 48
9999 mem: location 1168 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1440
9999 mem: storing 48 in location 1440
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1149
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1169
9999 mem: incrementing refcount of 1179: 12 -> 13
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1149
9999 mem: location 1168 is 1439
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy to is 1172
9999 mem: storing 1439 in location 1172
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1167 is 1170
9999 mem: location 1168 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1442
9999 mem: storing 1170 in location 1442
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1170
9999 mem: location 1169 is 1179
9999 mem: location 1168 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy to is 1441
9999 mem: storing 1179 in location 1441
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 1179
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1168 is 1439
9999 mem: location 1169 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy to is 1182
9999 mem: storing 1439 in location 1182
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1170
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1439
9999 mem: location 1173 is 1149
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1439
9999 mem: storing 1439 in location 1178
9999 mem: incrementing refcount of 1439: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1439
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1439
9999 mem: decrementing refcount of 1170: 21 -> 20
9999 mem: storing 1439 in location 1412
9999 mem: incrementing refcount of 1439: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1170
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1412 is 1439
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1134
9999 mem: storing 1439 in location 1134
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1413
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 1
9999 mem: storing 1 in location 1414
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1135
9998 run: its type is "number"
9999 mem: location 1135 is 0
9999 mem: storing 0 in location 1415
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1136
9998 run: its type is "number"
9999 mem: location 1136 is 9
9999 mem: storing 9 in location 1416
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1413 is 1
9999 mem: storing 1 in location 1417
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1414 is 1
9999 mem: storing 1 in location 1418
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 107 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1419
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1411 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 107 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1420
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1416 is 9
9999 mem: storing 8 in location 1421
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1421 is 8
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1414 is 1
9999 mem: storing 2 in location 1414
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 1
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1414 is 2
9999 mem: location 1409 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1139
9999 mem: storing 2 in location 1139
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1439
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1177
9999 mem: incrementing refcount of 1439: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1439
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1179
9999 mem: location 1442 is 1170
9999 mem: location 1177 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1441 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1429
9999 mem: incrementing refcount of 1179: 14 -> 15
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1429 is 1179
9999 mem: storing 0 in location 1430
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 61
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1429 is 1179
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1419 is 10
9999 mem: storing 0 in location 1433
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1439
9999 mem: storing 1439 in location 1435
9999 mem: incrementing refcount of 1439: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1411 is 1008
9999 mem: location 1417 is 1
9999 mem: location 1418 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1148
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1146 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1148 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1418 is 1
9999 mem: storing 1 in location 1436
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 1
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1439
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1179
9999 mem: location 1442 is 1170
9999 mem: location 1435 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1440
9998 run: its type is "character"
9999 mem: location 1440 is 48
9999 mem: storing 48 in location 1437
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 48
9999 mem: storing 0 in location 1438
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 48
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 1
9999 mem: storing 11 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 45 -> 46
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 48
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 11
9999 mem: storing 1038 in location 1249
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 48
9999 mem: location 1232 is 7
9999 mem: location 1249 is 1038
9999 mem: location 1249 is 1038
9999 mem: storing 48 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1250
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1251
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 2
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 1
9999 mem: storing 2 in location 1436
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1435 is 1439
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1177
9999 mem: incrementing refcount of 1439: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1439
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1179
9999 mem: location 1442 is 1170
9999 mem: location 1177 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1441 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1439: 6 -> 5
9999 mem: storing 1179 in location 1435
9999 mem: incrementing refcount of 1179: 16 -> 17
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 2
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1179
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1439
9999 mem: location 1435 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is "character"
9999 mem: location 1180 is 98
9999 mem: storing 98 in location 1437
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 98
9999 mem: storing 0 in location 1438
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 98
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 2
9999 mem: storing 12 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 98
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 12
9999 mem: storing 1040 in location 1249
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 98
9999 mem: location 1232 is 7
9999 mem: location 1249 is 1040
9999 mem: location 1249 is 1040
9999 mem: storing 98 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1250
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1251
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 3
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 2
9999 mem: storing 3 in location 1436
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1435 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1439
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1179: 18 -> 17
9999 mem: storing 1183 in location 1435
9999 mem: incrementing refcount of 1183: 12 -> 13
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 3
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 1183
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1435 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1435 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1437
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1437 is 99
9999 mem: storing 0 in location 1438
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1411 is 1008
9999 mem: location 1437 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 3
9999 mem: storing 13 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 13
9999 mem: storing 1042 in location 1249
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 99
9999 mem: location 1232 is 7
9999 mem: location 1249 is 1042
9999 mem: location 1249 is 1042
9999 mem: storing 99 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1250
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1251
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 4
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1436 is 3
9999 mem: storing 4 in location 1436
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1435 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1177
9999 mem: incrementing refcount of 1183: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1178
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 14 -> 13
9999 mem: storing 0 in location 1435
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1428
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1436 is 4
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 82
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1428
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1409 is 1130
9999 mem: location 1411 is 1008
9999 mem: location 1428 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1130
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1130: 12 -> 11
9999 mem: storing 1130 in location 1308
9999 mem: incrementing refcount of 1130: 11 -> 12
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1307
9999 mem: incrementing refcount of 1008: 81 -> 82
9999 mem: storing 0 in location 1313
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1149
9999 mem: storing 1149 in location 1346
9999 mem: incrementing refcount of 1149: 14 -> 15
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1319
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 2
9999 mem: storing 2 in location 1320
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1308 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1141 is 1403
9999 mem: storing 1403 in location 1327
9999 mem: incrementing refcount of 1403: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1327 is 1403
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1327 is 1403
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1403 in location 1177
9999 mem: incrementing refcount of 1403: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1177 is 1403
9999 mem: skipping refcount at 1403
9999 mem: location 1404 is 1215
9999 mem: location 1405 is 0
9999 mem: location 1177 is 1403
9999 mem: skipping refcount at 1403
9998 run: address to copy is 1404
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1404 is 1215
9999 mem: storing 1215 in location 1178
9999 mem: incrementing refcount of 1215: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1178 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1326
9999 mem: incrementing refcount of 1215: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1326 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 1
9999 mem: location 1217 is 1
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1149
9999 mem: location 1220 is 1
9999 mem: location 1221 is 1
9999 mem: location 1222 is 1149
9999 mem: location 1223 is 2
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1326 is 1215
9999 mem: skipping refcount at 1215
9999 mem: storing 0 in location 1334
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 440
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1362 is 1170
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1439
9999 mem: location 1173 is 1149
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1439
9999 mem: storing 1439 in location 1178
9999 mem: incrementing refcount of 1439: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1439
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1439
9999 mem: storing 1439 in location 1335
9999 mem: incrementing refcount of 1439: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1335 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1439 in location 1177
9999 mem: incrementing refcount of 1439: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1439
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1439
9999 mem: skipping refcount at 1439
9999 mem: location 1440 is 48
9999 mem: location 1441 is 1179
9999 mem: location 1442 is 1170
9999 mem: location 1177 is 1439
9999 mem: skipping refcount at 1439
9998 run: address to copy is 1441
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1441 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 17 -> 18
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1364
9999 mem: incrementing refcount of 1179: 18 -> 19
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1443
9999 mem: decrementing refcount of 1215: 5 -> 4
9999 mem: storing 1443 in location 1326
9999 mem: incrementing refcount of 1443: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1321 is 1
9999 mem: location 1322 is 1
9999 mem: location 1344 is 1149
9999 mem: location 1319 is 1
9999 mem: location 1320 is 2
9999 mem: location 1346 is 1149
9999 mem: location 1335 is 1439
9999 mem: location 1364 is 1179
9999 mem: location 1326 is 1443
9999 mem: skipping refcount at 1443
9999 mem: location 1326 is 1443
9999 mem: skipping refcount at 1443
9999 mem: storing 0 in location 1444
9999 mem: storing 1 in location 1445
9999 mem: storing 1 in location 1446
9999 mem: storing 1149 in location 1447
9999 mem: storing 1 in location 1448
9999 mem: storing 2 in location 1449
9999 mem: storing 1149 in location 1450
9999 mem: storing 1439 in location 1451
9999 mem: storing 1179 in location 1452
9999 mem: storing 1 in location 1453
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1308 is 1130
9999 mem: location 1326 is 1443
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1166
9999 mem: incrementing refcount of 1130: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1443 in location 1167
9999 mem: incrementing refcount of 1443: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1141 is 1403
9999 mem: storing 1403 in location 1168
9999 mem: incrementing refcount of 1403: 4 -> 5
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1443
9999 mem: location 1168 is 1403
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1443 in location 1146
9999 mem: incrementing refcount of 1443: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1403 in location 1147
9999 mem: incrementing refcount of 1403: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1455
9999 mem: storing 1455 in location 1148
9999 mem: incrementing refcount of 1455: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1146 is 1443
9999 mem: location 1147 is 1403
9999 mem: location 1148 is 1455
9999 mem: skipping refcount at 1455
9999 mem: location 1148 is 1455
9999 mem: skipping refcount at 1455
9999 mem: storing 1443 in location 1456
9999 mem: storing 1403 in location 1457
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1148 is 1455
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1455
9999 mem: decrementing refcount of 1403: 6 -> 5
9999 mem: storing 1455 in location 1168
9999 mem: incrementing refcount of 1455: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1403
9999 mem: location 1142 is 0
9999 mem: location 1168 is 1455
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1141
9999 mem: storing 1455 in location 1141
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1455
9999 mem: location 1142 is 0
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 1169
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1169
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1455
9999 mem: location 1142 is 0
9999 mem: location 1169 is 0
9999 mem: location 1166 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1142
9999 mem: storing 0 in location 1142
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1166 is 1130
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1130: 13 -> 12
9999 mem: storing 1130 in location 1308
9999 mem: incrementing refcount of 1130: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1307 is 1008
9999 mem: location 1308 is 1130
9999 mem: location 1313 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1130
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1291
9999 mem: incrementing refcount of 1008: 81 -> 82
9999 mem: decrementing refcount of 1130: 13 -> 12
9999 mem: storing 1130 in location 1293
9999 mem: incrementing refcount of 1130: 12 -> 13
9999 mem: storing 0 in location 1303
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1455
9999 mem: location 1142 is 0
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1294
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 1149
9999 mem: location 1132 is 1149
9999 mem: location 1133 is 0
9999 mem: location 1134 is 1439
9999 mem: location 1135 is 0
9999 mem: location 1136 is 9
9999 mem: location 1137 is 1
9999 mem: location 1138 is 1
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1455
9999 mem: location 1142 is 0
9999 mem: location 1293 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 2
9999 mem: storing 2 in location 1295
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1291 is 1008
9999 mem: location 1294 is 1
9999 mem: location 1295 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1143
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1146
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1147
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1148
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1146 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1148 is 2
9999 mem: location 1146 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1146 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1291
9999 mem: incrementing refcount of 1008: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1292 is 1285
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1252
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1255
9999 mem: incrementing refcount of 1285: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1255 is 1285
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 2
9999 mem: location 1287 is 1275
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1286
9998 run: its type is "number"
9999 mem: location 1286 is 2
9999 mem: storing 2 in location 1256
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 2
9999 mem: location 1287 is 1275
9999 mem: location 1255 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1287 is 1275
9999 mem: storing 1275 in location 1257
9999 mem: incrementing refcount of 1275: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1257 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 2 in location 1258
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1259
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1259 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
9999 mem: storing 1174 in location 1260
9999 mem: incrementing refcount of 1174: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1260 is 1174
9999 mem: skipping refcount at 1174
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1255 is 1285
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1285
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: decrementing refcount of 1285: 4 -> 3
9999 mem: storing 1285 in location 1292
9999 mem: incrementing refcount of 1285: 3 -> 4
9999 mem: storing 1 in location 1300
9999 mem: storing 1 in location 1301
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1291 is 1008
9999 mem: location 1292 is 1285
9999 mem: location 1293 is 1130
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
9990 schedule: run_1001/scenario_editor-moves-cursor-right-with-key
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .a0bc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {3: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
