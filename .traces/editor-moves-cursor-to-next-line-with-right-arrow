 102 run: assume-console {"\n    press right-arrow\n    press right-arrow\n    press right-arrow\n    press right-arrow  # next line\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9999 mem: storing 'press' event starting at 1287
9999 mem: storing 'press' event starting at 1291
9999 mem: storing 'press' event starting at 1295
9999 mem: storing 'press' event starting at 1299
9999 mem: storing console in 1303
9999 mem: storing console data in 1305
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1303
9999 mem: location 2 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1306
9999 mem: storing 14 in location 1307
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1310
9999 mem: incrementing refcount of 1303: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 1
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 0
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 76 -> 77
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1265
9999 mem: incrementing refcount of 1303: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1303
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "number"
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1305 is 1285
9999 mem: storing 1285 in location 1267
9999 mem: incrementing refcount of 1285: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 4 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 0
9999 mem: location 1268 is 4
9999 mem: storing 0 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9998 run: base address is 1286
9999 mem: location 1266 is 0
9998 run: address to copy is 1287
9998 run: its type is event
9999 mem: location 1287 is 1
9999 mem: location 1288 is 65514
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: storing 1 in location 1271
9999 mem: storing 65514 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1266 is 0
9999 mem: storing 1 in location 1266
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1285
9999 mem: location 1266 is 1
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1304
9999 mem: storing 1 in location 1304
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1271 is 1
9999 mem: location 1272 is 65514
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1265 is 1303
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1303
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1314
9999 mem: storing 65514 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1303: 2 -> 1
9999 mem: storing 1303 in location 1310
9999 mem: incrementing refcount of 1303: 1 -> 2
9999 mem: storing 1 in location 1318
9999 mem: storing 0 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1320
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1309 is 1008
9999 mem: location 1311 is 1132
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1322
9999 mem: storing 74 in location 1323
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1327
9999 mem: storing 65514 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1331
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1132
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: return {width: "number"}
9999 mem: location 1180 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1332
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: return {height: "number"}
9999 mem: location 1180 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1334
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1335
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1151
9999 mem: storing 1151 in location 1336
9999 mem: incrementing refcount of 1151: 10 -> 11
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1338
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1337 is 1
9999 mem: storing 1 in location 1339
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1340
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1341
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 1328 in location 1385
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1385 is 1328
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1358
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1369
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1374
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1375
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1386
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 632
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1387
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1388
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 707
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 1 in location 1390
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1151
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1179
9999 mem: incrementing refcount of 1151: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1179 is 1151
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1179 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 167
9999 mem: location 1153 is 1172
9999 mem: location 1154 is 0
9999 mem: location 1179 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1172
9999 mem: storing 1172 in location 1180
9999 mem: incrementing refcount of 1172: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1180 is 1172
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1391
9999 mem: incrementing refcount of 1172: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1391 is 1172
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1360
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1361
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1362
9999 mem: incrementing refcount of 1151: 12 -> 13
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1172
9999 mem: decrementing refcount of 1151: 13 -> 12
9999 mem: storing 1172 in location 1336
9999 mem: incrementing refcount of 1172: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1151
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1336 is 1172
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1136
9999 mem: storing 1172 in location 1136
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1326 is 1132
9999 mem: location 1333 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1398
9999 mem: storing 21 in location 1399
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1401
9999 mem: incrementing refcount of 1132: 8 -> 9
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1402
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1172
9999 mem: storing 1172 in location 1403
9999 mem: incrementing refcount of 1172: 15 -> 16
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1404
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1405
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1406
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1407
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 97
9999 mem: location 1174 is 1181
9999 mem: location 1175 is 1151
9999 mem: location 1403 is 1172
9999 mem: skipping refcount at 1172
9998 run: address to copy is 1173
9998 run: its type is "character"
9999 mem: location 1173 is 97
9999 mem: storing 97 in location 1408
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1408 is 97
9999 mem: storing 0 in location 1409
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 37
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1407 is 9
9999 mem: storing 8 in location 1416
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1405 is 0
9999 mem: location 1416 is 8
9999 mem: storing 0 in location 1417
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 71
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1405 is 0
9999 mem: storing 1 in location 1405
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1405 is 1
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1141
9999 mem: storing 1 in location 1141
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1411
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1401 is 1132
9999 mem: location 1411 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1132: 9 -> 8
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 8 -> 9
9999 mem: storing 0 in location 1331
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 0
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 80 -> 81
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1363
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1364
9999 mem: incrementing refcount of 1151: 12 -> 13
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1338
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1363 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1345
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 739
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1225
9999 mem: storing 1225 in location 1344
9999 mem: incrementing refcount of 1225: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1360 is 1
9999 mem: location 1361 is 0
9999 mem: location 1362 is 1151
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1
9999 mem: location 1364 is 1151
9999 mem: location 1363 is 2
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: storing 1 in location 1226
9999 mem: storing 1 in location 1227
9999 mem: storing 0 in location 1228
9999 mem: storing 1151 in location 1229
9999 mem: storing 1 in location 1230
9999 mem: storing 1 in location 1231
9999 mem: storing 1151 in location 1232
9999 mem: storing 2 in location 1233
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1326 is 1132
9999 mem: location 1344 is 1225
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1165
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1168
9999 mem: incrementing refcount of 1132: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1169
9999 mem: incrementing refcount of 1225: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1170
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1169 is 1225
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1148
9999 mem: incrementing refcount of 1225: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1149
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1421
9999 mem: storing 1421 in location 1150
9999 mem: incrementing refcount of 1421: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1148 is 1225
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1150 is 1421
9999 mem: skipping refcount at 1421
9999 mem: storing 1225 in location 1422
9999 mem: storing 0 in location 1423
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1150 is 1421
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1421
9999 mem: storing 1421 in location 1170
9999 mem: incrementing refcount of 1421: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1170 is 1421
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1143
9999 mem: storing 1421 in location 1143
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1171
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1171
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1171 is 0
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1144
9999 mem: storing 0 in location 1144
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1168 is 1132
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9999 mem: decrementing refcount of 1132: 10 -> 9
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1132
9999 mem: location 1331 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1132
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: decrementing refcount of 1132: 10 -> 9
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 9 -> 10
9999 mem: storing 0 in location 1321
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 81 -> 82
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 81 -> 82
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1265
9999 mem: incrementing refcount of 1303: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1303
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 1
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "number"
9999 mem: location 1304 is 1
9999 mem: storing 1 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 1
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1305 is 1285
9999 mem: storing 1285 in location 1267
9999 mem: incrementing refcount of 1285: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 4 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 1
9999 mem: location 1268 is 4
9999 mem: storing 0 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9998 run: base address is 1286
9999 mem: location 1266 is 1
9998 run: address to copy is 1291
9998 run: its type is event
9999 mem: location 1291 is 1
9999 mem: location 1292 is 65514
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: storing 1 in location 1271
9999 mem: storing 65514 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1266 is 1
9999 mem: storing 2 in location 1266
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 1
9999 mem: location 1305 is 1285
9999 mem: location 1266 is 2
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1304
9999 mem: storing 2 in location 1304
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1271 is 1
9999 mem: location 1272 is 65514
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1265 is 1303
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1303
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1314
9999 mem: storing 65514 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1303: 3 -> 2
9999 mem: storing 1303 in location 1310
9999 mem: incrementing refcount of 1303: 2 -> 3
9999 mem: storing 1 in location 1318
9999 mem: storing 0 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1320
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1309 is 1008
9999 mem: location 1311 is 1132
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1322
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1327
9999 mem: storing 65514 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1331
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1132
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: return {width: "number"}
9999 mem: location 1180 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1332
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: return {height: "number"}
9999 mem: location 1180 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1334
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1335
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1172
9999 mem: storing 1172 in location 1336
9999 mem: incrementing refcount of 1172: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1338
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1337 is 1
9999 mem: storing 1 in location 1339
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1338 is 1
9999 mem: storing 1 in location 1340
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1341
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 1328 in location 1385
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1385 is 1328
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1358
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1369
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1374
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1375
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1386
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 632
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1387
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1388
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 707
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 1 in location 1390
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1172 in location 1179
9999 mem: incrementing refcount of 1172: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1179 is 1172
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1179 is 1172
9999 mem: skipping refcount at 1172
9999 mem: location 1173 is 97
9999 mem: location 1174 is 1181
9999 mem: location 1175 is 1151
9999 mem: location 1179 is 1172
9999 mem: skipping refcount at 1172
9998 run: address to copy is 1174
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1174 is 1181
9999 mem: storing 1181 in location 1180
9999 mem: incrementing refcount of 1181: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1180 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1391
9999 mem: incrementing refcount of 1181: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1391 is 1181
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1360
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1361
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1362
9999 mem: incrementing refcount of 1151: 13 -> 14
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1181
9999 mem: decrementing refcount of 1172: 18 -> 17
9999 mem: storing 1181 in location 1336
9999 mem: incrementing refcount of 1181: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1172
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1336 is 1181
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1136
9999 mem: storing 1181 in location 1136
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1326 is 1132
9999 mem: location 1333 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1398
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1401
9999 mem: incrementing refcount of 1132: 11 -> 12
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1402
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1181
9999 mem: storing 1181 in location 1403
9999 mem: incrementing refcount of 1181: 15 -> 16
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1404
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1405
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1406
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1407
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 98
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1172
9999 mem: location 1403 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is "character"
9999 mem: location 1182 is 98
9999 mem: storing 98 in location 1408
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1408 is 98
9999 mem: storing 0 in location 1409
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 37
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1407 is 9
9999 mem: storing 8 in location 1416
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1416 is 8
9999 mem: storing 0 in location 1417
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 71
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1405 is 1
9999 mem: storing 2 in location 1405
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1405 is 2
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1141
9999 mem: storing 2 in location 1141
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1411
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1401 is 1132
9999 mem: location 1411 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1132: 12 -> 11
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 11 -> 12
9999 mem: storing 0 in location 1331
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 85 -> 86
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1150
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 85 -> 86
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1363
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1364
9999 mem: incrementing refcount of 1151: 14 -> 15
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1338
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1363 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 1421
9999 mem: storing 1421 in location 1345
9999 mem: incrementing refcount of 1421: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1345 is 1421
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1345 is 1421
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1179
9999 mem: incrementing refcount of 1421: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1179 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1225
9999 mem: location 1423 is 0
9999 mem: location 1179 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1422 is 1225
9999 mem: storing 1225 in location 1180
9999 mem: incrementing refcount of 1225: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1180 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1225
9999 mem: storing 1225 in location 1344
9999 mem: incrementing refcount of 1225: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 1
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: storing 1227 in location 1351
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1351 is 1227
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 1
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1351 is 1227
9998 run: address to copy is 1233
9998 run: its type is "number"
9999 mem: location 1233 is 2
9999 mem: storing 2 in location 1365
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1366
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 1
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1337 is 1
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1230
9999 mem: storing 1 in location 1230
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 1
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1338 is 2
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1231
9999 mem: storing 2 in location 1231
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 2
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1364 is 1151
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1232
9999 mem: storing 1151 in location 1232
 105 run: jump {+handle-keyboard-event_1_270+done-adding-move-operation: "label"}
9998 run: jumping to instruction 744
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1132
9999 mem: location 1331 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1132
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: decrementing refcount of 1132: 12 -> 11
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 11 -> 12
9999 mem: storing 0 in location 1321
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 1
9999 mem: location 1313 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 2
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1265
9999 mem: incrementing refcount of 1303: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1303
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 2
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "number"
9999 mem: location 1304 is 2
9999 mem: storing 2 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 2
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1305 is 1285
9999 mem: storing 1285 in location 1267
9999 mem: incrementing refcount of 1285: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 4 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 2
9999 mem: location 1268 is 4
9999 mem: storing 0 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9998 run: base address is 1286
9999 mem: location 1266 is 2
9998 run: address to copy is 1295
9998 run: its type is event
9999 mem: location 1295 is 1
9999 mem: location 1296 is 65514
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: storing 1 in location 1271
9999 mem: storing 65514 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1266 is 2
9999 mem: storing 3 in location 1266
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 2
9999 mem: location 1305 is 1285
9999 mem: location 1266 is 3
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1304
9999 mem: storing 3 in location 1304
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1271 is 1
9999 mem: location 1272 is 65514
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1265 is 1303
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1303
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1314
9999 mem: storing 65514 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1303: 4 -> 3
9999 mem: storing 1303 in location 1310
9999 mem: incrementing refcount of 1303: 3 -> 4
9999 mem: storing 1 in location 1318
9999 mem: storing 0 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1320
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1309 is 1008
9999 mem: location 1311 is 1132
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1322
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1327
9999 mem: storing 65514 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1331
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1132
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: return {width: "number"}
9999 mem: location 1180 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1332
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: return {height: "number"}
9999 mem: location 1180 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1334
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1335
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1181
9999 mem: storing 1181 in location 1336
9999 mem: incrementing refcount of 1181: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1338
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1337 is 1
9999 mem: storing 1 in location 1339
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1338 is 2
9999 mem: storing 2 in location 1340
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1341
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 1328 in location 1385
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1385 is 1328
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1358
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1369
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1374
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1375
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1386
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 632
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-next-line-with-right-arrow
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1387
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1388
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 707
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 1 in location 1390
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1181
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1179
9999 mem: incrementing refcount of 1181: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1179 is 1181
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9999 mem: location 1182 is 98
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1172
9999 mem: location 1179 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1180
9999 mem: incrementing refcount of 1185: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1180 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1391
9999 mem: incrementing refcount of 1185: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1391 is 1185
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1360
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1361
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1362
9999 mem: incrementing refcount of 1151: 15 -> 16
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1185
9999 mem: decrementing refcount of 1181: 18 -> 17
9999 mem: storing 1185 in location 1336
9999 mem: incrementing refcount of 1185: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1181
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1336 is 1185
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1136
9999 mem: storing 1185 in location 1136
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1326 is 1132
9999 mem: location 1333 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1398
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1401
9999 mem: incrementing refcount of 1132: 13 -> 14
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1402
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1185
9999 mem: storing 1185 in location 1403
9999 mem: incrementing refcount of 1185: 15 -> 16
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1404
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1405
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1406
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1407
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1403 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 99
9999 mem: storing 99 in location 1408
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1408 is 99
9999 mem: storing 0 in location 1409
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 37
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1407 is 9
9999 mem: storing 8 in location 1416
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1405 is 2
9999 mem: location 1416 is 8
9999 mem: storing 0 in location 1417
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 71
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1405 is 2
9999 mem: storing 3 in location 1405
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1405 is 3
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1141
9999 mem: storing 3 in location 1141
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1411
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1401 is 1132
9999 mem: location 1411 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1132: 14 -> 13
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 13 -> 14
9999 mem: storing 0 in location 1331
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1150
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 2
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 90 -> 91
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1363
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1364
9999 mem: incrementing refcount of 1151: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 3
9999 mem: storing 3 in location 1338
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1363 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 1421
9999 mem: storing 1421 in location 1345
9999 mem: incrementing refcount of 1421: 4 -> 5
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1345 is 1421
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1345 is 1421
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1179
9999 mem: incrementing refcount of 1421: 5 -> 6
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1179 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1225
9999 mem: location 1423 is 0
9999 mem: location 1179 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1422 is 1225
9999 mem: storing 1225 in location 1180
9999 mem: incrementing refcount of 1225: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1180 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1225
9999 mem: storing 1225 in location 1344
9999 mem: incrementing refcount of 1225: 6 -> 7
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 2
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: storing 1227 in location 1351
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1351 is 1227
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 2
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1351 is 1227
9998 run: address to copy is 1233
9998 run: its type is "number"
9999 mem: location 1233 is 2
9999 mem: storing 2 in location 1365
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1366
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 2
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1337 is 1
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1230
9999 mem: storing 1 in location 1230
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 2
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1338 is 3
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1231
9999 mem: storing 3 in location 1231
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 3
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1364 is 1151
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1232
9999 mem: storing 1151 in location 1232
 105 run: jump {+handle-keyboard-event_1_270+done-adding-move-operation: "label"}
9998 run: jumping to instruction 744
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1132
9999 mem: location 1331 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1132
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 90 -> 91
9999 mem: decrementing refcount of 1132: 14 -> 13
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 13 -> 14
9999 mem: storing 0 in location 1321
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 3
9999 mem: storing 3 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 1
9999 mem: location 1313 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 91 -> 92
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 3
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 92 -> 91
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 91 -> 92
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1265
9999 mem: incrementing refcount of 1303: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1303
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 3
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "number"
9999 mem: location 1304 is 3
9999 mem: storing 3 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 3
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1305 is 1285
9999 mem: storing 1285 in location 1267
9999 mem: incrementing refcount of 1285: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 4 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 3
9999 mem: location 1268 is 4
9999 mem: storing 0 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9998 run: base address is 1286
9999 mem: location 1266 is 3
9998 run: address to copy is 1299
9998 run: its type is event
9999 mem: location 1299 is 1
9999 mem: location 1300 is 65514
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 1 in location 1271
9999 mem: storing 65514 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1266 is 3
9999 mem: storing 4 in location 1266
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 3
9999 mem: location 1305 is 1285
9999 mem: location 1266 is 4
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1304
9999 mem: storing 4 in location 1304
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1271 is 1
9999 mem: location 1272 is 65514
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1265 is 1303
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1303
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1314
9999 mem: storing 65514 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1303: 5 -> 4
9999 mem: storing 1303 in location 1310
9999 mem: incrementing refcount of 1303: 4 -> 5
9999 mem: storing 1 in location 1318
9999 mem: storing 0 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1320
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1309 is 1008
9999 mem: location 1311 is 1132
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1322
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 92 -> 93
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1327
9999 mem: storing 65514 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1331
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1132
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1180
 106 run: return {width: "number"}
9999 mem: location 1180 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1332
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1179
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1179 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1179 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1180
 106 run: return {height: "number"}
9999 mem: location 1180 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1334
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1335
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1185
9999 mem: storing 1185 in location 1336
9999 mem: incrementing refcount of 1185: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 3
9999 mem: storing 3 in location 1338
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1337 is 1
9999 mem: storing 1 in location 1339
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1338 is 3
9999 mem: storing 3 in location 1340
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1341
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65514
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 1328 in location 1385
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1385 is 1328
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1358
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1369
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1374
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1375
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1386
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 632
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1387
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 0 in location 1388
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 707
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1385 is 1328
9999 mem: location 1328 is 65514
9999 mem: storing 1 in location 1390
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1185
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1179
9999 mem: incrementing refcount of 1185: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1179 is 1185
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1179 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 99
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1181
9999 mem: location 1179 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1180
9999 mem: incrementing refcount of 1189: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1180 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1391
9999 mem: incrementing refcount of 1189: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1391 is 1189
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1360
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 3
9999 mem: storing 3 in location 1361
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1362
9999 mem: incrementing refcount of 1151: 17 -> 18
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1189
9999 mem: decrementing refcount of 1185: 18 -> 17
9999 mem: storing 1189 in location 1336
9999 mem: incrementing refcount of 1189: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1185
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1336 is 1189
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1136
9999 mem: storing 1189 in location 1136
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1326 is 1132
9999 mem: location 1333 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1398
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1401
9999 mem: incrementing refcount of 1132: 15 -> 16
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1402
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1189
9999 mem: storing 1189 in location 1403
9999 mem: incrementing refcount of 1189: 15 -> 16
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 1
9999 mem: storing 1 in location 1404
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 3
9999 mem: storing 3 in location 1405
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1406
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1407
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 10
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1403 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 10
9999 mem: storing 10 in location 1408
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1408 is 10
9999 mem: storing 1 in location 1409
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: "number"} <- add {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1404 is 1
9999 mem: storing 2 in location 1404
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 1
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1404 is 2
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1140
9999 mem: storing 2 in location 1140
 106 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 1405
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 3
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1405 is 0
9999 mem: location 1401 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1141
9999 mem: storing 0 in location 1141
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: "number"}, {screen-height: "number"}
9999 mem: location 1404 is 2
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1411
 106 run: jump-if {below-screen?: "boolean"}, {1: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1401 is 1132
9999 mem: location 1411 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1132: 16 -> 15
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 15 -> 16
9999 mem: storing 0 in location 1331
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 95 -> 96
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1149
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1150
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 3
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 95 -> 96
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1363
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1364
9999 mem: incrementing refcount of 1151: 18 -> 19
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1338
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1363 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 1421
9999 mem: storing 1421 in location 1345
9999 mem: incrementing refcount of 1421: 6 -> 7
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1345 is 1421
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1345 is 1421
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1179
9999 mem: incrementing refcount of 1421: 7 -> 8
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1179 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1225
9999 mem: location 1423 is 0
9999 mem: location 1179 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1422 is 1225
9999 mem: storing 1225 in location 1180
9999 mem: incrementing refcount of 1225: 7 -> 8
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1180 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1225
9999 mem: storing 1225 in location 1344
9999 mem: incrementing refcount of 1225: 8 -> 9
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 3
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: storing 1227 in location 1351
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1351 is 1227
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 3
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1351 is 1227
9998 run: address to copy is 1233
9998 run: its type is "number"
9999 mem: location 1233 is 2
9999 mem: storing 2 in location 1365
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1366
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jump-unless fell through
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 1
9999 mem: location 1231 is 3
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1337 is 2
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1230
9999 mem: storing 2 in location 1230
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 2
9999 mem: location 1231 is 3
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1338 is 0
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1231
9999 mem: storing 0 in location 1231
 105 run: {move: ("address" "move-operation"), "lookup": ()} <- put {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1351 is 1227
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 2
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1364 is 1151
9999 mem: location 1351 is 1227
9998 run: address to copy to is 1232
9999 mem: storing 1151 in location 1232
 105 run: jump {+handle-keyboard-event_1_270+done-adding-move-operation: "label"}
9998 run: jumping to instruction 744
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1132
9999 mem: location 1331 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1132
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: decrementing refcount of 1132: 16 -> 15
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 15 -> 16
9999 mem: storing 0 in location 1321
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 2
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 2
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 0
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1265
9999 mem: incrementing refcount of 1303: 5 -> 6
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1303
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 4
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "number"
9999 mem: location 1304 is 4
9999 mem: storing 4 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 4
9999 mem: location 1305 is 1285
9999 mem: location 1265 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1305 is 1285
9999 mem: storing 1285 in location 1267
9999 mem: incrementing refcount of 1285: 5 -> 6
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 4 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 4
9999 mem: location 1268 is 4
9999 mem: storing 1 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1176
9999 mem: storing 1176 in location 1270
9999 mem: incrementing refcount of 1176: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1270 is 1176
9999 mem: skipping refcount at 1176
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1265 is 1303
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1303
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1303: 6 -> 5
9999 mem: storing 1303 in location 1310
9999 mem: incrementing refcount of 1303: 5 -> 6
9999 mem: storing 1 in location 1318
9999 mem: storing 1 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1309 is 1008
9999 mem: location 1310 is 1303
9999 mem: location 1311 is 1132
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1426
9999 mem: storing 'text' tag at 1426
9999 mem: storing character 48 at 1427
9999 mem: storing console in 1430
9999 mem: storing console data in 1432
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1430
9999 mem: location 2 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1306
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 97 -> 98
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1430 in location 1310
9999 mem: incrementing refcount of 1430: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 16 -> 17
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 2
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 98 -> 99
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 2
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 0
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 98 -> 99
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1430
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1430 in location 1265
9999 mem: incrementing refcount of 1430: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1430
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1424
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9998 run: address to copy is 1431
9998 run: its type is "number"
9999 mem: location 1431 is 0
9999 mem: storing 0 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1424
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9998 run: address to copy is 1432
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1432 is 1424
9999 mem: storing 1424 in location 1267
9999 mem: incrementing refcount of 1424: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1424
9999 mem: skipping refcount at 1424
9999 mem: storing 1 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 0
9999 mem: location 1268 is 1
9999 mem: storing 0 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1267 is 1424
9999 mem: skipping refcount at 1424
9998 run: base address is 1425
9999 mem: location 1266 is 0
9998 run: address to copy is 1426
9998 run: its type is event
9999 mem: location 1426 is 0
9999 mem: location 1427 is 48
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: storing 0 in location 1271
9999 mem: storing 48 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1266 is 0
9999 mem: storing 1 in location 1266
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9999 mem: location 1431 is 0
9999 mem: location 1432 is 1424
9999 mem: location 1266 is 1
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9998 run: address to copy to is 1431
9999 mem: storing 1 in location 1431
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 48
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1265 is 1430
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1430
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1314
9999 mem: storing 48 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1430: 2 -> 1
9999 mem: storing 1430 in location 1310
9999 mem: incrementing refcount of 1430: 1 -> 2
9999 mem: storing 1 in location 1318
9999 mem: storing 0 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1314 is 0
9999 mem: location 1315 is 48
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1320
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1309 is 1008
9999 mem: location 1311 is 1132
9999 mem: location 1314 is 0
9999 mem: location 1315 is 48
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1322
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 99 -> 100
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 17 -> 18
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
9999 mem: storing 48 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1331
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1326 is 1132
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1433
9999 mem: storing 3 in location 1434
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1436 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1437
 106 run: return {width: "number"}
9999 mem: location 1437 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1332
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1436 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1437
 106 run: return {height: "number"}
9999 mem: location 1437 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1334
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1335
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1189
9999 mem: storing 1189 in location 1336
9999 mem: incrementing refcount of 1189: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1338
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1337 is 2
9999 mem: storing 2 in location 1339
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1340
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1327 is 0
9999 mem: location 1328 is 48
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 1328 in location 1341
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1341 is 1328
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1342
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1354
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1358
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jumping to instruction 164
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1369
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jumping to instruction 202
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1370
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 223
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1373
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 245
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1374
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 280
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1375
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 315
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1376
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 354
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1379
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 391
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 0 in location 1383
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 413
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: storing 1 in location 1384
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1331
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1384 is 1
9998 run: jumping to instruction 418
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1362
9999 mem: incrementing refcount of 1151: 19 -> 20
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1189
9999 mem: storing 1189 in location 1380
9999 mem: incrementing refcount of 1189: 17 -> 18
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1326 is 1132
9999 mem: location 1341 is 1328
9999 mem: location 1328 is 48
9999 mem: location 1325 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1438
9999 mem: storing 31 in location 1439
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1441
9999 mem: incrementing refcount of 1132: 18 -> 19
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1442
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1443
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1189
9999 mem: storing 1189 in location 1444
9999 mem: incrementing refcount of 1189: 18 -> 19
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1442 is 48
9999 mem: location 1444 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1165
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1168
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1169
9999 mem: incrementing refcount of 1189: 19 -> 20
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1471
9999 mem: storing 1471 in location 1170
9999 mem: incrementing refcount of 1471: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1170 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1168 is 48
9999 mem: location 1170 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy to is 1472
9999 mem: storing 48 in location 1472
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1169 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 10
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1169 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1171
9999 mem: incrementing refcount of 1193: 11 -> 12
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 10
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1170 is 1471
9999 mem: location 1169 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1191
9999 mem: storing 1471 in location 1191
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1170 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 48
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1169 is 1189
9999 mem: location 1170 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy to is 1474
9999 mem: storing 1189 in location 1474
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1170 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 48
9999 mem: location 1473 is 0
9999 mem: location 1474 is 1189
9999 mem: location 1171 is 1193
9999 mem: location 1170 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy to is 1473
9999 mem: storing 1193 in location 1473
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1171 is 1193
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1171 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1189
9999 mem: location 1170 is 1471
9999 mem: location 1171 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy to is 1196
9999 mem: storing 1471 in location 1196
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1189
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1444 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1436
9999 mem: incrementing refcount of 1189: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1436 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1436 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 10
9999 mem: location 1191 is 1471
9999 mem: location 1192 is 1185
9999 mem: location 1436 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1471
9999 mem: storing 1471 in location 1437
9999 mem: incrementing refcount of 1471: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1437 is 1471
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1471
9999 mem: decrementing refcount of 1189: 21 -> 20
9999 mem: storing 1471 in location 1444
9999 mem: incrementing refcount of 1471: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1189
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1444 is 1471
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1136
9999 mem: storing 1471 in location 1136
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1445
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1446
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1137
9998 run: its type is "number"
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1447
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 9
9999 mem: storing 9 in location 1448
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1445 is 2
9999 mem: storing 2 in location 1449
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1446 is 0
9999 mem: storing 0 in location 1450
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1443 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1436 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1437
 107 run: return {width: "number"}
9999 mem: location 1437 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1451
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1443 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1436 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1436 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1437
 107 run: return {height: "number"}
9999 mem: location 1437 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1452
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1448 is 9
9999 mem: storing 8 in location 1453
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1446 is 0
9999 mem: location 1453 is 8
9999 mem: storing 0 in location 1454
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1446 is 0
9999 mem: storing 1 in location 1446
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1446 is 1
9999 mem: location 1441 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1141
9999 mem: storing 1 in location 1141
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1444 is 1471
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1471 in location 1436
9999 mem: incrementing refcount of 1471: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1436 is 1471
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1436 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 48
9999 mem: location 1473 is 1193
9999 mem: location 1474 is 1189
9999 mem: location 1436 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy is 1473
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1473 is 1193
9999 mem: storing 1193 in location 1437
9999 mem: incrementing refcount of 1193: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1437 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1461
9999 mem: incrementing refcount of 1193: 13 -> 14
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1461 is 1193
9999 mem: storing 0 in location 1462
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1462 is 0
9998 run: jumping to instruction 61
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1461 is 1193
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1446 is 1
9999 mem: location 1451 is 10
9999 mem: storing 0 in location 1465
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1444 is 1471
9999 mem: storing 1471 in location 1467
9999 mem: incrementing refcount of 1471: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1443 is 1008
9999 mem: location 1449 is 2
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1149
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
9990 schedule: move-cursor/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-cursor-to-next-line-with-right-arrow
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 2
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 0
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1468
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1460
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1468 is 0
9999 mem: location 1448 is 9
9999 mem: storing 0 in location 1465
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1467 is 1471
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1467 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 48
9999 mem: location 1473 is 1193
9999 mem: location 1474 is 1189
9999 mem: location 1467 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy is 1472
9998 run: its type is "character"
9999 mem: location 1472 is 48
9999 mem: storing 48 in location 1469
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1469 is 48
9999 mem: storing 0 in location 1470
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1443 is 1008
9999 mem: location 1469 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1237
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1240
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1241
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1242
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1244
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1241 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1240 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1246
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1247
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1248
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1248 is 2
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1248 is 2
9999 mem: location 1247 is 5
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1250
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1250 is 0
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1250 is 0
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1241 is 48
9999 mem: storing 0 in location 1251
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1248 is 2
9999 mem: location 1246 is 10
9999 mem: storing 20 in location 1254
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1254 is 20
9999 mem: location 1250 is 0
9999 mem: storing 20 in location 1254
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1255
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1255 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1256
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1241 is 48
9999 mem: storing 0 in location 1257
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1255 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1254 is 20
9999 mem: storing 1056 in location 1259
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1241 is 48
9999 mem: location 1242 is 7
9999 mem: location 1259 is 1056
9999 mem: location 1259 is 1056
9999 mem: storing 48 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1246 is 10
9999 mem: storing 9 in location 1260
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1250 is 0
9999 mem: location 1260 is 9
9999 mem: storing 0 in location 1261
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1250 is 0
9999 mem: storing 1 in location 1250
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 1
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1240 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1468 is 0
9999 mem: storing 1 in location 1468
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1467 is 1471
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1471 in location 1436
9999 mem: incrementing refcount of 1471: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1436 is 1471
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1436 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 48
9999 mem: location 1473 is 1193
9999 mem: location 1474 is 1189
9999 mem: location 1436 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy is 1473
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1473 is 1193
9999 mem: storing 1193 in location 1437
9999 mem: incrementing refcount of 1193: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1437 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1471: 6 -> 5
9999 mem: storing 1193 in location 1467
9999 mem: incrementing refcount of 1193: 15 -> 16
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1460
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1468 is 1
9999 mem: location 1448 is 9
9999 mem: storing 0 in location 1465
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1467 is 1193
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1467 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1471
9999 mem: location 1467 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is "character"
9999 mem: location 1194 is 100
9999 mem: storing 100 in location 1469
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1469 is 100
9999 mem: storing 0 in location 1470
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1443 is 1008
9999 mem: location 1469 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1237
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1240
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1241
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1242
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1244
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1241 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1240 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1246
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1247
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1248
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1248 is 2
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1248 is 2
9999 mem: location 1247 is 5
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1250
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1250 is 1
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1250 is 1
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1249
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1249 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1241 is 100
9999 mem: storing 0 in location 1251
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1248 is 2
9999 mem: location 1246 is 10
9999 mem: storing 20 in location 1254
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1254 is 20
9999 mem: location 1250 is 1
9999 mem: storing 21 in location 1254
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1255
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1255 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1256
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1241 is 100
9999 mem: storing 0 in location 1257
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1255 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1254 is 21
9999 mem: storing 1058 in location 1259
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1241 is 100
9999 mem: location 1242 is 7
9999 mem: location 1259 is 1058
9999 mem: location 1259 is 1058
9999 mem: storing 100 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1246 is 10
9999 mem: storing 9 in location 1260
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1
9999 mem: location 1260 is 9
9999 mem: storing 0 in location 1261
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1250 is 1
9999 mem: storing 2 in location 1250
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 2
9999 mem: location 1240 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1240 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1468 is 1
9999 mem: storing 2 in location 1468
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1467 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1436
9999 mem: incrementing refcount of 1193: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1436 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1436 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 0
9999 mem: location 1196 is 1471
9999 mem: location 1436 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1437
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1437 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1193: 17 -> 16
9999 mem: storing 0 in location 1467
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1460
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1468 is 2
9999 mem: location 1448 is 9
9999 mem: storing 0 in location 1465
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1467 is 0
9998 run: jumping to instruction 82
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1460
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1441 is 1132
9999 mem: location 1443 is 1008
9999 mem: location 1460 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1132: 19 -> 18
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 18 -> 19
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1325
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: storing 0 in location 1331
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1134
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1134 is 1151
9999 mem: storing 1151 in location 1364
9999 mem: incrementing refcount of 1151: 20 -> 21
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1337
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1338
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1326 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 1421
9999 mem: storing 1421 in location 1345
9999 mem: incrementing refcount of 1421: 8 -> 9
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1345 is 1421
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1345 is 1421
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1436
9999 mem: incrementing refcount of 1421: 9 -> 10
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1436 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1225
9999 mem: location 1423 is 0
9999 mem: location 1436 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1422 is 1225
9999 mem: storing 1225 in location 1437
9999 mem: incrementing refcount of 1225: 9 -> 10
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1437 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1225
9999 mem: storing 1225 in location 1344
9999 mem: incrementing refcount of 1225: 10 -> 11
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 1
9999 mem: location 1227 is 1
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1151
9999 mem: location 1230 is 2
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1151
9999 mem: location 1233 is 2
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1344 is 1225
9999 mem: skipping refcount at 1225
9999 mem: storing 0 in location 1352
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 440
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1380 is 1189
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1436
9999 mem: incrementing refcount of 1189: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1436 is 1189
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1436 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 10
9999 mem: location 1191 is 1471
9999 mem: location 1192 is 1185
9999 mem: location 1436 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1471
9999 mem: storing 1471 in location 1437
9999 mem: incrementing refcount of 1471: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1437 is 1471
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1471
9999 mem: storing 1471 in location 1353
9999 mem: incrementing refcount of 1471: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1353 is 1471
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1471 in location 1436
9999 mem: incrementing refcount of 1471: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1436 is 1471
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1436 is 1471
9999 mem: skipping refcount at 1471
9999 mem: location 1472 is 48
9999 mem: location 1473 is 1193
9999 mem: location 1474 is 1189
9999 mem: location 1436 is 1471
9999 mem: skipping refcount at 1471
9998 run: address to copy is 1473
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1473 is 1193
9999 mem: storing 1193 in location 1437
9999 mem: incrementing refcount of 1193: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1437 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1382
9999 mem: incrementing refcount of 1193: 17 -> 18
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1475
9999 mem: decrementing refcount of 1225: 11 -> 10
9999 mem: storing 1475 in location 1344
9999 mem: incrementing refcount of 1475: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1339 is 2
9999 mem: location 1340 is 0
9999 mem: location 1362 is 1151
9999 mem: location 1337 is 2
9999 mem: location 1338 is 1
9999 mem: location 1364 is 1151
9999 mem: location 1353 is 1471
9999 mem: location 1382 is 1193
9999 mem: location 1344 is 1475
9999 mem: skipping refcount at 1475
9999 mem: location 1344 is 1475
9999 mem: skipping refcount at 1475
9999 mem: storing 0 in location 1476
9999 mem: storing 2 in location 1477
9999 mem: storing 0 in location 1478
9999 mem: storing 1151 in location 1479
9999 mem: storing 2 in location 1480
9999 mem: storing 1 in location 1481
9999 mem: storing 1151 in location 1482
9999 mem: storing 1471 in location 1483
9999 mem: storing 1193 in location 1484
9999 mem: storing 1 in location 1485
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1326 is 1132
9999 mem: location 1344 is 1475
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1165
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1168
9999 mem: incrementing refcount of 1132: 19 -> 20
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1475 in location 1169
9999 mem: incrementing refcount of 1475: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1143
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1143 is 1421
9999 mem: storing 1421 in location 1170
9999 mem: incrementing refcount of 1421: 10 -> 11
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1169 is 1475
9999 mem: location 1170 is 1421
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1475 in location 1148
9999 mem: incrementing refcount of 1475: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1149
9999 mem: incrementing refcount of 1421: 11 -> 12
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1487
9999 mem: storing 1487 in location 1150
9999 mem: incrementing refcount of 1487: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1148 is 1475
9999 mem: location 1149 is 1421
9999 mem: location 1150 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1150 is 1487
9999 mem: skipping refcount at 1487
9999 mem: storing 1475 in location 1488
9999 mem: storing 1421 in location 1489
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1150 is 1487
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1487
9999 mem: decrementing refcount of 1421: 12 -> 11
9999 mem: storing 1487 in location 1170
9999 mem: incrementing refcount of 1487: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1421
9999 mem: location 1144 is 0
9999 mem: location 1170 is 1487
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1143
9999 mem: storing 1487 in location 1143
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1487
9999 mem: location 1144 is 0
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1171
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1171
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1487
9999 mem: location 1144 is 0
9999 mem: location 1171 is 0
9999 mem: location 1168 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy to is 1144
9999 mem: storing 0 in location 1144
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1168 is 1132
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1132
9999 mem: decrementing refcount of 1132: 20 -> 19
9999 mem: storing 1132 in location 1326
9999 mem: incrementing refcount of 1132: 19 -> 20
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1325 is 1008
9999 mem: location 1326 is 1132
9999 mem: location 1331 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1132
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: decrementing refcount of 1132: 20 -> 19
9999 mem: storing 1132 in location 1311
9999 mem: incrementing refcount of 1132: 19 -> 20
9999 mem: storing 0 in location 1321
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1487
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 2
9999 mem: storing 2 in location 1312
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9999 mem: location 1133 is 1151
9999 mem: location 1134 is 1151
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1471
9999 mem: location 1137 is 0
9999 mem: location 1138 is 9
9999 mem: location 1139 is 2
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1487
9999 mem: location 1144 is 0
9999 mem: location 1311 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1309 is 1008
9999 mem: location 1312 is 2
9999 mem: location 1313 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1145
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1148
9999 mem: incrementing refcount of 1008: 108 -> 109
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1149
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1148 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1149 is 2
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 1
9999 mem: location 1148 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1148 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 1008 in location 1309
9999 mem: incrementing refcount of 1008: 108 -> 109
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1310 is 1430
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1262
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1430 in location 1265
9999 mem: incrementing refcount of 1430: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1265 is 1430
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9999 mem: location 1431 is 1
9999 mem: location 1432 is 1424
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9998 run: address to copy is 1431
9998 run: its type is "number"
9999 mem: location 1431 is 1
9999 mem: storing 1 in location 1266
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9999 mem: location 1431 is 1
9999 mem: location 1432 is 1424
9999 mem: location 1265 is 1430
9999 mem: skipping refcount at 1430
9998 run: address to copy is 1432
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1432 is 1424
9999 mem: storing 1424 in location 1267
9999 mem: incrementing refcount of 1424: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1267 is 1424
9999 mem: skipping refcount at 1424
9999 mem: storing 1 in location 1268
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1266 is 1
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1433
9999 mem: storing 1433 in location 1270
9999 mem: incrementing refcount of 1433: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1270 is 1433
9999 mem: skipping refcount at 1433
9999 mem: location 1434 is 0
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1265 is 1430
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1430
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: decrementing refcount of 1430: 3 -> 2
9999 mem: storing 1430 in location 1310
9999 mem: incrementing refcount of 1430: 2 -> 3
9999 mem: storing 1 in location 1318
9999 mem: storing 1 in location 1319
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1309 is 1008
9999 mem: location 1310 is 1430
9999 mem: location 1311 is 1132
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .0d        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {2: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
