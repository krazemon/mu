 102 run: assume-console {"\n    press right-arrow\n    press right-arrow\n    press right-arrow\n    press right-arrow  # next line\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9999 mem: storing 'press' event starting at 1312
9999 mem: storing 'press' event starting at 1316
9999 mem: storing 'press' event starting at 1320
9999 mem: storing 'press' event starting at 1324
9999 mem: storing console in 1328
9999 mem: storing console data in 1330
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1328
9999 mem: location 2 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1331
9999 mem: storing 14 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1328 in location 1335
9999 mem: incrementing refcount of 1328: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 76 -> 77
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1328
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1328 in location 1282
9999 mem: incrementing refcount of 1328: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1328
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1330
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1330 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 4 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 0
9999 mem: location 1285 is 4
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 0
9998 run: address to copy is 1312
9998 run: its type is event
9999 mem: location 1312 is 1
9999 mem: location 1313 is 65514
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1 in location 1288
9999 mem: storing 65514 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 0
9999 mem: location 1283 is 1329
9999 mem: storing 1 in location 1329
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65514
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1328
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1328
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1339
9999 mem: storing 65514 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1328: 2 -> 1
9999 mem: storing 1328 in location 1335
9999 mem: incrementing refcount of 1328: 1 -> 2
9999 mem: storing 1 in location 1343
9999 mem: storing 0 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1345
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1334 is 1008
9999 mem: location 1336 is 1145
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1347
9999 mem: storing 85 in location 1348
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1352
9999 mem: storing 65514 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1351 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1357
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1358
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1359
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1360
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1361
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1362
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1363
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1364
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1365
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1366
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 1353 in location 1420
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1420 is 1353
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1383
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1399
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1406
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1407
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1421
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 1 in location 1425
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1361 is 1149
9999 mem: location 1149 is 1164
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 10 -> 11
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1426
9999 mem: incrementing refcount of 1185: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1426 is 1185
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1386
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1387
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1388
9999 mem: incrementing refcount of 1164: 11 -> 12
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1426 is 1185
9999 mem: location 1361 is 1149
9999 mem: decrementing refcount of 1164: 12 -> 11
9999 mem: storing 1185 in location 1149
9999 mem: incrementing refcount of 1185: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1351 is 1145
9999 mem: location 1358 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1434
9999 mem: storing 21 in location 1435
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1437
9999 mem: incrementing refcount of 1145: 8 -> 9
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1438
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1185
9999 mem: storing 1185 in location 1439
9999 mem: incrementing refcount of 1185: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1440
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1441
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1442
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1443
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1439 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1439 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 97
9999 mem: storing 97 in location 1444
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1444 is 97
9999 mem: storing 0 in location 1445
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1445 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1443 is 9
9999 mem: storing 8 in location 1452
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1441 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1452 is 8
9999 mem: storing 0 in location 1453
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 63
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1441 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1441 is 1154
9999 mem: storing 1 in location 1154
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1447
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1145
9999 mem: location 1447 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 9 -> 8
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 8 -> 9
9999 mem: storing 0 in location 1356
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1008
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 80 -> 81
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1389
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1390
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1391
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1392
9999 mem: incrementing refcount of 1164: 11 -> 12
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1370
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 0
9998 run: jumping to instruction 750
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
9999 mem: storing 1240 in location 1369
9999 mem: incrementing refcount of 1240: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 0
9999 mem: location 1388 is 1164
9999 mem: location 1390 is 1
9999 mem: location 1391 is 1
9999 mem: location 1392 is 1164
9999 mem: location 1389 is 2
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1 in location 1241
9999 mem: storing 1 in location 1242
9999 mem: storing 0 in location 1243
9999 mem: storing 1164 in location 1244
9999 mem: storing 1 in location 1245
9999 mem: storing 1 in location 1246
9999 mem: storing 1164 in location 1247
9999 mem: storing 2 in location 1248
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1351 is 1145
9999 mem: location 1369 is 1240
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1182
9999 mem: incrementing refcount of 1240: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1182 is 1240
9999 mem: location 1183 is 1156
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1161
9999 mem: incrementing refcount of 1240: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1162
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1457
9999 mem: storing 1457 in location 1163
9999 mem: incrementing refcount of 1457: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1240
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1163 is 1457
9999 mem: skipping refcount at 1457
9999 mem: storing 1240 in location 1458
9999 mem: storing 0 in location 1459
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1457
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: location 1183 is 1156
9999 mem: storing 1457 in location 1156
9999 mem: incrementing refcount of 1457: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1184 is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1181 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 10 -> 9
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1350 is 1008
9999 mem: location 1351 is 1145
9999 mem: location 1356 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: decrementing refcount of 1145: 10 -> 9
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 9 -> 10
9999 mem: storing 0 in location 1346
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 81 -> 82
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 81 -> 82
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1328
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1328 in location 1282
9999 mem: incrementing refcount of 1328: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1328
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 1
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 1
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1330
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1330 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 4 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 1
9999 mem: location 1285 is 4
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 1
9998 run: address to copy is 1316
9998 run: its type is event
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65514
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1288
9999 mem: storing 65514 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 1
9999 mem: location 1283 is 1329
9999 mem: storing 2 in location 1329
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65514
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1328
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1328
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1339
9999 mem: storing 65514 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1328: 3 -> 2
9999 mem: storing 1328 in location 1335
9999 mem: incrementing refcount of 1328: 2 -> 3
9999 mem: storing 1 in location 1343
9999 mem: storing 0 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1345
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1334 is 1008
9999 mem: location 1336 is 1145
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1347
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1352
9999 mem: storing 65514 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1351 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1357
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1358
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1359
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1360
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1361
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1362
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1363
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1364
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1365
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1366
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 1353 in location 1420
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1420 is 1353
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1383
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1399
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1406
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1407
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1421
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 1 in location 1425
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1361 is 1149
9999 mem: location 1149 is 1185
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1194
9999 mem: storing 1194 in location 1426
9999 mem: incrementing refcount of 1194: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1426 is 1194
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1386
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1387
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1388
9999 mem: incrementing refcount of 1164: 12 -> 13
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1426 is 1194
9999 mem: location 1361 is 1149
9999 mem: decrementing refcount of 1185: 17 -> 16
9999 mem: storing 1194 in location 1149
9999 mem: incrementing refcount of 1194: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1351 is 1145
9999 mem: location 1358 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1434
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1437
9999 mem: incrementing refcount of 1145: 11 -> 12
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1438
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1194
9999 mem: storing 1194 in location 1439
9999 mem: incrementing refcount of 1194: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1440
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1441
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1442
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1443
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1439 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1439 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 98
9999 mem: storing 98 in location 1444
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1444 is 98
9999 mem: storing 0 in location 1445
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1445 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1443 is 9
9999 mem: storing 8 in location 1452
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1441 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1452 is 8
9999 mem: storing 0 in location 1453
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 63
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1441 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1441 is 1154
9999 mem: storing 2 in location 1154
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1447
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1145
9999 mem: location 1447 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 12 -> 11
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 11 -> 12
9999 mem: storing 0 in location 1356
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1008
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 85 -> 86
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
9990 schedule: move-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-next-line-with-right-arrow
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 85 -> 86
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1389
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1390
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1391
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1392
9999 mem: incrementing refcount of 1164: 13 -> 14
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1370
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1192
9999 mem: incrementing refcount of 1457: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 1240
9999 mem: location 1459 is 0
9999 mem: location 1192 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1458 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1369
9999 mem: incrementing refcount of 1240: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1375
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1375 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 2
9999 mem: storing 2 in location 1393
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1389 is 2
9999 mem: location 1393 is 2
9999 mem: storing 1 in location 1394
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 1
9998 run: jump-unless fell through
 105 run: {after-row: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1395
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {after-cursor-row: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1395 is 1245
9999 mem: storing 1 in location 1245
 105 run: {after-column: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1246
9999 mem: storing 1246 in location 1396
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {after-cursor-column: "number"}
9999 mem: location 1391 is 2
9999 mem: location 1396 is 1246
9999 mem: storing 2 in location 1246
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1247
9999 mem: storing 1247 in location 1397
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: location 1397 is 1247
9999 mem: decrementing refcount of 1164: 14 -> 13
9999 mem: storing 1164 in location 1247
9999 mem: incrementing refcount of 1164: 13 -> 14
 105 run: jump {+handle-keyboard-event_1_264+done-adding-move-operation: "label"}
9998 run: jumping to instruction 755
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1350 is 1008
9999 mem: location 1351 is 1145
9999 mem: location 1356 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: decrementing refcount of 1145: 12 -> 11
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 11 -> 12
9999 mem: storing 0 in location 1346
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1328
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1328 in location 1282
9999 mem: incrementing refcount of 1328: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1328
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 2
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 2
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1330
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1330 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 4 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 2
9999 mem: location 1285 is 4
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 2
9998 run: address to copy is 1320
9998 run: its type is event
9999 mem: location 1320 is 1
9999 mem: location 1321 is 65514
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: storing 1 in location 1288
9999 mem: storing 65514 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 2
9999 mem: location 1283 is 1329
9999 mem: storing 3 in location 1329
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65514
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1328
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1328
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1339
9999 mem: storing 65514 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1328: 4 -> 3
9999 mem: storing 1328 in location 1335
9999 mem: incrementing refcount of 1328: 3 -> 4
9999 mem: storing 1 in location 1343
9999 mem: storing 0 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1345
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1334 is 1008
9999 mem: location 1336 is 1145
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1347
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1352
9999 mem: storing 65514 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1351 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1357
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1358
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1359
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1360
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1361
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1362
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1363
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1364
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1365
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1366
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 1353 in location 1420
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1420 is 1353
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1383
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1399
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1406
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1407
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1421
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 1 in location 1425
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1361 is 1149
9999 mem: location 1149 is 1194
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1426
9999 mem: incrementing refcount of 1198: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1426 is 1198
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1386
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1387
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1388
9999 mem: incrementing refcount of 1164: 14 -> 15
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1426 is 1198
9999 mem: location 1361 is 1149
9999 mem: decrementing refcount of 1194: 17 -> 16
9999 mem: storing 1198 in location 1149
9999 mem: incrementing refcount of 1198: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1351 is 1145
9999 mem: location 1358 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1434
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1437
9999 mem: incrementing refcount of 1145: 13 -> 14
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1438
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1198
9999 mem: storing 1198 in location 1439
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1440
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1441
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1442
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1443
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1439 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1439 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 99
9999 mem: storing 99 in location 1444
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1444 is 99
9999 mem: storing 0 in location 1445
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1445 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1443 is 9
9999 mem: storing 8 in location 1452
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1441 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1452 is 8
9999 mem: storing 0 in location 1453
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 63
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1441 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1441 is 1154
9999 mem: storing 3 in location 1154
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1447
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1145
9999 mem: location 1447 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 14 -> 13
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 13 -> 14
9999 mem: storing 0 in location 1356
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1008
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 90 -> 91
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1389
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1390
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1391
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1392
9999 mem: incrementing refcount of 1164: 15 -> 16
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1370
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1192
9999 mem: incrementing refcount of 1457: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 1240
9999 mem: location 1459 is 0
9999 mem: location 1192 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1458 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1369
9999 mem: incrementing refcount of 1240: 6 -> 7
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1375
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1375 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 2
9999 mem: storing 2 in location 1393
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1389 is 2
9999 mem: location 1393 is 2
9999 mem: storing 1 in location 1394
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 1
9998 run: jump-unless fell through
 105 run: {after-row: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1395
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {after-cursor-row: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1395 is 1245
9999 mem: storing 1 in location 1245
 105 run: {after-column: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1246
9999 mem: storing 1246 in location 1396
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {after-cursor-column: "number"}
9999 mem: location 1391 is 3
9999 mem: location 1396 is 1246
9999 mem: storing 3 in location 1246
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1247
9999 mem: storing 1247 in location 1397
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: location 1397 is 1247
9999 mem: decrementing refcount of 1164: 16 -> 15
9999 mem: storing 1164 in location 1247
9999 mem: incrementing refcount of 1164: 15 -> 16
 105 run: jump {+handle-keyboard-event_1_264+done-adding-move-operation: "label"}
9998 run: jumping to instruction 755
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1350 is 1008
9999 mem: location 1351 is 1145
9999 mem: location 1356 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 90 -> 91
9999 mem: decrementing refcount of 1145: 14 -> 13
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 13 -> 14
9999 mem: storing 0 in location 1346
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 91 -> 92
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 92 -> 91
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 91 -> 92
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1328
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1328 in location 1282
9999 mem: incrementing refcount of 1328: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1328
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 3
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 3
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1330
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1330 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 4 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 3
9999 mem: location 1285 is 4
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 3
9998 run: address to copy is 1324
9998 run: its type is event
9999 mem: location 1324 is 1
9999 mem: location 1325 is 65514
9999 mem: location 1326 is 0
9999 mem: location 1327 is 0
9999 mem: storing 1 in location 1288
9999 mem: storing 65514 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 3
9999 mem: location 1283 is 1329
9999 mem: storing 4 in location 1329
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65514
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1328
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1328
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1339
9999 mem: storing 65514 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1328: 5 -> 4
9999 mem: storing 1328 in location 1335
9999 mem: incrementing refcount of 1328: 4 -> 5
9999 mem: storing 1 in location 1343
9999 mem: storing 0 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1345
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1334 is 1008
9999 mem: location 1336 is 1145
9999 mem: location 1339 is 1
9999 mem: location 1340 is 65514
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1347
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 92 -> 93
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1352
9999 mem: storing 65514 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1351 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1357
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1358
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1359
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1360
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1361
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1362
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1363
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1364
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1365
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1366
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 1353 in location 1420
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1420 is 1353
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1383
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1399
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1406
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1407
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1421
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 1 in location 1425
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1361 is 1149
9999 mem: location 1149 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1426
9999 mem: incrementing refcount of 1202: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1426 is 1202
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1386
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1387
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1388
9999 mem: incrementing refcount of 1164: 16 -> 17
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1426 is 1202
9999 mem: location 1361 is 1149
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1202 in location 1149
9999 mem: incrementing refcount of 1202: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1351 is 1145
9999 mem: location 1358 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1434
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1437
9999 mem: incrementing refcount of 1145: 15 -> 16
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1438
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1202
9999 mem: storing 1202 in location 1439
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1440
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1441
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1442
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1437 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1443
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1439 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1439 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1444
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1444 is 10
9999 mem: storing 1 in location 1445
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1445 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1440 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1440 is 1153
9999 mem: storing 2 in location 1153
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1442 is 0
9999 mem: location 1441 is 1154
9999 mem: storing 0 in location 1154
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {screen-height: "number"}
9999 mem: location 1440 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1438 is 5
9999 mem: storing 0 in location 1446
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1447
 106 run: jump-if {below-screen?: "boolean"}, {1: "offset"}
9999 mem: location 1446 is 0
9998 run: jump-if fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1145
9999 mem: location 1447 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 16 -> 15
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 15 -> 16
9999 mem: storing 0 in location 1356
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1008
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 95 -> 96
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 95 -> 96
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1389
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1390
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1391
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1392
9999 mem: incrementing refcount of 1164: 17 -> 18
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1370
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1192
9999 mem: incrementing refcount of 1457: 4 -> 5
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 1240
9999 mem: location 1459 is 0
9999 mem: location 1192 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1458 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 7 -> 8
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1369
9999 mem: incrementing refcount of 1240: 8 -> 9
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1375
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1375 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 2
9999 mem: storing 2 in location 1393
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1389 is 2
9999 mem: location 1393 is 2
9999 mem: storing 1 in location 1394
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 1
9998 run: jump-unless fell through
 105 run: {after-row: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1395
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {after-cursor-row: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1395 is 1245
9999 mem: storing 2 in location 1245
 105 run: {after-column: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1246
9999 mem: storing 1246 in location 1396
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {after-cursor-column: "number"}
9999 mem: location 1391 is 0
9999 mem: location 1396 is 1246
9999 mem: storing 0 in location 1246
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1375 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1375 is 1242
9998 run: address to copy is 1247
9999 mem: storing 1247 in location 1397
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: location 1397 is 1247
9999 mem: decrementing refcount of 1164: 18 -> 17
9999 mem: storing 1164 in location 1247
9999 mem: incrementing refcount of 1164: 17 -> 18
 105 run: jump {+handle-keyboard-event_1_264+done-adding-move-operation: "label"}
9998 run: jumping to instruction 755
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1350 is 1008
9999 mem: location 1351 is 1145
9999 mem: location 1356 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: decrementing refcount of 1145: 16 -> 15
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 15 -> 16
9999 mem: storing 0 in location 1346
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 2
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1328
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1328 in location 1282
9999 mem: incrementing refcount of 1328: 5 -> 6
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1328
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 4
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1329
9999 mem: storing 1329 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9999 mem: location 1329 is 4
9999 mem: location 1330 is 1310
9999 mem: location 1282 is 1328
9999 mem: skipping refcount at 1328
9998 run: address to copy is 1330
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1330 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 5 -> 6
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 4 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1329
9999 mem: location 1329 is 4
9999 mem: location 1285 is 4
9999 mem: storing 1 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
9999 mem: storing 1189 in location 1287
9999 mem: incrementing refcount of 1189: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1287 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1282 is 1328
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1328
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1328: 6 -> 5
9999 mem: storing 1328 in location 1335
9999 mem: incrementing refcount of 1328: 5 -> 6
9999 mem: storing 1 in location 1343
9999 mem: storing 1 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1334 is 1008
9999 mem: location 1335 is 1328
9999 mem: location 1336 is 1145
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1462
9999 mem: storing 'text' tag at 1462
9999 mem: storing character 48 at 1463
9999 mem: storing console in 1466
9999 mem: storing console data in 1468
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1466
9999 mem: location 2 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1331
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 97 -> 98
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1335
9999 mem: incrementing refcount of 1466: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 16 -> 17
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 2
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 98 -> 99
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 98 -> 99
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1466
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1282
9999 mem: incrementing refcount of 1466: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1466
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1460
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1467
9999 mem: storing 1467 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1460
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1468 is 1460
9999 mem: storing 1460 in location 1284
9999 mem: incrementing refcount of 1460: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1460
9999 mem: skipping refcount at 1460
9999 mem: storing 1 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1285 is 1
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1460
9999 mem: skipping refcount at 1460
9998 run: base address is 1461
9999 mem: location 1283 is 1467
9999 mem: location 1467 is 0
9998 run: address to copy is 1462
9998 run: its type is event
9999 mem: location 1462 is 0
9999 mem: location 1463 is 48
9999 mem: location 1464 is 0
9999 mem: location 1465 is 0
9999 mem: storing 0 in location 1288
9999 mem: storing 48 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1283 is 1467
9999 mem: storing 1 in location 1467
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 0
9999 mem: location 1289 is 48
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1466
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1466
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1339
9999 mem: storing 48 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1466: 2 -> 1
9999 mem: storing 1466 in location 1335
9999 mem: incrementing refcount of 1466: 1 -> 2
9999 mem: storing 1 in location 1343
9999 mem: storing 0 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1339 is 0
9999 mem: location 1340 is 48
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1345
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1334 is 1008
9999 mem: location 1336 is 1145
9999 mem: location 1339 is 0
9999 mem: location 1340 is 48
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1347
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 99 -> 100
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 17 -> 18
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1352
9999 mem: storing 48 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1351 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1469
9999 mem: storing 3 in location 1470
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1472
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1472 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1473
 106 run: return {width: "number"}
9999 mem: location 1473 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1357
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1472
9999 mem: incrementing refcount of 1008: 101 -> 102
9990 schedule: screen-height/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-cursor-to-next-line-with-right-arrow
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1472 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1473
 106 run: return {height: "number"}
9999 mem: location 1473 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1358
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1359
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1360
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1361
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1362
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1363
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1364
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1365
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1352 is 0
9999 mem: location 1353 is 48
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 1353 in location 1366
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1366 is 1353
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1367
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1378
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1383
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1399
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1400
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1405
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1406
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1407
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1408
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1412
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 0 in location 1416
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: storing 1 in location 1419
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1419 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1401
9999 mem: incrementing refcount of 1164: 18 -> 19
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1361 is 1149
9999 mem: location 1149 is 1202
9999 mem: storing 1202 in location 1413
9999 mem: incrementing refcount of 1202: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1351 is 1145
9999 mem: location 1366 is 1353
9999 mem: location 1353 is 48
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1474
9999 mem: storing 31 in location 1475
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1477
9999 mem: incrementing refcount of 1145: 18 -> 19
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1478
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1479
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1480
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1478 is 48
9999 mem: location 1480 is 1149
9999 mem: location 1149 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1181
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1182
9999 mem: incrementing refcount of 1202: 17 -> 18
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1507
9999 mem: storing 1507 in location 1183
9999 mem: incrementing refcount of 1507: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 0
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: location 1181 is 48
9999 mem: location 1183 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy to is 1508
9999 mem: storing 48 in location 1508
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1184
9999 mem: incrementing refcount of 1206: 11 -> 12
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1183 is 1507
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1204
9999 mem: storing 1507 in location 1204
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 48
9999 mem: location 1509 is 0
9999 mem: location 1510 is 0
9999 mem: location 1182 is 1202
9999 mem: location 1183 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy to is 1510
9999 mem: storing 1202 in location 1510
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 48
9999 mem: location 1509 is 0
9999 mem: location 1510 is 1202
9999 mem: location 1184 is 1206
9999 mem: location 1183 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy to is 1509
9999 mem: storing 1206 in location 1509
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 1206
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1183 is 1507
9999 mem: location 1184 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1209
9999 mem: storing 1507 in location 1209
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1202
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1480 is 1149
9999 mem: location 1149 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1472
9999 mem: incrementing refcount of 1202: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1472 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1472 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1507
9999 mem: location 1205 is 1198
9999 mem: location 1472 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1507
9999 mem: storing 1507 in location 1473
9999 mem: incrementing refcount of 1507: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1473 is 1507
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1507
9999 mem: location 1480 is 1149
9999 mem: decrementing refcount of 1202: 19 -> 18
9999 mem: storing 1507 in location 1149
9999 mem: incrementing refcount of 1507: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1481
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1482
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1483
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1477 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1484
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1481 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1485
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1482 is 1154
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1486
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1479 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1472
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1472 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1473
 107 run: return {width: "number"}
9999 mem: location 1473 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1487
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1479 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1472
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1472 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1472 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1473
 107 run: return {height: "number"}
9999 mem: location 1473 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1488
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1484 is 9
9999 mem: storing 8 in location 1489
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1482 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1489 is 8
9999 mem: storing 0 in location 1490
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1482 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1482 is 1154
9999 mem: storing 1 in location 1154
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1480 is 1149
9999 mem: location 1149 is 1507
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1507 in location 1472
9999 mem: incrementing refcount of 1507: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1472 is 1507
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1472 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1206
9999 mem: location 1510 is 1202
9999 mem: location 1472 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1509 is 1206
9999 mem: storing 1206 in location 1473
9999 mem: incrementing refcount of 1206: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1473 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1497
9999 mem: incrementing refcount of 1206: 13 -> 14
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1497 is 1206
9999 mem: storing 0 in location 1498
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1498 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1497 is 1206
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1482 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1487 is 10
9999 mem: storing 0 in location 1501
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1480 is 1149
9999 mem: location 1149 is 1507
9999 mem: storing 1507 in location 1503
9999 mem: incrementing refcount of 1507: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1479 is 1008
9999 mem: location 1485 is 2
9999 mem: location 1486 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1486 is 0
9999 mem: storing 0 in location 1504
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1496
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1504 is 0
9999 mem: location 1484 is 9
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1503 is 1507
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1503 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1206
9999 mem: location 1510 is 1202
9999 mem: location 1503 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1508
9998 run: its type is "character"
9999 mem: location 1508 is 48
9999 mem: storing 48 in location 1505
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1505 is 48
9999 mem: storing 0 in location 1506
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1479 is 1008
9999 mem: location 1505 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1252
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1256
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1265
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 48
9999 mem: storing 0 in location 1266
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1269
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 48
9999 mem: storing 0 in location 1272
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 20
9999 mem: storing 1056 in location 1274
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1274 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1274 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1275
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1256 is 48
9999 mem: location 1275 is 1056
9999 mem: storing 48 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1274 is 1056
9999 mem: location 1056 is 48
9999 mem: location 1057 is 7
9999 mem: location 1274 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1276
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1257 is 7
9999 mem: location 1276 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1277
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1277 is 9
9999 mem: storing 0 in location 1278
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1265 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1504 is 0
9999 mem: storing 1 in location 1504
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1503 is 1507
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1507 in location 1472
9999 mem: incrementing refcount of 1507: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1472 is 1507
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1472 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1206
9999 mem: location 1510 is 1202
9999 mem: location 1472 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1509 is 1206
9999 mem: storing 1206 in location 1473
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1473 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1507: 6 -> 5
9999 mem: storing 1206 in location 1503
9999 mem: incrementing refcount of 1206: 15 -> 16
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1496
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1504 is 1
9999 mem: location 1484 is 9
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1503 is 1206
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1503 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1507
9999 mem: location 1503 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1505
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1506
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1479 is 1008
9999 mem: location 1505 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1252
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1256
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1265
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1266
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1269
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1272
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 21
9999 mem: storing 1058 in location 1274
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1274 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1274 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1275
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1256 is 100
9999 mem: location 1275 is 1058
9999 mem: storing 100 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1274 is 1058
9999 mem: location 1058 is 100
9999 mem: location 1059 is 7
9999 mem: location 1274 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1276
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1257 is 7
9999 mem: location 1276 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1277
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1277 is 9
9999 mem: storing 0 in location 1278
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1265 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1265 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1504 is 1
9999 mem: storing 2 in location 1504
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1503 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1472
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1472 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1472 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1507
9999 mem: location 1472 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1473
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1473 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1206: 17 -> 16
9999 mem: storing 0 in location 1503
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1496
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1504 is 2
9999 mem: location 1484 is 9
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1496
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1477 is 1145
9999 mem: location 1479 is 1008
9999 mem: location 1496 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1145: 19 -> 18
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 18 -> 19
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: storing 0 in location 1356
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1403
9999 mem: incrementing refcount of 1164: 19 -> 20
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1351 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1370
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1370 is 1156
9999 mem: location 1156 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1472
9999 mem: incrementing refcount of 1457: 5 -> 6
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1472 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 1240
9999 mem: location 1459 is 0
9999 mem: location 1472 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1458 is 1240
9999 mem: storing 1240 in location 1473
9999 mem: incrementing refcount of 1240: 9 -> 10
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1473 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1369
9999 mem: incrementing refcount of 1240: 10 -> 11
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1369 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 0 in location 1376
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1413 is 1202
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1472
9999 mem: incrementing refcount of 1202: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1472 is 1202
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1472 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1507
9999 mem: location 1205 is 1198
9999 mem: location 1472 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1507
9999 mem: storing 1507 in location 1473
9999 mem: incrementing refcount of 1507: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1473 is 1507
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1507
9999 mem: storing 1507 in location 1377
9999 mem: incrementing refcount of 1507: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1377 is 1507
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1507 in location 1472
9999 mem: incrementing refcount of 1507: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1472 is 1507
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1472 is 1507
9999 mem: skipping refcount at 1507
9999 mem: location 1508 is 48
9999 mem: location 1509 is 1206
9999 mem: location 1510 is 1202
9999 mem: location 1472 is 1507
9999 mem: skipping refcount at 1507
9998 run: address to copy is 1509
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1509 is 1206
9999 mem: storing 1206 in location 1473
9999 mem: incrementing refcount of 1206: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1473 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1415
9999 mem: incrementing refcount of 1206: 17 -> 18
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1511
9999 mem: decrementing refcount of 1240: 11 -> 10
9999 mem: storing 1511 in location 1369
9999 mem: incrementing refcount of 1511: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1364 is 2
9999 mem: location 1365 is 0
9999 mem: location 1401 is 1164
9999 mem: location 1362 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1363 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1403 is 1164
9999 mem: location 1377 is 1507
9999 mem: location 1415 is 1206
9999 mem: location 1369 is 1511
9999 mem: skipping refcount at 1511
9999 mem: location 1369 is 1511
9999 mem: skipping refcount at 1511
9999 mem: storing 0 in location 1512
9999 mem: storing 2 in location 1513
9999 mem: storing 0 in location 1514
9999 mem: storing 1164 in location 1515
9999 mem: storing 2 in location 1516
9999 mem: storing 1 in location 1517
9999 mem: storing 1164 in location 1518
9999 mem: storing 1507 in location 1519
9999 mem: storing 1206 in location 1520
9999 mem: storing 1 in location 1521
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1351 is 1145
9999 mem: location 1369 is 1511
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 19 -> 20
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1511 in location 1182
9999 mem: incrementing refcount of 1511: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1457
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 1156
9999 mem: location 1156 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1511 in location 1161
9999 mem: incrementing refcount of 1511: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1162
9999 mem: incrementing refcount of 1457: 6 -> 7
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1523
9999 mem: storing 1523 in location 1163
9999 mem: incrementing refcount of 1523: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1511
9999 mem: location 1162 is 1457
9999 mem: location 1163 is 1523
9999 mem: skipping refcount at 1523
9999 mem: location 1163 is 1523
9999 mem: skipping refcount at 1523
9999 mem: storing 1511 in location 1524
9999 mem: storing 1457 in location 1525
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1523
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1523
9999 mem: location 1183 is 1156
9999 mem: decrementing refcount of 1457: 7 -> 6
9999 mem: storing 1523 in location 1156
9999 mem: incrementing refcount of 1523: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1523
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1184 is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1181 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 20 -> 19
9999 mem: storing 1145 in location 1351
9999 mem: incrementing refcount of 1145: 19 -> 20
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1350 is 1008
9999 mem: location 1351 is 1145
9999 mem: location 1356 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: decrementing refcount of 1145: 20 -> 19
9999 mem: storing 1145 in location 1336
9999 mem: incrementing refcount of 1145: 19 -> 20
9999 mem: storing 0 in location 1346
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1523
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1337
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1507
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1523
9999 mem: location 1157 is 0
9999 mem: location 1336 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1337 is 2
9999 mem: location 1338 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 108 -> 109
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 108 -> 109
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1335 is 1466
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1282
9999 mem: incrementing refcount of 1466: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1466
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 1
9999 mem: location 1468 is 1460
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1467
9999 mem: storing 1467 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 1
9999 mem: location 1468 is 1460
9999 mem: location 1282 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1468 is 1460
9999 mem: storing 1460 in location 1284
9999 mem: incrementing refcount of 1460: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1460
9999 mem: skipping refcount at 1460
9999 mem: storing 1 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1467
9999 mem: location 1467 is 1
9999 mem: location 1285 is 1
9999 mem: storing 1 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1469
9999 mem: storing 1469 in location 1287
9999 mem: incrementing refcount of 1469: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1287 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 0
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1282 is 1466
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1466
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: decrementing refcount of 1466: 3 -> 2
9999 mem: storing 1466 in location 1335
9999 mem: incrementing refcount of 1466: 2 -> 3
9999 mem: storing 1 in location 1343
9999 mem: storing 1 in location 1344
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1344 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1334 is 1008
9999 mem: location 1335 is 1466
9999 mem: location 1336 is 1145
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .0d        .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: check-trace-count-for-label {2: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
