9991 parse: --- defining scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc\nd": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"abc\nd": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {1: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {1: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press right-arrow\n    press right-arrow\n    press right-arrow\n    press right-arrow  # next line\n    type [0]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press right-arrow\n    press right-arrow\n    press right-arrow\n    press right-arrow  # next line\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    . abc      .\n    . 0d       .\n    . ┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    . abc      .\n    . 0d       .\n    . ┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- deduce types for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- collect surrounding spaces for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- transform names for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {1: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- transform braces for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- perform checks for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- type-check calls inside recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- type-check merge instructions in recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- check types of reply instructions in recipe scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- checking reply instructions against header for scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1116
9999 mem: storing 7 in location 1117
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9999 mem: storing 1016 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9999 mem: storing 1018 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9999 mem: storing 1020 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9999 mem: storing 1022 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9999 mem: storing 1024 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9999 mem: storing 1026 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9999 mem: storing 1028 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9999 mem: storing 1030 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9999 mem: storing 1032 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9999 mem: storing 1034 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9999 mem: storing 1036 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9999 mem: storing 1038 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9999 mem: storing 1040 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9999 mem: storing 1042 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9999 mem: storing 1044 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9999 mem: storing 1046 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9999 mem: storing 1048 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9999 mem: storing 1050 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9999 mem: storing 1052 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9999 mem: storing 1054 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9999 mem: storing 1056 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9999 mem: storing 1058 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9999 mem: storing 1060 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9999 mem: storing 1062 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9999 mem: storing 1064 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9999 mem: storing 1066 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9999 mem: storing 1068 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9999 mem: storing 1070 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9999 mem: storing 1072 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9999 mem: storing 1074 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9999 mem: storing 1076 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9999 mem: storing 1078 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9999 mem: storing 1080 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9999 mem: storing 1082 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9999 mem: storing 1084 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9999 mem: storing 1086 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9999 mem: storing 1088 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9999 mem: storing 1090 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9999 mem: storing 1092 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9999 mem: storing 1094 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9999 mem: storing 1096 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9999 mem: storing 1098 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9999 mem: storing 1100 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9999 mem: storing 1102 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9999 mem: storing 1104 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9999 mem: storing 1106 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9999 mem: storing 1108 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9999 mem: storing 1110 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9999 mem: storing 1112 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9999 mem: storing 1114 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"abc\nd": "literal-string"}
9999 mem: new string alloc: 1125
9999 mem: storing 1125 in location 1
9999 mem: incrementing refcount of 1125: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {1: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1125
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1132
9999 mem: storing 11 in location 1133
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1135
9999 mem: incrementing refcount of 1125: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1137
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1138
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1138 is 10
9999 mem: storing 9 in location 1138
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1145
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1140
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1137 is 1
9999 mem: location 1140 is 1150
9999 mem: storing 1 in location 1150
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1140
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1138 is 9
9999 mem: location 1140 is 1151
9999 mem: storing 9 in location 1151
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1140
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1140 is 1153
9999 mem: storing 1 in location 1153
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1140
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1137 is 1
9999 mem: location 1140 is 1154
9999 mem: storing 1 in location 1154
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1141
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1158
9999 mem: storing 4 in location 1159
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1161
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1162
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1164
9999 mem: storing 1164 in location 1163
9999 mem: incrementing refcount of 1164: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1161 is 167
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1163 is 1164
9999 mem: skipping refcount at 1164
9999 mem: storing 167 in location 1165
9999 mem: storing 0 in location 1166
9999 mem: storing 0 in location 1167
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1162 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1164
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1164
9999 mem: location 1141 is 1146
9999 mem: storing 1164 in location 1146
9999 mem: incrementing refcount of 1164: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1142
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1141 is 1146
9999 mem: location 1146 is 1164
9999 mem: location 1142 is 1147
9999 mem: storing 1164 in location 1147
9999 mem: incrementing refcount of 1164: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1143
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1141 is 1146
9999 mem: location 1146 is 1164
9999 mem: location 1143 is 1149
9999 mem: storing 1164 in location 1149
9999 mem: incrementing refcount of 1164: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1139 is 1145
9999 mem: location 1135 is 1125
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1168
9999 mem: storing 8 in location 1169
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1171
9999 mem: incrementing refcount of 1145: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1172
9999 mem: incrementing refcount of 1125: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1172 is 1125
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1172 is 1125
9999 mem: skipping refcount at 1125
9999 mem: storing 5 in location 1173
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1173 is 5
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1174
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1171 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1164
9999 mem: storing 1164 in location 1175
9999 mem: incrementing refcount of 1164: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1173 is 5
9999 mem: storing 0 in location 1176
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1172 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1174 is 0
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1177
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1177 is 97
9999 mem: location 1175 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1178
9999 mem: storing 5 in location 1179
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1181
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1182
9999 mem: incrementing refcount of 1164: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1185
9999 mem: storing 1185 in location 1183
9999 mem: incrementing refcount of 1185: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1181 is 97
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1186
9999 mem: storing 97 in location 1186
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 0
9999 mem: storing 0 in location 1184
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1183 is 1185
9999 mem: location 1182 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy to is 1166
9999 mem: storing 1185 in location 1166
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1182 is 1164
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1188
9999 mem: storing 1164 in location 1188
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1164
9999 mem: location 1184 is 0
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1187
9999 mem: storing 0 in location 1187
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1164
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1189
9999 mem: storing 3 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 7 -> 6
9999 mem: storing 1185 in location 1175
9999 mem: incrementing refcount of 1185: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1173 is 5
9999 mem: storing 0 in location 1176
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1172 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1174 is 1
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1177
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1177 is 98
9999 mem: location 1175 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1181
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1182
9999 mem: incrementing refcount of 1185: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1183
9999 mem: incrementing refcount of 1194: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1181 is 98
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy to is 1195
9999 mem: storing 98 in location 1195
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1164
9999 mem: location 1182 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 0
9999 mem: storing 0 in location 1184
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1164
9999 mem: location 1183 is 1194
9999 mem: location 1182 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy to is 1187
9999 mem: storing 1194 in location 1187
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1182 is 1185
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy to is 1197
9999 mem: storing 1185 in location 1197
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1185
9999 mem: location 1184 is 0
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy to is 1196
9999 mem: storing 0 in location 1196
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1185
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 5 -> 4
9999 mem: storing 1194 in location 1175
9999 mem: incrementing refcount of 1194: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1173 is 5
9999 mem: storing 0 in location 1176
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1172 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1174 is 2
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1177
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1177 is 99
9999 mem: location 1175 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1181
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1182
9999 mem: incrementing refcount of 1194: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1198
9999 mem: storing 1198 in location 1183
9999 mem: incrementing refcount of 1198: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1181 is 99
9999 mem: location 1183 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1199
9999 mem: storing 99 in location 1199
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1185
9999 mem: location 1182 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1184
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1185
9999 mem: location 1183 is 1198
9999 mem: location 1182 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy to is 1196
9999 mem: storing 1198 in location 1196
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1201
9999 mem: storing 1194 in location 1201
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1194
9999 mem: location 1184 is 0
9999 mem: location 1183 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1200
9999 mem: storing 0 in location 1200
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1194
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 5 -> 4
9999 mem: storing 1198 in location 1175
9999 mem: incrementing refcount of 1198: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1173 is 5
9999 mem: storing 0 in location 1176
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1172 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1174 is 3
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 10
9999 mem: storing 10 in location 1177
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1177 is 10
9999 mem: location 1175 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1181
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1182
9999 mem: incrementing refcount of 1198: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1202
9999 mem: storing 1202 in location 1183
9999 mem: incrementing refcount of 1202: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1181 is 10
9999 mem: location 1183 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1203
9999 mem: storing 10 in location 1203
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1194
9999 mem: location 1182 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1184
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1194
9999 mem: location 1183 is 1202
9999 mem: location 1182 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1200
9999 mem: storing 1202 in location 1200
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1182 is 1198
9999 mem: location 1183 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1205
9999 mem: storing 1198 in location 1205
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1198
9999 mem: location 1184 is 0
9999 mem: location 1183 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1204
9999 mem: storing 0 in location 1204
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1198
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 5 -> 4
9999 mem: storing 1202 in location 1175
9999 mem: incrementing refcount of 1202: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1173 is 5
9999 mem: storing 0 in location 1176
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1172 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1174 is 4
9998 run: address to copy is 1131
9998 run: its type is character
9999 mem: location 1131 is 100
9999 mem: storing 100 in location 1177
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1177 is 100
9999 mem: location 1175 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1181
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1182
9999 mem: incrementing refcount of 1202: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1206
9999 mem: storing 1206 in location 1183
9999 mem: incrementing refcount of 1206: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1181 is 100
9999 mem: location 1183 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1207
9999 mem: storing 100 in location 1207
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1198
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1184
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1198
9999 mem: location 1183 is 1206
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1204
9999 mem: storing 1206 in location 1204
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1182 is 1202
9999 mem: location 1183 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1209
9999 mem: storing 1202 in location 1209
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1184 is 0
9999 mem: location 1183 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1208
9999 mem: storing 0 in location 1208
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1202
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 5 -> 4
9999 mem: storing 1206 in location 1175
9999 mem: incrementing refcount of 1206: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1173 is 5
9999 mem: storing 1 in location 1176
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1171 is 1145
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 2 -> 1
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1143
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1141 is 1146
9999 mem: location 1146 is 1164
9999 mem: location 1143 is 1149
9999 mem: decrementing refcount of 1164: 6 -> 5
9999 mem: storing 1164 in location 1149
9999 mem: incrementing refcount of 1164: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1136 is 1008
9999 mem: location 1139 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1210
9999 mem: storing 28 in location 1211
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1213
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1214
9999 mem: incrementing refcount of 1145: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1214 is 1145
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1215
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1213 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 105 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1216
9990 schedule: render/new-editor/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1217
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1218
9999 mem: incrementing refcount of 1164: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1164
9999 mem: storing 1164 in location 1219
9999 mem: incrementing refcount of 1164: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 9 -> 8
9999 mem: storing 1185 in location 1218
9999 mem: incrementing refcount of 1185: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1220
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1221
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1215 is 1
9999 mem: storing 1 in location 1222
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1223
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1224
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1225
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1221 is 1
9999 mem: location 1222 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1213
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1185
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1164
9999 mem: location 1225 is 1149
9999 mem: decrementing refcount of 1164: 8 -> 7
9999 mem: storing 1164 in location 1149
9999 mem: incrementing refcount of 1164: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1218 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 97
9999 mem: storing 97 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1240
9999 mem: storing 10 in location 1241
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 97
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 97
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 97
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 97
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1252
9999 mem: storing 23 in location 1253
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 97
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 1
9999 mem: storing 11 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 97
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 11
9999 mem: storing 1038 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 97
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1038
9999 mem: location 1274 is 1038
9999 mem: storing 97 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 7 -> 6
9999 mem: storing 1194 in location 1218
9999 mem: incrementing refcount of 1194: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 9 -> 8
9999 mem: storing 1185 in location 1219
9999 mem: incrementing refcount of 1185: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1194
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1218 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 98
9999 mem: storing 98 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 98
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 98
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 98
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 2
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 98
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 98
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 2
9999 mem: storing 12 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 98
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 12
9999 mem: storing 1040 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 98
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1040
9999 mem: location 1274 is 1040
9999 mem: storing 98 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 3 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 3
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 7 -> 6
9999 mem: storing 1198 in location 1218
9999 mem: incrementing refcount of 1198: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 9 -> 8
9999 mem: storing 1194 in location 1219
9999 mem: incrementing refcount of 1194: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1198
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 3
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1218 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 99
9999 mem: storing 99 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 99
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 99
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 99
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 3
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 99
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 99
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 3
9999 mem: storing 13 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 99
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 13
9999 mem: storing 1042 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 99
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1042
9999 mem: location 1274 is 1042
9999 mem: storing 99 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 4 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 4
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 7 -> 6
9999 mem: storing 1202 in location 1218
9999 mem: incrementing refcount of 1202: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 9 -> 8
9999 mem: storing 1198 in location 1219
9999 mem: incrementing refcount of 1198: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1202
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 4
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1218 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 10
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 10
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 10
9999 mem: storing 1 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 4
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1231
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1222 is 4
9999 mem: location 1217 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1168
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1172
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1173
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1174
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1175
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 4
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 4
9999 mem: storing 14 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 14
9999 mem: storing 1044 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1044
9999 mem: location 1274 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 5 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 5
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 4
9999 mem: storing 5 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 5
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 5
9999 mem: storing 15 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 15
9999 mem: storing 1046 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1046
9999 mem: location 1274 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 6 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 6
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 5
9999 mem: storing 6 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 6
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 6
9999 mem: storing 16 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 7 -> 8
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 16
9999 mem: storing 1048 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1048
9999 mem: location 1274 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 7 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 7
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 6
9999 mem: storing 7 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 7
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 7
9999 mem: storing 17 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 17
9999 mem: storing 1050 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1050
9999 mem: location 1274 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 8 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 8
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 7
9999 mem: storing 8 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 8
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 8
9999 mem: storing 18 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 18
9999 mem: storing 1052 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1052
9999 mem: location 1274 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 9 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 9
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 8
9999 mem: storing 9 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 9
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 9
9999 mem: storing 19 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 19
9999 mem: storing 1054 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1054
9999 mem: location 1274 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1275 is 9
9999 mem: storing 1 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 9
9999 mem: storing 10 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 10
9999 mem: location 1173 is 9
9999 mem: storing 1 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1171 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1221 is 1
9999 mem: storing 2 in location 1221
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1215 is 1
9999 mem: storing 1 in location 1222
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1221 is 2
9999 mem: location 1222 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1213
9999 mem: incrementing refcount of 1008: 17 -> 18
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 7 -> 6
9999 mem: storing 1206 in location 1218
9999 mem: incrementing refcount of 1206: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 9 -> 8
9999 mem: storing 1202 in location 1219
9999 mem: incrementing refcount of 1202: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1206
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 2
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 0 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1218 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 100
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 100
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 100
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 100
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 1
9999 mem: storing 21 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 21
9999 mem: storing 1058 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 100
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1058
9999 mem: location 1274 is 1058
9999 mem: storing 100 in location 1058
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1206
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1192
9999 mem: incrementing refcount of 1206: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1206
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1193
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1206: 6 -> 5
9999 mem: storing 0 in location 1218
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 9 -> 8
9999 mem: storing 1206 in location 1219
9999 mem: incrementing refcount of 1206: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1234
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 0
9999 mem: location 1234 is 1148
9999 mem: storing 0 in location 1148
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 0 in location 1227
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1235
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1227 is 0
9999 mem: location 1235 is 0
9999 mem: storing 0 in location 1236
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 0 in location 1237
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1236 is 0
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1238
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1239
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1221 is 2
9999 mem: location 1239 is 1152
9999 mem: storing 2 in location 1152
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1221 is 2
9999 mem: location 1222 is 2
9999 mem: location 1213 is 1008
9999 mem: location 1214 is 1145
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 2
9998 run: result 1 is 2
9998 run: result 2 is 1008
9998 run: result 3 is 1145
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1136
9999 mem: incrementing refcount of 1008: 18 -> 19
9999 mem: decrementing refcount of 1145: 3 -> 2
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1144
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1144 is 1155
9999 mem: storing 1 in location 1155
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1139 is 1145
9999 mem: location 1136 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1145
9999 mem: storing 1145 in location 2
9999 mem: incrementing refcount of 1145: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1145
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 19 -> 20
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1120
9999 mem: incrementing refcount of 1145: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1120 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1121
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1120 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1122
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1210
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1213
9999 mem: incrementing refcount of 1008: 20 -> 21
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1214
9999 mem: incrementing refcount of 1145: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1214 is 1145
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1215
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1213 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 105 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1216
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1217
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1218
9999 mem: incrementing refcount of 1164: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1164
9999 mem: storing 1164 in location 1219
9999 mem: incrementing refcount of 1164: 9 -> 10
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 11 -> 10
9999 mem: storing 1185 in location 1218
9999 mem: incrementing refcount of 1185: 9 -> 10
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1220
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1221
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1215 is 1
9999 mem: storing 1 in location 1222
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1223
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1224
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1225
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1221 is 1
9999 mem: location 1222 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 23 -> 22
9999 mem: storing 1008 in location 1213
9999 mem: incrementing refcount of 1008: 22 -> 23
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1185
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1164
9999 mem: location 1225 is 1149
9999 mem: decrementing refcount of 1164: 10 -> 9
9999 mem: storing 1164 in location 1149
9999 mem: incrementing refcount of 1164: 9 -> 10
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1218 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 97
9999 mem: storing 97 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 97
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 97
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 97
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 97
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
9990 schedule: print/render/editor-render/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 97
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 1
9999 mem: storing 11 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 97
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 11
9999 mem: storing 1038 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 97
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1038
9999 mem: location 1274 is 1038
9999 mem: storing 97 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 11 -> 10
9999 mem: storing 1194 in location 1218
9999 mem: incrementing refcount of 1194: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 11 -> 10
9999 mem: storing 1185 in location 1219
9999 mem: incrementing refcount of 1185: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1194
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1218 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 98
9999 mem: storing 98 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 98
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 98
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 98
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 2
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 98
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 98
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 2
9999 mem: storing 12 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 98
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 12
9999 mem: storing 1040 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 98
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1040
9999 mem: location 1274 is 1040
9999 mem: storing 98 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 3 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 3
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 11 -> 10
9999 mem: storing 1198 in location 1218
9999 mem: incrementing refcount of 1198: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1185
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 13 -> 12
9999 mem: storing 1194 in location 1219
9999 mem: incrementing refcount of 1194: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1198
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 3
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1218 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 99
9999 mem: storing 99 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 99
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 99
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 99
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 3
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 99
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 99
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 3
9999 mem: storing 13 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 99
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 13
9999 mem: storing 1042 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 99
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1042
9999 mem: location 1274 is 1042
9999 mem: storing 99 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 4 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 4
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 11 -> 10
9999 mem: storing 1202 in location 1218
9999 mem: incrementing refcount of 1202: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 13 -> 12
9999 mem: storing 1198 in location 1219
9999 mem: incrementing refcount of 1198: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1202
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 4
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1228
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1218 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 10
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 10
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 10
9999 mem: storing 1 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 4
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1231
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1222 is 4
9999 mem: location 1217 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1168
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1172
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1173
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1174
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1175
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 4
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 27 -> 28
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 4
9999 mem: storing 14 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 15 -> 16
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 14
9999 mem: storing 1044 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1044
9999 mem: location 1274 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 5 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 5
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 4
9999 mem: storing 5 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 5
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 5
9999 mem: storing 15 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 16 -> 17
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 15
9999 mem: storing 1046 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1046
9999 mem: location 1274 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 6 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 6
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 29 -> 28
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 5
9999 mem: storing 6 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 6
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 6
9999 mem: storing 16 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 17 -> 18
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 16
9999 mem: storing 1048 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1048
9999 mem: location 1274 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 7 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 7
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 6
9999 mem: storing 7 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 7
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 30 -> 31
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1265
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 7
9999 mem: storing 17 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 18 -> 19
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 17
9999 mem: storing 1050 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1050
9999 mem: location 1274 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 8 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 8
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 31 -> 30
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 7
9999 mem: storing 8 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 8
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 31 -> 32
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 8
9999 mem: storing 18 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 19 -> 20
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 18
9999 mem: storing 1052 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1052
9999 mem: location 1274 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 9 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 9
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 32 -> 31
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 8
9999 mem: storing 9 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 9
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 32 -> 33
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 1
9999 mem: location 1261 is 10
9999 mem: storing 10 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 10
9999 mem: location 1265 is 9
9999 mem: storing 19 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 20 -> 21
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 19
9999 mem: storing 1054 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1054
9999 mem: location 1274 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1275 is 9
9999 mem: storing 1 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 33 -> 32
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 9
9999 mem: storing 10 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 10
9999 mem: location 1173 is 9
9999 mem: storing 1 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1171 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1221 is 1
9999 mem: storing 2 in location 1221
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1215 is 1
9999 mem: storing 1 in location 1222
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1221 is 2
9999 mem: location 1222 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 34 -> 33
9999 mem: storing 1008 in location 1213
9999 mem: incrementing refcount of 1008: 33 -> 34
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 7 -> 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 11 -> 10
9999 mem: storing 1206 in location 1218
9999 mem: incrementing refcount of 1206: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 13 -> 12
9999 mem: storing 1202 in location 1219
9999 mem: incrementing refcount of 1202: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 1206
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1221 is 2
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1226
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 0 in location 1227
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1227 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1218 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1229
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1220 is 7
9999 mem: location 1229 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1243
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1244
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1243 is 7
9999 mem: storing 1 in location 1245
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1244 is 100
9999 mem: storing 0 in location 1246
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1247
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1244 is 100
9999 mem: storing 0 in location 1249
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1243 is 7
9999 mem: storing 0 in location 1250
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1243 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1220
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1229 is 100
9999 mem: storing 0 in location 1230
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1217 is 9
9999 mem: storing 0 in location 1232
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1232 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1213 is 1008
9999 mem: location 1229 is 100
9999 mem: location 1220 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 1
9999 mem: storing 21 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 21 -> 22
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 21
9999 mem: storing 1058 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 100
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1058
9999 mem: location 1274 is 1058
9999 mem: storing 100 in location 1058
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1206
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1192
9999 mem: incrementing refcount of 1206: 9 -> 10
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1206
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1193
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1206: 10 -> 9
9999 mem: storing 0 in location 1218
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 9 -> 10
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 13 -> 12
9999 mem: storing 1206 in location 1219
9999 mem: incrementing refcount of 1206: 10 -> 11
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1218 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1234
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 0
9999 mem: location 1234 is 1148
9999 mem: storing 0 in location 1148
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 0 in location 1227
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1222 is 2
9999 mem: location 1224 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1235
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1227 is 0
9999 mem: location 1235 is 0
9999 mem: storing 0 in location 1236
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 0 in location 1237
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1236 is 0
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1238
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1214 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1239
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1221 is 2
9999 mem: location 1239 is 1152
9999 mem: storing 2 in location 1152
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1221 is 2
9999 mem: location 1222 is 2
9999 mem: location 1213 is 1008
9999 mem: location 1214 is 1145
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 2
9998 run: result 1 is 2
9999 mem: storing 2 in location 1123
9999 mem: storing 2 in location 1124
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 2
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1168
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1172
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1173
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1174
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1175
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 2
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 2
9999 mem: storing 22 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 22
9999 mem: storing 1060 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1060
9999 mem: location 1274 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 3 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 3
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 36 -> 37
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 2
9999 mem: storing 3 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 3
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 3
9999 mem: storing 23 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 23 -> 24
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 23
9999 mem: storing 1062 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1062
9999 mem: location 1274 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 4 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 4
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 38 -> 37
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 37 -> 38
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 3
9999 mem: storing 4 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 4
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 4
9999 mem: storing 24 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 24 -> 25
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 24
9999 mem: storing 1064 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1064
9999 mem: location 1274 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 5 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 5
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 38 -> 39
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 4
9999 mem: storing 5 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 5
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 5
9999 mem: storing 25 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 25 -> 26
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 25
9999 mem: storing 1066 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1066
9999 mem: location 1274 is 1066
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 6 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 6
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 39 -> 40
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 5
9999 mem: storing 6 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 6
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 40 -> 41
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 6
9999 mem: storing 26 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 26 -> 27
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 26
9999 mem: storing 1068 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1068
9999 mem: location 1274 is 1068
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 7 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 7
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 40 -> 41
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 6
9999 mem: storing 7 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 7
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 7
9999 mem: storing 27 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 27 -> 28
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 27
9999 mem: storing 1070 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1070
9999 mem: location 1274 is 1070
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 8 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 8
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 41 -> 42
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 7
9999 mem: storing 8 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 8
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 8
9999 mem: storing 28 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 28 -> 29
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 28
9999 mem: storing 1072 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1072
9999 mem: location 1274 is 1072
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 9 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 9
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 42 -> 43
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 8
9999 mem: storing 9 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 9
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 9
9999 mem: storing 29 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 29 -> 30
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 29
9999 mem: storing 1074 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1074
9999 mem: location 1274 is 1074
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1275 is 9
9999 mem: storing 1 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 1
9998 run: jumping to instruction 72
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 43 -> 44
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 9
9999 mem: storing 10 in location 1172
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 10
9999 mem: location 1173 is 9
9999 mem: storing 1 in location 1177
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1171 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 1
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1277
9999 mem: storing 12 in location 1278
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1280
9999 mem: incrementing refcount of 1008: 44 -> 45
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1281
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1282
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1283
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1284
9999 mem: storing 1 in location 1285
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1286
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1288
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1281 is 3
9999 mem: location 1282 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 45 -> 46
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 3
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1280
9999 mem: incrementing refcount of 1008: 45 -> 46
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 1
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 1
9999 mem: storing 31 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 30 -> 31
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 31
9999 mem: storing 1078 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1078
9999 mem: location 1274 is 1078
9999 mem: storing 9480 in location 1078
9999 mem: storing 245 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 1
9999 mem: storing 2 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 2
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 47 -> 48
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 2
9999 mem: storing 32 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 31 -> 32
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 32
9999 mem: storing 1080 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1080
9999 mem: location 1274 is 1080
9999 mem: storing 9480 in location 1080
9999 mem: storing 245 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 3 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 3
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 2
9999 mem: storing 3 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 3
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 3
9999 mem: storing 33 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 32 -> 33
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 33
9999 mem: storing 1082 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1082
9999 mem: location 1274 is 1082
9999 mem: storing 9480 in location 1082
9999 mem: storing 245 in location 1083
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 4 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 4
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 3
9999 mem: storing 4 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 4
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 49 -> 50
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 4
9999 mem: storing 34 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 33 -> 34
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 34
9999 mem: storing 1084 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1084
9999 mem: location 1274 is 1084
9999 mem: storing 9480 in location 1084
9999 mem: storing 245 in location 1085
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 5 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 5
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 4
9999 mem: storing 5 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 5
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 50 -> 51
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 5
9999 mem: storing 35 in location 1269
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 34 -> 35
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 35
9999 mem: storing 1086 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1086
9999 mem: location 1274 is 1086
9999 mem: storing 9480 in location 1086
9999 mem: storing 245 in location 1087
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 6 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 6
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 5
9999 mem: storing 6 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 6
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 51 -> 52
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 6
9999 mem: storing 36 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 35 -> 36
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 36
9999 mem: storing 1088 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1088
9999 mem: location 1274 is 1088
9999 mem: storing 9480 in location 1088
9999 mem: storing 245 in location 1089
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 7 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 7
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 6
9999 mem: storing 7 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 7
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 52 -> 53
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 7
9999 mem: storing 37 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 36 -> 37
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 37
9999 mem: storing 1090 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1090
9999 mem: location 1274 is 1090
9999 mem: storing 9480 in location 1090
9999 mem: storing 245 in location 1091
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 8 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 8
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 7
9999 mem: storing 8 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 8
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 53 -> 54
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 8
9999 mem: storing 38 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 37 -> 38
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 38
9999 mem: storing 1092 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1092
9999 mem: location 1274 is 1092
9999 mem: storing 9480 in location 1092
9999 mem: storing 245 in location 1093
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 9 in location 1265
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 9
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 8
9999 mem: storing 9 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 9
9999 mem: location 1283 is 9
9999 mem: storing 1 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1280 is 1008
9999 mem: location 1284 is 9480
9999 mem: location 1286 is 245
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 54 -> 55
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1256
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1257
9999 mem: storing 1 in location 1258
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1263
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 3
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1265
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1266
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 3
9999 mem: location 1261 is 10
9999 mem: storing 30 in location 1269
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 30
9999 mem: location 1265 is 9
9999 mem: storing 39 in location 1269
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 38 -> 39
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 9480
9999 mem: storing 0 in location 1272
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 39
9999 mem: storing 1094 in location 1274
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 9480
9999 mem: location 1257 is 245
9999 mem: location 1274 is 1094
9999 mem: location 1274 is 1094
9999 mem: storing 9480 in location 1094
9999 mem: storing 245 in location 1095
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1275 is 9
9999 mem: storing 1 in location 1276
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 1
9998 run: jumping to instruction 72
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1282 is 9
9999 mem: storing 10 in location 1282
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1282 is 10
9999 mem: location 1283 is 9
9999 mem: storing 0 in location 1290
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 3
9999 mem: storing 4 in location 1123
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 4
9999 mem: location 1121 is 1
9999 mem: location 1121 is 1
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 55 -> 56
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 4
9999 mem: location 1005 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 56 -> 57
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 4
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 56 -> 57
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 1
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1168
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 57 -> 58
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1172
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1173
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1174
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1175
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 1
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 1
9999 mem: storing 41 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 39 -> 40
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 41
9999 mem: storing 1098 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1098
9999 mem: location 1274 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 58 -> 59
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 1
9999 mem: storing 2 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 2
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 2
9999 mem: storing 42 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 40 -> 41
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 42
9999 mem: storing 1100 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1100
9999 mem: location 1274 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 3 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 3
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 59 -> 60
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 2
9999 mem: storing 3 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 3
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 3
9999 mem: storing 43 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 41 -> 42
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 43
9999 mem: storing 1102 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1102
9999 mem: location 1274 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 3
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 3
9999 mem: storing 4 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 4
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 60 -> 61
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 3
9999 mem: storing 4 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 4
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 4
9999 mem: storing 44 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 42 -> 43
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 44
9999 mem: storing 1104 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1104
9999 mem: location 1274 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 4
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 4
9999 mem: storing 5 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 5
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 61 -> 62
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 4
9999 mem: storing 5 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 5
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 62 -> 63
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 5
9999 mem: storing 45 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 45
9999 mem: storing 1106 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1106
9999 mem: location 1274 is 1106
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 5
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 5
9999 mem: storing 6 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 6
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 63 -> 62
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 62 -> 63
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 5
9999 mem: storing 6 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 6
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 6
9999 mem: storing 46 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 46
9999 mem: storing 1108 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1108
9999 mem: location 1274 is 1108
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 6
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 6
9999 mem: storing 7 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 7
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 63 -> 64
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 6
9999 mem: storing 7 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 7
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 7
9999 mem: storing 47 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 45 -> 46
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 47
9999 mem: storing 1110 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1110
9999 mem: location 1274 is 1110
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 7
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 7
9999 mem: storing 8 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 8
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 64 -> 65
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 7
9999 mem: storing 8 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 8
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 65 -> 66
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 8
9999 mem: storing 48 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 46 -> 47
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 48
9999 mem: storing 1112 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1112
9999 mem: location 1274 is 1112
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 8
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 8
9999 mem: storing 9 in location 1265
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 9
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 65 -> 66
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 8
9999 mem: storing 9 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 9
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1171 is 1008
9999 mem: location 1174 is 32
9999 mem: location 1175 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 66 -> 67
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1256
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1257
9999 mem: storing 1 in location 1258
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 1 in location 1260
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1263
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 4
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1265
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1266
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 4
9999 mem: location 1261 is 10
9999 mem: storing 40 in location 1269
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 40
9999 mem: location 1265 is 9
9999 mem: storing 49 in location 1269
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 47 -> 48
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 32
9999 mem: storing 0 in location 1272
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 49
9999 mem: storing 1114 in location 1274
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 32
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1114
9999 mem: location 1274 is 1114
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 9
9999 mem: location 1275 is 9
9999 mem: storing 1 in location 1276
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1171
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1172 is 9
9999 mem: storing 10 in location 1172
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1172 is 10
9999 mem: location 1173 is 9
9999 mem: storing 1 in location 1177
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1171 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1291
9999 mem: storing 7 in location 1292
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1295
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1296
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1297
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1295 is 4
9999 mem: storing 5 in location 1295
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 5
9999 mem: location 1296 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 68 -> 69
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1162
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 5
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1294 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1298
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1295 is 5
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1294 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1145
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    press right-arrow\n    press right-arrow\n    press right-arrow\n    press right-arrow  # next line\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'press' event starting at 1302
9999 mem: storing 'press' event starting at 1306
9999 mem: storing 'press' event starting at 1310
9999 mem: storing 'press' event starting at 1314
9999 mem: storing 'type' event starting at 1318
9999 mem: storing 'text' tag at 1318
9999 mem: storing character 48 at 1319
9999 mem: storing console in 1322
9999 mem: storing console data in 1324
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1322
9999 mem: location 2 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1325
9999 mem: storing 14 in location 1326
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 70 -> 71
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1330
9999 mem: incrementing refcount of 1145: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 71 -> 72
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 71 -> 72
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1277
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1280
9999 mem: incrementing refcount of 1322: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1280 is 1322
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1281
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1324 is 1300
9999 mem: storing 1300 in location 1282
9999 mem: incrementing refcount of 1300: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 5 in location 1283
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1281 is 0
9999 mem: location 1283 is 5
9999 mem: storing 0 in location 1284
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1281 is 0
9998 run: address to copy is 1302
9998 run: its type is event
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65514
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: storing 1 in location 1286
9999 mem: storing 65514 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1281 is 0
9999 mem: storing 1 in location 1281
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1300
9999 mem: location 1281 is 1
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy to is 1323
9999 mem: storing 1 in location 1323
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1286 is 1
9999 mem: location 1287 is 65514
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1280 is 1322
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1333
9999 mem: storing 65514 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: decrementing refcount of 1322: 2 -> 1
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 1 -> 2
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1339
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1145
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1341
9999 mem: storing 85 in location 1342
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 72 -> 73
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1346
9999 mem: storing 65514 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1350
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1345 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 73 -> 74
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1351
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1352
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1353
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1354
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1355
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1356
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1357
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1358
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1359
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1360
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1347 in location 1414
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1414 is 1347
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1377
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1401
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1415
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1416
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1417
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 1 in location 1419
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1355 is 1149
9999 mem: location 1149 is 1164
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 10 -> 11
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1420
9999 mem: incrementing refcount of 1185: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1420 is 1185
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1380
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1381
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1382
9999 mem: incrementing refcount of 1164: 11 -> 12
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1420 is 1185
9999 mem: location 1355 is 1149
9999 mem: decrementing refcount of 1164: 12 -> 11
9999 mem: storing 1185 in location 1149
9999 mem: incrementing refcount of 1185: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1345 is 1145
9999 mem: location 1352 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1428
9999 mem: storing 21 in location 1429
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1431
9999 mem: incrementing refcount of 1145: 8 -> 9
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1432
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1185
9999 mem: storing 1185 in location 1433
9999 mem: incrementing refcount of 1185: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1434
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1435
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1436
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1437
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1433 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1433 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 97
9999 mem: storing 97 in location 1438
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1439
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1437 is 9
9999 mem: storing 8 in location 1446
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1435 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1446 is 8
9999 mem: storing 0 in location 1447
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 63
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1435 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1435 is 1154
9999 mem: storing 2 in location 1154
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1431 is 1145
9999 mem: location 1441 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 9 -> 8
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 8 -> 9
9999 mem: storing 0 in location 1350
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1344 is 1008
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 75 -> 76
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1163
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 75 -> 76
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1383
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1384
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1385
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1386
9999 mem: incrementing refcount of 1164: 11 -> 12
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1383 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1364
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 0
9998 run: jumping to instruction 750
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
9999 mem: storing 1240 in location 1363
9999 mem: incrementing refcount of 1240: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1380 is 1
9999 mem: location 1381 is 1
9999 mem: location 1382 is 1164
9999 mem: location 1384 is 1
9999 mem: location 1385 is 2
9999 mem: location 1386 is 1164
9999 mem: location 1383 is 2
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1 in location 1241
9999 mem: storing 1 in location 1242
9999 mem: storing 1 in location 1243
9999 mem: storing 1164 in location 1244
9999 mem: storing 1 in location 1245
9999 mem: storing 2 in location 1246
9999 mem: storing 1164 in location 1247
9999 mem: storing 2 in location 1248
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1345 is 1145
9999 mem: location 1363 is 1240
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1182
9999 mem: incrementing refcount of 1240: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1182 is 1240
9999 mem: location 1183 is 1156
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1161
9999 mem: incrementing refcount of 1240: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1162
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1451
9999 mem: storing 1451 in location 1163
9999 mem: incrementing refcount of 1451: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1240
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1163 is 1451
9999 mem: skipping refcount at 1451
9999 mem: storing 1240 in location 1452
9999 mem: storing 0 in location 1453
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1451
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1451
9999 mem: location 1183 is 1156
9999 mem: storing 1451 in location 1156
9999 mem: incrementing refcount of 1451: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1184 is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1181 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 10 -> 9
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1344 is 1008
9999 mem: location 1345 is 1145
9999 mem: location 1350 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 75 -> 76
9999 mem: decrementing refcount of 1145: 10 -> 9
9999 mem: storing 1145 in location 1330
9999 mem: incrementing refcount of 1145: 9 -> 10
9999 mem: storing 0 in location 1340
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 76 -> 77
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1277
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1280
9999 mem: incrementing refcount of 1322: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1280 is 1322
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 1
9999 mem: storing 1 in location 1281
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1324 is 1300
9999 mem: storing 1300 in location 1282
9999 mem: incrementing refcount of 1300: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 5 in location 1283
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 5
9999 mem: storing 0 in location 1284
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1281 is 1
9998 run: address to copy is 1306
9998 run: its type is event
9999 mem: location 1306 is 1
9999 mem: location 1307 is 65514
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: storing 1 in location 1286
9999 mem: storing 65514 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1281 is 1
9999 mem: storing 2 in location 1281
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1300
9999 mem: location 1281 is 2
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy to is 1323
9999 mem: storing 2 in location 1323
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1286 is 1
9999 mem: location 1287 is 65514
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1280 is 1322
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1333
9999 mem: storing 65514 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: decrementing refcount of 1322: 3 -> 2
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 2 -> 3
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1339
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 18
9990 schedule: editor-event-loop/run_1001/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1145
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1341
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1346
9999 mem: storing 65514 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1350
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1345 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1351
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1352
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1353
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1354
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1355
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1356
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1357
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1358
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1359
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1360
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1347 in location 1414
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1414 is 1347
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1377
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1401
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1415
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1416
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1417
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 1 in location 1419
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1355 is 1149
9999 mem: location 1149 is 1185
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1194
9999 mem: storing 1194 in location 1420
9999 mem: incrementing refcount of 1194: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1420 is 1194
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1380
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1381
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1185
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1382
9999 mem: incrementing refcount of 1164: 12 -> 13
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1420 is 1194
9999 mem: location 1355 is 1149
9999 mem: decrementing refcount of 1185: 17 -> 16
9999 mem: storing 1194 in location 1149
9999 mem: incrementing refcount of 1194: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1345 is 1145
9999 mem: location 1352 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1428
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1431
9999 mem: incrementing refcount of 1145: 11 -> 12
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1432
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1194
9999 mem: storing 1194 in location 1433
9999 mem: incrementing refcount of 1194: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1434
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1435
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1436
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1437
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1433 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1433 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 98
9999 mem: storing 98 in location 1438
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1439
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1437 is 9
9999 mem: storing 8 in location 1446
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1435 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1446 is 8
9999 mem: storing 0 in location 1447
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 63
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1435 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1435 is 1154
9999 mem: storing 3 in location 1154
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1431 is 1145
9999 mem: location 1441 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 12 -> 11
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 11 -> 12
9999 mem: storing 0 in location 1350
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1344 is 1008
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1163
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 3
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 80 -> 81
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1383
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1384
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1385
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1386
9999 mem: incrementing refcount of 1164: 13 -> 14
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1383 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1364
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1192
9999 mem: incrementing refcount of 1451: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 1240
9999 mem: location 1453 is 0
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1452 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1363
9999 mem: incrementing refcount of 1240: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1369
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1369 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 2
9999 mem: storing 2 in location 1387
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1383 is 2
9999 mem: location 1387 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 105 run: {after-row: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1389
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {after-cursor-row: "number"}
9999 mem: location 1384 is 1
9999 mem: location 1389 is 1245
9999 mem: storing 1 in location 1245
 105 run: {after-column: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 2
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1246
9999 mem: storing 1246 in location 1390
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {after-cursor-column: "number"}
9999 mem: location 1385 is 3
9999 mem: location 1390 is 1246
9999 mem: storing 3 in location 1246
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1247
9999 mem: storing 1247 in location 1391
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: location 1391 is 1247
9999 mem: decrementing refcount of 1164: 14 -> 13
9999 mem: storing 1164 in location 1247
9999 mem: incrementing refcount of 1164: 13 -> 14
 105 run: jump {+handle-keyboard-event_1_264+done-adding-move-operation: "label"}
9998 run: jumping to instruction 755
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1344 is 1008
9999 mem: location 1345 is 1145
9999 mem: location 1350 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: decrementing refcount of 1145: 12 -> 11
9999 mem: storing 1145 in location 1330
9999 mem: incrementing refcount of 1145: 11 -> 12
9999 mem: storing 0 in location 1340
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 81 -> 82
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 3
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 81 -> 82
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1277
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1280
9999 mem: incrementing refcount of 1322: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1280 is 1322
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 2
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 2
9999 mem: storing 2 in location 1281
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 2
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1324 is 1300
9999 mem: storing 1300 in location 1282
9999 mem: incrementing refcount of 1300: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 5 in location 1283
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1281 is 2
9999 mem: location 1283 is 5
9999 mem: storing 0 in location 1284
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1281 is 2
9998 run: address to copy is 1310
9998 run: its type is event
9999 mem: location 1310 is 1
9999 mem: location 1311 is 65514
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: storing 1 in location 1286
9999 mem: storing 65514 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1281 is 2
9999 mem: storing 3 in location 1281
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 2
9999 mem: location 1324 is 1300
9999 mem: location 1281 is 3
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy to is 1323
9999 mem: storing 3 in location 1323
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1286 is 1
9999 mem: location 1287 is 65514
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1280 is 1322
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1333
9999 mem: storing 65514 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: decrementing refcount of 1322: 4 -> 3
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 3 -> 4
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1339
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1145
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1341
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1346
9999 mem: storing 65514 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1350
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1345 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1351
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1352
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1353
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1354
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1355
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1356
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1357
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1358
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1359
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1360
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1347 in location 1414
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1414 is 1347
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1377
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1401
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1415
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1416
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1417
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 1 in location 1419
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1355 is 1149
9999 mem: location 1149 is 1194
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1420
9999 mem: incrementing refcount of 1198: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1420 is 1198
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1380
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1381
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1194
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1382
9999 mem: incrementing refcount of 1164: 14 -> 15
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1420 is 1198
9999 mem: location 1355 is 1149
9999 mem: decrementing refcount of 1194: 17 -> 16
9999 mem: storing 1198 in location 1149
9999 mem: incrementing refcount of 1198: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1345 is 1145
9999 mem: location 1352 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1428
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1431
9999 mem: incrementing refcount of 1145: 13 -> 14
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1432
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1198
9999 mem: storing 1198 in location 1433
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1434
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1435
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1436
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1437
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1433 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1433 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 99
9999 mem: storing 99 in location 1438
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1439
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1437 is 9
9999 mem: storing 8 in location 1446
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1435 is 1154
9999 mem: location 1154 is 3
9999 mem: location 1446 is 8
9999 mem: storing 0 in location 1447
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 63
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1435 is 1154
9999 mem: location 1154 is 3
9999 mem: location 1435 is 1154
9999 mem: storing 4 in location 1154
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1431 is 1145
9999 mem: location 1441 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 14 -> 13
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 13 -> 14
9999 mem: storing 0 in location 1350
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1344 is 1008
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 85 -> 86
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1163
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 4
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 85 -> 86
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1383
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1384
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1385
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1386
9999 mem: incrementing refcount of 1164: 15 -> 16
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1383 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1364
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1192
9999 mem: incrementing refcount of 1451: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 1240
9999 mem: location 1453 is 0
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1452 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1363
9999 mem: incrementing refcount of 1240: 6 -> 7
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1369
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1369 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 2
9999 mem: storing 2 in location 1387
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1383 is 2
9999 mem: location 1387 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 105 run: {after-row: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1389
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {after-cursor-row: "number"}
9999 mem: location 1384 is 1
9999 mem: location 1389 is 1245
9999 mem: storing 1 in location 1245
 105 run: {after-column: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 3
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1246
9999 mem: storing 1246 in location 1390
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {after-cursor-column: "number"}
9999 mem: location 1385 is 4
9999 mem: location 1390 is 1246
9999 mem: storing 4 in location 1246
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 4
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1247
9999 mem: storing 1247 in location 1391
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: location 1391 is 1247
9999 mem: decrementing refcount of 1164: 16 -> 15
9999 mem: storing 1164 in location 1247
9999 mem: incrementing refcount of 1164: 15 -> 16
 105 run: jump {+handle-keyboard-event_1_264+done-adding-move-operation: "label"}
9998 run: jumping to instruction 755
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1344 is 1008
9999 mem: location 1345 is 1145
9999 mem: location 1350 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: decrementing refcount of 1145: 14 -> 13
9999 mem: storing 1145 in location 1330
9999 mem: incrementing refcount of 1145: 13 -> 14
9999 mem: storing 0 in location 1340
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 4
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1277
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1280
9999 mem: incrementing refcount of 1322: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1280 is 1322
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 3
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 3
9999 mem: storing 3 in location 1281
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 3
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1324 is 1300
9999 mem: storing 1300 in location 1282
9999 mem: incrementing refcount of 1300: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 5 in location 1283
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1281 is 3
9999 mem: location 1283 is 5
9999 mem: storing 0 in location 1284
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1281 is 3
9998 run: address to copy is 1314
9998 run: its type is event
9999 mem: location 1314 is 1
9999 mem: location 1315 is 65514
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1286
9999 mem: storing 65514 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1281 is 3
9999 mem: storing 4 in location 1281
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 3
9999 mem: location 1324 is 1300
9999 mem: location 1281 is 4
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy to is 1323
9999 mem: storing 4 in location 1323
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1286 is 1
9999 mem: location 1287 is 65514
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1280 is 1322
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1333
9999 mem: storing 65514 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: decrementing refcount of 1322: 5 -> 4
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 4 -> 5
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1339
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1145
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65514
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1341
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1346
9999 mem: storing 65514 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1350
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1345 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1351
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1352
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1353
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1354
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1355
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1356
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1357
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1358
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1359
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1360
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65514
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1347 in location 1414
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1414 is 1347
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1377
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1401
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1415
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1416
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 0 in location 1417
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1414 is 1347
9999 mem: location 1347 is 65514
9999 mem: storing 1 in location 1419
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1355 is 1149
9999 mem: location 1149 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1420
9999 mem: incrementing refcount of 1202: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1420 is 1202
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1380
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 4
9999 mem: storing 4 in location 1381
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1382
9999 mem: incrementing refcount of 1164: 16 -> 17
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1420 is 1202
9999 mem: location 1355 is 1149
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1202 in location 1149
9999 mem: incrementing refcount of 1202: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1345 is 1145
9999 mem: location 1352 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
9999 mem: new alloc from free list: 1428
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1431
9999 mem: incrementing refcount of 1145: 15 -> 16
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1432
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1202
9999 mem: storing 1202 in location 1433
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1434
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1435
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1436
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 4
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1431 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1437
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1433 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1433 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1438
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1438 is 10
9999 mem: storing 1 in location 1439
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1434 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1434 is 1153
9999 mem: storing 2 in location 1153
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1436 is 1
9999 mem: location 1435 is 1154
9999 mem: storing 1 in location 1154
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {screen-height: "number"}
9999 mem: location 1434 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1432 is 5
9999 mem: storing 0 in location 1440
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 106 run: jump-if {below-screen?: "boolean"}, {1: "offset"}
9999 mem: location 1440 is 0
9998 run: jump-if fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1431 is 1145
9999 mem: location 1441 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 16 -> 15
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 15 -> 16
9999 mem: storing 0 in location 1350
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1344 is 1008
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 90 -> 91
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1383
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1384
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1385
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1386
9999 mem: incrementing refcount of 1164: 17 -> 18
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1383 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1364
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1192
9999 mem: incrementing refcount of 1451: 4 -> 5
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 1240
9999 mem: location 1453 is 0
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1452 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 7 -> 8
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1363
9999 mem: incrementing refcount of 1240: 8 -> 9
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 4
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1369
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1369 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 4
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 2
9999 mem: storing 2 in location 1387
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1383 is 2
9999 mem: location 1387 is 2
9999 mem: storing 1 in location 1388
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 105 run: {after-row: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 1
9999 mem: location 1246 is 4
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1389
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {after-cursor-row: "number"}
9999 mem: location 1384 is 2
9999 mem: location 1389 is 1245
9999 mem: storing 2 in location 1245
 105 run: {after-column: ("address" "number")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 4
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1246
9999 mem: storing 1246 in location 1390
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {after-cursor-column: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1390 is 1246
9999 mem: storing 1 in location 1246
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1369 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1369 is 1242
9998 run: address to copy is 1247
9999 mem: storing 1247 in location 1391
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: location 1391 is 1247
9999 mem: decrementing refcount of 1164: 18 -> 17
9999 mem: storing 1164 in location 1247
9999 mem: incrementing refcount of 1164: 17 -> 18
 105 run: jump {+handle-keyboard-event_1_264+done-adding-move-operation: "label"}
9998 run: jumping to instruction 755
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1344 is 1008
9999 mem: location 1345 is 1145
9999 mem: location 1350 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 90 -> 91
9999 mem: decrementing refcount of 1145: 16 -> 15
9999 mem: storing 1145 in location 1330
9999 mem: incrementing refcount of 1145: 15 -> 16
9999 mem: storing 0 in location 1340
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 25
9990 schedule: editor-event-loop/run_1001/scenario_editor-moves-cursor-to-next-line-with-right-arrow-2
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 2
9999 mem: location 1332 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 91 -> 92
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 92 -> 91
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 91 -> 92
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1277
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1280
9999 mem: incrementing refcount of 1322: 5 -> 6
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1280 is 1322
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 4
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 4
9999 mem: storing 4 in location 1281
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 4
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1324 is 1300
9999 mem: storing 1300 in location 1282
9999 mem: incrementing refcount of 1300: 5 -> 6
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 5 in location 1283
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1281 is 4
9999 mem: location 1283 is 5
9999 mem: storing 0 in location 1284
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1281 is 4
9998 run: address to copy is 1318
9998 run: its type is event
9999 mem: location 1318 is 0
9999 mem: location 1319 is 48
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 0 in location 1286
9999 mem: storing 48 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1281 is 4
9999 mem: storing 5 in location 1281
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 4
9999 mem: location 1324 is 1300
9999 mem: location 1281 is 5
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy to is 1323
9999 mem: storing 5 in location 1323
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1286 is 0
9999 mem: location 1287 is 48
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1280 is 1322
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1333
9999 mem: storing 48 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: decrementing refcount of 1322: 6 -> 5
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 5 -> 6
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 0
9999 mem: location 1334 is 48
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1339
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1145
9999 mem: location 1333 is 0
9999 mem: location 1334 is 48
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1341
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 92 -> 93
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 16 -> 17
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1346
9999 mem: storing 48 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1350
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1345 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1351
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1352
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1353
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1354
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1355
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1356
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1357
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1358
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1359
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1346 is 0
9999 mem: location 1347 is 48
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1347 in location 1360
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1360 is 1347
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1361
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1372
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1377
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1394
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1399
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1401
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1402
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1406
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 0 in location 1410
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: storing 1 in location 1413
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1350
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1413 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1395
9999 mem: incrementing refcount of 1164: 18 -> 19
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1355 is 1149
9999 mem: location 1149 is 1202
9999 mem: storing 1202 in location 1407
9999 mem: incrementing refcount of 1202: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1345 is 1145
9999 mem: location 1360 is 1347
9999 mem: location 1347 is 48
9999 mem: location 1344 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1454
9999 mem: storing 31 in location 1455
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1457
9999 mem: incrementing refcount of 1145: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1458
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1459
9999 mem: incrementing refcount of 1008: 95 -> 96
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1460
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1458 is 48
9999 mem: location 1460 is 1149
9999 mem: location 1149 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1181
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1182
9999 mem: incrementing refcount of 1202: 17 -> 18
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1487
9999 mem: storing 1487 in location 1183
9999 mem: incrementing refcount of 1487: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1183 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 0
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1181 is 48
9999 mem: location 1183 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy to is 1488
9999 mem: storing 48 in location 1488
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1184
9999 mem: incrementing refcount of 1206: 11 -> 12
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1183 is 1487
9999 mem: location 1182 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1204
9999 mem: storing 1487 in location 1204
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 48
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1182 is 1202
9999 mem: location 1183 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy to is 1490
9999 mem: storing 1202 in location 1490
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 48
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1202
9999 mem: location 1184 is 1206
9999 mem: location 1183 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy to is 1489
9999 mem: storing 1206 in location 1489
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1184 is 1206
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1183 is 1487
9999 mem: location 1184 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1209
9999 mem: storing 1487 in location 1209
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1182 is 1202
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1460 is 1149
9999 mem: location 1149 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1487
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1487
9999 mem: storing 1487 in location 1193
9999 mem: incrementing refcount of 1487: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1487
9999 mem: location 1460 is 1149
9999 mem: decrementing refcount of 1202: 19 -> 18
9999 mem: storing 1487 in location 1149
9999 mem: incrementing refcount of 1487: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1461
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1462
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1463
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1457 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1464
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1461 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1465
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1462 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1466
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1459 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 107 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1467
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1459 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 107 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1468
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1464 is 9
9999 mem: storing 8 in location 1469
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1462 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1469 is 8
9999 mem: storing 0 in location 1470
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1462 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1462 is 1154
9999 mem: storing 2 in location 1154
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1460 is 1149
9999 mem: location 1149 is 1487
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1192
9999 mem: incrementing refcount of 1487: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1487
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 48
9999 mem: location 1489 is 1206
9999 mem: location 1490 is 1202
9999 mem: location 1192 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1489
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1489 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1477
9999 mem: incrementing refcount of 1206: 13 -> 14
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1477 is 1206
9999 mem: storing 0 in location 1478
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1477 is 1206
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1462 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1467 is 10
9999 mem: storing 0 in location 1481
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1460 is 1149
9999 mem: location 1149 is 1487
9999 mem: storing 1487 in location 1483
9999 mem: incrementing refcount of 1487: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1459 is 1008
9999 mem: location 1465 is 2
9999 mem: location 1466 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1466 is 1
9999 mem: storing 1 in location 1484
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1476
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1484 is 1
9999 mem: location 1464 is 9
9999 mem: storing 0 in location 1481
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1483 is 1487
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1483 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 48
9999 mem: location 1489 is 1206
9999 mem: location 1490 is 1202
9999 mem: location 1483 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1488
9998 run: its type is "character"
9999 mem: location 1488 is 48
9999 mem: storing 48 in location 1485
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1485 is 48
9999 mem: storing 0 in location 1486
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1486 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1459 is 1008
9999 mem: location 1485 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1256
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1265
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 48
9999 mem: storing 0 in location 1266
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 1
9999 mem: storing 21 in location 1269
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 48
9999 mem: storing 0 in location 1272
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 21
9999 mem: storing 1058 in location 1274
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 48
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1058
9999 mem: location 1274 is 1058
9999 mem: storing 48 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 1
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 1
9999 mem: storing 2 in location 1265
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 2
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1484 is 1
9999 mem: storing 2 in location 1484
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1483 is 1487
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1192
9999 mem: incrementing refcount of 1487: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1487
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 48
9999 mem: location 1489 is 1206
9999 mem: location 1490 is 1202
9999 mem: location 1192 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1489
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1489 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1487: 6 -> 5
9999 mem: storing 1206 in location 1483
9999 mem: incrementing refcount of 1206: 15 -> 16
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1476
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1484 is 2
9999 mem: location 1464 is 9
9999 mem: storing 0 in location 1481
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1483 is 1206
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1483 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1487
9999 mem: location 1483 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1485
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1485 is 100
9999 mem: storing 0 in location 1486
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1486 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1459 is 1008
9999 mem: location 1485 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1252
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1255
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1256
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1259
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1256 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1255 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1261
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1262
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1263
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1263 is 2
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1262 is 5
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1265
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1261 is 10
9999 mem: storing 1 in location 1264
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1264 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1266
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1263 is 2
9999 mem: location 1261 is 10
9999 mem: storing 20 in location 1269
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1269 is 20
9999 mem: location 1265 is 2
9999 mem: storing 22 in location 1269
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1270
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1271
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1256 is 100
9999 mem: storing 0 in location 1272
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1270 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1269 is 22
9999 mem: storing 1060 in location 1274
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1256 is 100
9999 mem: location 1257 is 7
9999 mem: location 1274 is 1060
9999 mem: location 1274 is 1060
9999 mem: storing 100 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1261 is 10
9999 mem: storing 9 in location 1275
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1265 is 2
9999 mem: location 1275 is 9
9999 mem: storing 0 in location 1276
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1265 is 2
9999 mem: storing 3 in location 1265
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 3
9999 mem: location 1255 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1255 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1484 is 2
9999 mem: storing 3 in location 1484
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1483 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1192
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1487
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1193
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1206: 17 -> 16
9999 mem: storing 0 in location 1483
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1476
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1484 is 3
9999 mem: location 1464 is 9
9999 mem: storing 0 in location 1481
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1483 is 0
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1476
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1457 is 1145
9999 mem: location 1459 is 1008
9999 mem: location 1476 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1145: 18 -> 17
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 17 -> 18
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1344
9999 mem: incrementing refcount of 1008: 100 -> 101
9999 mem: storing 0 in location 1350
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1397
9999 mem: incrementing refcount of 1164: 19 -> 20
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1345 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1364
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1364 is 1156
9999 mem: location 1156 is 1451
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1192
9999 mem: incrementing refcount of 1451: 5 -> 6
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 1240
9999 mem: location 1453 is 0
9999 mem: location 1192 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1452 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 9 -> 10
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1363
9999 mem: incrementing refcount of 1240: 10 -> 11
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 1
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 2
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1363 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 0 in location 1370
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1407 is 1202
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1487
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1487
9999 mem: storing 1487 in location 1193
9999 mem: incrementing refcount of 1487: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1487
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1487
9999 mem: storing 1487 in location 1371
9999 mem: incrementing refcount of 1487: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1487
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1487 in location 1192
9999 mem: incrementing refcount of 1487: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1487
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1487
9999 mem: skipping refcount at 1487
9999 mem: location 1488 is 48
9999 mem: location 1489 is 1206
9999 mem: location 1490 is 1202
9999 mem: location 1192 is 1487
9999 mem: skipping refcount at 1487
9998 run: address to copy is 1489
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1489 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1409
9999 mem: incrementing refcount of 1206: 17 -> 18
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1491
9999 mem: decrementing refcount of 1240: 11 -> 10
9999 mem: storing 1491 in location 1363
9999 mem: incrementing refcount of 1491: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1358 is 2
9999 mem: location 1359 is 1
9999 mem: location 1395 is 1164
9999 mem: location 1356 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1357 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1397 is 1164
9999 mem: location 1371 is 1487
9999 mem: location 1409 is 1206
9999 mem: location 1363 is 1491
9999 mem: skipping refcount at 1491
9999 mem: location 1363 is 1491
9999 mem: skipping refcount at 1491
9999 mem: storing 0 in location 1492
9999 mem: storing 2 in location 1493
9999 mem: storing 1 in location 1494
9999 mem: storing 1164 in location 1495
9999 mem: storing 2 in location 1496
9999 mem: storing 2 in location 1497
9999 mem: storing 1164 in location 1498
9999 mem: storing 1487 in location 1499
9999 mem: storing 1206 in location 1500
9999 mem: storing 1 in location 1501
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1345 is 1145
9999 mem: location 1363 is 1491
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 18 -> 19
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1182
9999 mem: incrementing refcount of 1491: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1182 is 1491
9999 mem: location 1183 is 1156
9999 mem: location 1156 is 1451
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1491 in location 1161
9999 mem: incrementing refcount of 1491: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1162
9999 mem: incrementing refcount of 1451: 6 -> 7
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1503
9999 mem: storing 1503 in location 1163
9999 mem: incrementing refcount of 1503: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1491
9999 mem: location 1162 is 1451
9999 mem: location 1163 is 1503
9999 mem: skipping refcount at 1503
9999 mem: location 1163 is 1503
9999 mem: skipping refcount at 1503
9999 mem: storing 1491 in location 1504
9999 mem: storing 1451 in location 1505
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1503
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1503
9999 mem: location 1183 is 1156
9999 mem: decrementing refcount of 1451: 7 -> 6
9999 mem: storing 1503 in location 1156
9999 mem: incrementing refcount of 1503: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1503
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1184 is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1181 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 19 -> 18
9999 mem: storing 1145 in location 1345
9999 mem: incrementing refcount of 1145: 18 -> 19
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1344 is 1008
9999 mem: location 1345 is 1145
9999 mem: location 1350 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 100 -> 101
9999 mem: decrementing refcount of 1145: 19 -> 18
9999 mem: storing 1145 in location 1330
9999 mem: incrementing refcount of 1145: 18 -> 19
9999 mem: storing 0 in location 1340
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1503
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1487
9999 mem: location 1150 is 1
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1503
9999 mem: location 1157 is 0
9999 mem: location 1330 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 2
9999 mem: location 1332 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1161
9999 mem: incrementing refcount of 1008: 101 -> 102
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1162
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1163
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1161 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 2
9999 mem: location 1161 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1161 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 102 -> 101
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 101 -> 102
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1277
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1322 in location 1280
9999 mem: incrementing refcount of 1322: 6 -> 7
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1280 is 1322
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 5
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 5
9999 mem: storing 5 in location 1281
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 5
9999 mem: location 1324 is 1300
9999 mem: location 1280 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1324 is 1300
9999 mem: storing 1300 in location 1282
9999 mem: incrementing refcount of 1300: 6 -> 7
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1282 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 5 in location 1283
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1281 is 5
9999 mem: location 1283 is 5
9999 mem: storing 1 in location 1284
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
9999 mem: storing 1189 in location 1285
9999 mem: incrementing refcount of 1189: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1285 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1280 is 1322
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: decrementing refcount of 1322: 7 -> 6
9999 mem: storing 1322 in location 1329
9999 mem: incrementing refcount of 1322: 6 -> 7
9999 mem: storing 1 in location 1337
9999 mem: storing 1 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1322
9999 mem: location 1330 is 1145
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    . abc      .\n    . 0d       .\n    . ┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
