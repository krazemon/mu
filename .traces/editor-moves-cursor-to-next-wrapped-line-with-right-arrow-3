 102 run: assume-console {"\n    left-click 1, 4\n    press right-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {4: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {4: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9999 mem: storing 'left-click' event starting at 1292
9999 mem: storing 'press' event starting at 1296
9999 mem: storing console in 1300
9999 mem: storing console data in 1302
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1300
9999 mem: location 2 is 1133
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1303
9999 mem: storing 14 in location 1304
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1306
9999 mem: incrementing refcount of 1008: 49 -> 50
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1307
9999 mem: incrementing refcount of 1300: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1308
9999 mem: incrementing refcount of 1133: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1309
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1310
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1306 is 1008
9999 mem: location 1309 is 1
9999 mem: location 1310 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1146
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1149
9999 mem: incrementing refcount of 1008: 50 -> 51
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1150
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1151
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1149 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 1
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 1
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1149 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1306
9999 mem: incrementing refcount of 1008: 50 -> 51
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1307 is 1300
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1267
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1270
9999 mem: incrementing refcount of 1300: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1270 is 1300
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 0
9999 mem: location 1302 is 1290
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1301
9998 run: its type is "number"
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1271
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 0
9999 mem: location 1302 is 1290
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1302 is 1290
9999 mem: storing 1290 in location 1272
9999 mem: incrementing refcount of 1290: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1272 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 2 in location 1273
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1271 is 0
9999 mem: location 1273 is 2
9999 mem: storing 0 in location 1274
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1274 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1272 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1271 is 0
9998 run: address to copy is 1292
9998 run: its type is event
9999 mem: location 1292 is 2
9999 mem: location 1293 is 65513
9999 mem: location 1294 is 1
9999 mem: location 1295 is 4
9999 mem: storing 2 in location 1276
9999 mem: storing 65513 in location 1277
9999 mem: storing 1 in location 1278
9999 mem: storing 4 in location 1279
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1271 is 0
9999 mem: storing 1 in location 1271
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 0
9999 mem: location 1302 is 1290
9999 mem: location 1271 is 1
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy to is 1301
9999 mem: storing 1 in location 1301
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1276 is 2
9999 mem: location 1277 is 65513
9999 mem: location 1278 is 1
9999 mem: location 1279 is 4
9999 mem: location 1270 is 1300
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 4]
9998 run: result 1 is 1300
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1311
9999 mem: storing 65513 in location 1312
9999 mem: storing 1 in location 1313
9999 mem: storing 4 in location 1314
9999 mem: decrementing refcount of 1300: 2 -> 1
9999 mem: storing 1300 in location 1307
9999 mem: incrementing refcount of 1300: 1 -> 2
9999 mem: storing 1 in location 1315
9999 mem: storing 0 in location 1316
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1311 is 2
9999 mem: location 1312 is 65513
9999 mem: location 1313 is 1
9999 mem: location 1314 is 4
9999 mem: storing 1312 in location 1317
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1317 is 1312
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1306 is 1008
9999 mem: location 1308 is 1133
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 65513
9999 mem: location 1313 is 1
9999 mem: location 1314 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1319
9999 mem: storing 24 in location 1320
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 51 -> 52
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1323
9999 mem: incrementing refcount of 1133: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1324
9999 mem: storing 1 in location 1325
9999 mem: storing 4 in location 1326
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1323 is 1133
9998 run: jumping to instruction 6
9990 schedule: move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-next-wrapped-line-with-right-arrow-3
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1324 is 65513
9999 mem: location 1325 is 1
9999 mem: location 1326 is 4
9998 run: address to copy is 1325
9998 run: its type is "number"
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1327
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1327 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1324 is 65513
9999 mem: location 1325 is 1
9999 mem: location 1326 is 4
9998 run: address to copy is 1326
9998 run: its type is "number"
9999 mem: location 1326 is 4
9999 mem: storing 4 in location 1328
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1329
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1328 is 4
9999 mem: location 1329 is 1
9999 mem: storing 0 in location 1330
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 5
9999 mem: storing 5 in location 1331
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1328 is 4
9999 mem: location 1331 is 5
9999 mem: storing 0 in location 1332
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1333
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1334
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1135
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1135 is 1152
9999 mem: storing 1152 in location 1335
9999 mem: incrementing refcount of 1152: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1322 is 1008
9999 mem: location 1323 is 1133
9999 mem: location 1327 is 1
9999 mem: location 1328 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1202
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1205
9999 mem: incrementing refcount of 1008: 52 -> 53
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1206
9999 mem: incrementing refcount of 1133: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1206 is 1133
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1209
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 5
9999 mem: storing 5 in location 1210
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1205 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1180 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1180 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1180 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1181
 107 run: return {height: "number"}
9999 mem: location 1181 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1211
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1135
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1135 is 1152
9999 mem: storing 1152 in location 1212
9999 mem: incrementing refcount of 1152: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1152
9999 mem: storing 1152 in location 1213
9999 mem: incrementing refcount of 1152: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1180
9999 mem: incrementing refcount of 1152: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1152
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 167
9999 mem: location 1154 is 1173
9999 mem: location 1155 is 0
9999 mem: location 1180 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1173
9999 mem: storing 1173 in location 1181
9999 mem: incrementing refcount of 1173: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1173
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: decrementing refcount of 1152: 14 -> 13
9999 mem: storing 1173 in location 1212
9999 mem: incrementing refcount of 1173: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1214
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1209 is 1
9999 mem: storing 1 in location 1215
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1207 is 1
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1141
9999 mem: storing 1 in location 1141
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1207 is 1
9999 mem: storing 1 in location 1216
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1208 is 4
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1142
9999 mem: storing 4 in location 1142
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1208 is 4
9999 mem: storing 4 in location 1217
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1137
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1137 is 1152
9999 mem: storing 1152 in location 1218
9999 mem: incrementing refcount of 1152: 13 -> 14
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1173
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 1
9999 mem: location 1217 is 4
9999 mem: storing 0 in location 1221
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 97
9999 mem: location 1175 is 1182
9999 mem: location 1176 is 1152
9999 mem: location 1212 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1174
9998 run: its type is "character"
9999 mem: location 1174 is 97
9999 mem: storing 97 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 97
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1180
9999 mem: incrementing refcount of 1173: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1173
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 97
9999 mem: location 1175 is 1182
9999 mem: location 1176 is 1152
9999 mem: location 1180 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1182
9999 mem: storing 1182 in location 1181
9999 mem: incrementing refcount of 1182: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1182
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: decrementing refcount of 1173: 15 -> 14
9999 mem: storing 1182 in location 1212
9999 mem: incrementing refcount of 1182: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1180
9999 mem: incrementing refcount of 1152: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1152
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 167
9999 mem: location 1154 is 1173
9999 mem: location 1155 is 0
9999 mem: location 1180 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1173
9999 mem: storing 1173 in location 1181
9999 mem: incrementing refcount of 1173: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1173
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: decrementing refcount of 1152: 15 -> 14
9999 mem: storing 1173 in location 1213
9999 mem: incrementing refcount of 1173: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 1
9999 mem: storing 2 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1182
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 2
9999 mem: location 1217 is 4
9999 mem: storing 0 in location 1221
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1182
9999 mem: skipping refcount at 1182
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1173
9999 mem: location 1212 is 1182
9999 mem: skipping refcount at 1182
9998 run: address to copy is 1183
9998 run: its type is "character"
9999 mem: location 1183 is 98
9999 mem: storing 98 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 98
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1182 in location 1180
9999 mem: incrementing refcount of 1182: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1182
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1182
9999 mem: skipping refcount at 1182
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1173
9999 mem: location 1180 is 1182
9999 mem: skipping refcount at 1182
9998 run: address to copy is 1184
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1181
9999 mem: incrementing refcount of 1186: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1182: 15 -> 14
9999 mem: storing 1186 in location 1212
9999 mem: incrementing refcount of 1186: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1180
9999 mem: incrementing refcount of 1173: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1173
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 97
9999 mem: location 1175 is 1182
9999 mem: location 1176 is 1152
9999 mem: location 1180 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1182
9999 mem: storing 1182 in location 1181
9999 mem: incrementing refcount of 1182: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1182
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: decrementing refcount of 1173: 17 -> 16
9999 mem: storing 1182 in location 1213
9999 mem: incrementing refcount of 1182: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 2
9999 mem: storing 3 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1186
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 3
9999 mem: location 1217 is 4
9999 mem: storing 0 in location 1221
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 99
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1182
9999 mem: location 1212 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is "character"
9999 mem: location 1187 is 99
9999 mem: storing 99 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 99
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 3
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1180
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1186
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 99
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1182
9999 mem: location 1180 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1181
9999 mem: incrementing refcount of 1190: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1186: 15 -> 14
9999 mem: storing 1190 in location 1212
9999 mem: incrementing refcount of 1190: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1182 in location 1180
9999 mem: incrementing refcount of 1182: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1182
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1182
9999 mem: skipping refcount at 1182
9999 mem: location 1183 is 98
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1173
9999 mem: location 1180 is 1182
9999 mem: skipping refcount at 1182
9998 run: address to copy is 1184
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1181
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1182: 17 -> 16
9999 mem: storing 1186 in location 1213
9999 mem: incrementing refcount of 1186: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 3
9999 mem: storing 4 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1190
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 4
9999 mem: location 1217 is 4
9999 mem: storing 1 in location 1221
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1186
9999 mem: decrementing refcount of 1152: 14 -> 13
9999 mem: storing 1186 in location 1218
9999 mem: incrementing refcount of 1186: 16 -> 17
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1152
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1218 is 1186
9999 mem: location 1206 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1137
9999 mem: storing 1186 in location 1137
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 100
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1212 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is "character"
9999 mem: location 1191 is 100
9999 mem: storing 100 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 100
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 4
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1180
9999 mem: incrementing refcount of 1190: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1190
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 100
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1180 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1181
9999 mem: incrementing refcount of 1194: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1190: 15 -> 14
9999 mem: storing 1194 in location 1212
9999 mem: incrementing refcount of 1194: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1180
9999 mem: incrementing refcount of 1186: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1186
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 99
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1182
9999 mem: location 1180 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1181
9999 mem: incrementing refcount of 1190: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1186: 18 -> 17
9999 mem: storing 1190 in location 1213
9999 mem: incrementing refcount of 1190: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 4
9999 mem: storing 5 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1194
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 5
9999 mem: location 1217 is 4
9999 mem: storing 0 in location 1221
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1212 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 101
9999 mem: storing 101 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 101
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 5
9999 mem: location 1210 is 5
9999 mem: storing 1 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1209 is 1
9999 mem: storing 1 in location 1215
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1214 is 1
9999 mem: storing 2 in location 1214
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1194
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 2
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 2
9999 mem: location 1216 is 1
9999 mem: storing 0 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1212 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 101
9999 mem: storing 101 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 101
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1180
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1180 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1181
9999 mem: incrementing refcount of 1198: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 15 -> 14
9999 mem: storing 1198 in location 1212
9999 mem: incrementing refcount of 1198: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1180
9999 mem: incrementing refcount of 1190: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1190
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 100
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1180 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1181
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1190: 17 -> 16
9999 mem: storing 1194 in location 1213
9999 mem: incrementing refcount of 1194: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 1
9999 mem: storing 2 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1198
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 2
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 2
9999 mem: location 1216 is 1
9999 mem: storing 0 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 102
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1194
9999 mem: location 1212 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 102
9999 mem: storing 102 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 102
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1212 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1180
9999 mem: incrementing refcount of 1198: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 102
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1194
9999 mem: location 1180 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1181
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1198: 14 -> 13
9999 mem: storing 0 in location 1212
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1213 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1180
9999 mem: incrementing refcount of 1194: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1180 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1181
9999 mem: incrementing refcount of 1198: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 17 -> 16
9999 mem: storing 1198 in location 1213
9999 mem: incrementing refcount of 1198: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 2
9999 mem: storing 3 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 2
9999 mem: location 1216 is 1
9999 mem: storing 0 in location 1220
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 3
9999 mem: location 1217 is 4
9999 mem: storing 1 in location 1226
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1220 is 0
9999 mem: location 1226 is 1
9999 mem: storing 0 in location 1227
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 2
9999 mem: location 1216 is 1
9999 mem: storing 0 in location 1228
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1229
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1206 is 1133
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1133
9999 mem: decrementing refcount of 1133: 9 -> 8
9999 mem: storing 1133 in location 1323
9999 mem: incrementing refcount of 1133: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1336
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1135
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1135 is 1152
9999 mem: storing 1152 in location 1337
9999 mem: incrementing refcount of 1152: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1338
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1323 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1339
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 41
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1230
9999 mem: storing 1230 in location 1341
9999 mem: incrementing refcount of 1230: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1334 is 1
9999 mem: location 1335 is 1152
9999 mem: location 1338 is 1
9999 mem: location 1339 is 4
9999 mem: location 1337 is 1152
9999 mem: location 1336 is 0
9999 mem: location 1341 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1341 is 1230
9999 mem: skipping refcount at 1230
9999 mem: storing 1 in location 1231
9999 mem: storing 1 in location 1232
9999 mem: storing 1 in location 1233
9999 mem: storing 1152 in location 1234
9999 mem: storing 1 in location 1235
9999 mem: storing 4 in location 1236
9999 mem: storing 1152 in location 1237
9999 mem: storing 0 in location 1238
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1323 is 1133
9999 mem: location 1341 is 1230
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1166
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1169
9999 mem: incrementing refcount of 1133: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1170
9999 mem: incrementing refcount of 1230: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1171
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1230
9999 mem: location 1171 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1146
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1149
9999 mem: incrementing refcount of 1230: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1345
9999 mem: storing 1345 in location 1151
9999 mem: incrementing refcount of 1345: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1149 is 1230
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1151 is 1345
9999 mem: skipping refcount at 1345
9999 mem: storing 1230 in location 1346
9999 mem: storing 0 in location 1347
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1151 is 1345
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1345
9999 mem: storing 1345 in location 1171
9999 mem: incrementing refcount of 1345: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1171 is 1345
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1144
9999 mem: storing 1345 in location 1144
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1172
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1172
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1172 is 0
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1145
9999 mem: storing 0 in location 1145
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1169 is 1133
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1133
9999 mem: decrementing refcount of 1133: 10 -> 9
9999 mem: storing 1133 in location 1323
9999 mem: incrementing refcount of 1133: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1323 is 1133
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1309
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1310
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1306 is 1008
9999 mem: location 1309 is 1
9999 mem: location 1310 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1146
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1149
9999 mem: incrementing refcount of 1008: 54 -> 55
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1150
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1151
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1149 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 1
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 4
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1149 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1306
9999 mem: incrementing refcount of 1008: 54 -> 55
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1307 is 1300
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1267
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1270
9999 mem: incrementing refcount of 1300: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1270 is 1300
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 1
9999 mem: location 1302 is 1290
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1301
9998 run: its type is "number"
9999 mem: location 1301 is 1
9999 mem: storing 1 in location 1271
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 1
9999 mem: location 1302 is 1290
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1302 is 1290
9999 mem: storing 1290 in location 1272
9999 mem: incrementing refcount of 1290: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1272 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 2 in location 1273
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1271 is 1
9999 mem: location 1273 is 2
9999 mem: storing 0 in location 1274
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1274 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1272 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1271 is 1
9998 run: address to copy is 1296
9998 run: its type is event
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65514
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 1 in location 1276
9999 mem: storing 65514 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 0 in location 1279
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1271 is 1
9999 mem: storing 2 in location 1271
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 1
9999 mem: location 1302 is 1290
9999 mem: location 1271 is 2
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy to is 1301
9999 mem: storing 2 in location 1301
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1276 is 1
9999 mem: location 1277 is 65514
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1270 is 1300
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1300
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1311
9999 mem: storing 65514 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: decrementing refcount of 1300: 3 -> 2
9999 mem: storing 1300 in location 1307
9999 mem: incrementing refcount of 1300: 2 -> 3
9999 mem: storing 1 in location 1315
9999 mem: storing 0 in location 1316
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1311 is 1
9999 mem: location 1312 is 65514
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: storing 0 in location 1317
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1317 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1317 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1306 is 1008
9999 mem: location 1308 is 1133
9999 mem: location 1311 is 1
9999 mem: location 1312 is 65514
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1348
9999 mem: storing 74 in location 1349
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 55 -> 56
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1352
9999 mem: incrementing refcount of 1133: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1353
9999 mem: storing 65514 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1357
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1352 is 1133
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1351 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1180 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1180 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1180 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1181
 106 run: return {width: "number"}
9999 mem: location 1181 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1358
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1351 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1180
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1180 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1180 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1180 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1181
 106 run: return {height: "number"}
9999 mem: location 1181 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1359
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1360
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 5
9999 mem: storing 5 in location 1361
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1137
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1137 is 1186
9999 mem: storing 1186 in location 1362
9999 mem: incrementing refcount of 1186: 17 -> 18
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1363
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1364
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1365
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1364 is 4
9999 mem: storing 4 in location 1366
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1353 is 1
9999 mem: location 1354 is 65514
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: storing 0 in location 1367
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1353 is 1
9999 mem: location 1354 is 65514
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: storing 1354 in location 1411
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1411 is 1354
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1384
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1395
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1400
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1401
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1412
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 632
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1413
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 666
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 0 in location 1414
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 707
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1411 is 1354
9999 mem: location 1354 is 65514
9999 mem: storing 1 in location 1416
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1362 is 1186
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1180
9999 mem: incrementing refcount of 1186: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1186
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 99
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1182
9999 mem: location 1180 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1181
9999 mem: incrementing refcount of 1190: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1417
9999 mem: incrementing refcount of 1190: 17 -> 18
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1417 is 1190
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1386
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1387
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1135
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1135 is 1152
9999 mem: storing 1152 in location 1388
9999 mem: incrementing refcount of 1152: 14 -> 15
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1417 is 1190
9999 mem: decrementing refcount of 1186: 19 -> 18
9999 mem: storing 1190 in location 1362
9999 mem: incrementing refcount of 1190: 18 -> 19
 105 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1186
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1362 is 1190
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1137
9999 mem: storing 1190 in location 1137
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1352 is 1133
9999 mem: location 1359 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1424
9999 mem: storing 21 in location 1425
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1427
9999 mem: incrementing refcount of 1133: 11 -> 12
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1428
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1137
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1137 is 1190
9999 mem: storing 1190 in location 1429
9999 mem: incrementing refcount of 1190: 19 -> 20
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 1
9999 mem: storing 1 in location 1430
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1431
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1138
9998 run: its type is "number"
9999 mem: location 1138 is 1
9999 mem: storing 1 in location 1432
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 5
9999 mem: storing 5 in location 1433
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1429 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 100
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1429 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is "character"
9999 mem: location 1191 is 100
9999 mem: storing 100 in location 1434
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1434 is 100
9999 mem: storing 0 in location 1435
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 37
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1433 is 5
9999 mem: storing 4 in location 1442
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1431 is 4
9999 mem: location 1442 is 4
9999 mem: storing 1 in location 1443
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1443 is 1
9998 run: jump-unless fell through
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1429 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1180
9999 mem: incrementing refcount of 1190: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1180 is 1190
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1180 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 100
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1180 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1181
9999 mem: incrementing refcount of 1194: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1181 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: storing 1194 in location 1444
9999 mem: incrementing refcount of 1194: 17 -> 18
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1444 is 1194
9998 run: jump-unless fell through
 106 run: {next-character: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1444 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 101
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1444 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 101
9999 mem: storing 101 in location 1445
 106 run: {newline?: "boolean"} <- equal {next-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1445 is 101
9999 mem: storing 0 in location 1446
 106 run: jump-if {newline?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jump-if fell through
 106 run: {cursor-row: "number"} <- add {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1430 is 1
9999 mem: storing 2 in location 1430
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1430 is 2
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1141
9999 mem: storing 2 in location 1141
 106 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1432 is 1
9999 mem: storing 1 in location 1431
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 4
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1431 is 1
9999 mem: location 1427 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1142
9999 mem: storing 1 in location 1142
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: "number"}, {screen-height: "number"}
9999 mem: location 1430 is 2
9999 mem: location 1428 is 5
9999 mem: storing 0 in location 1436
 106 run: jump-if {below-screen?: "boolean"}, {1: "offset"}
9999 mem: location 1436 is 0
9998 run: jump-if fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {0: "literal", "no-more-render": ()}
9999 mem: location 1427 is 1133
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1133
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1133: 12 -> 11
9999 mem: storing 1133 in location 1352
9999 mem: incrementing refcount of 1133: 11 -> 12
9999 mem: storing 0 in location 1357
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1351 is 1008
9999 mem: location 1363 is 1
9999 mem: location 1364 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1146
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1149
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1150
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1151
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1149 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 1
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 4
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1149 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 58 -> 59
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1389
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1135
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1135 is 1152
9999 mem: storing 1152 in location 1390
9999 mem: incrementing refcount of 1152: 15 -> 16
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1363
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1352 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1144 is 1345
9999 mem: storing 1345 in location 1371
9999 mem: incrementing refcount of 1345: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1371 is 1345
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1371 is 1345
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1345 in location 1180
9999 mem: incrementing refcount of 1345: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1180 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 1230
9999 mem: location 1347 is 0
9999 mem: location 1180 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1346
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1346 is 1230
9999 mem: storing 1230 in location 1181
9999 mem: incrementing refcount of 1230: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1181 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1230
9999 mem: storing 1230 in location 1370
9999 mem: incrementing refcount of 1230: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1370 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 1
9999 mem: location 1232 is 1
9999 mem: location 1233 is 1
9999 mem: location 1234 is 1152
9999 mem: location 1235 is 1
9999 mem: location 1236 is 4
9999 mem: location 1237 is 1152
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1241 is 0
9999 mem: location 1370 is 1230
9999 mem: skipping refcount at 1230
9999 mem: storing 1232 in location 1377
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1377 is 1232
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1377 is 1232
9999 mem: location 1232 is 1
9999 mem: location 1233 is 1
9999 mem: location 1234 is 1152
9999 mem: location 1235 is 1
9999 mem: location 1236 is 4
9999 mem: location 1237 is 1152
9999 mem: location 1238 is 0
9999 mem: location 1377 is 1232
9998 run: address to copy is 1238
9998 run: its type is "number"
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1391
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1389 is 2
9999 mem: location 1391 is 0
9999 mem: storing 0 in location 1392
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 739
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1447
9999 mem: decrementing refcount of 1230: 5 -> 4
9999 mem: storing 1447 in location 1370
9999 mem: incrementing refcount of 1447: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 4
9999 mem: location 1388 is 1152
9999 mem: location 1363 is 2
9999 mem: location 1364 is 1
9999 mem: location 1390 is 1152
9999 mem: location 1389 is 2
9999 mem: location 1370 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1370 is 1447
9999 mem: skipping refcount at 1447
9999 mem: storing 1 in location 1448
9999 mem: storing 1 in location 1449
9999 mem: storing 4 in location 1450
9999 mem: storing 1152 in location 1451
9999 mem: storing 2 in location 1452
9999 mem: storing 1 in location 1453
9999 mem: storing 1152 in location 1454
9999 mem: storing 2 in location 1455
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1352 is 1133
9999 mem: location 1370 is 1447
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1166
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1169
9999 mem: incrementing refcount of 1133: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1170
9999 mem: incrementing refcount of 1447: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1144 is 1345
9999 mem: storing 1345 in location 1171
9999 mem: incrementing refcount of 1345: 4 -> 5
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1447
9999 mem: location 1171 is 1345
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1146
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1149
9999 mem: incrementing refcount of 1447: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1345 in location 1150
9999 mem: incrementing refcount of 1345: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1459
9999 mem: storing 1459 in location 1151
9999 mem: incrementing refcount of 1459: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1149 is 1447
9999 mem: location 1150 is 1345
9999 mem: location 1151 is 1459
9999 mem: skipping refcount at 1459
9999 mem: location 1151 is 1459
9999 mem: skipping refcount at 1459
9999 mem: storing 1447 in location 1460
9999 mem: storing 1345 in location 1461
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1151 is 1459
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1459
9999 mem: decrementing refcount of 1345: 6 -> 5
9999 mem: storing 1459 in location 1171
9999 mem: incrementing refcount of 1459: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1345
9999 mem: location 1145 is 0
9999 mem: location 1171 is 1459
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1144
9999 mem: storing 1459 in location 1144
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1459
9999 mem: location 1145 is 0
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1172
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1172
9990 schedule: add-operation/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-next-wrapped-line-with-right-arrow-3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1459
9999 mem: location 1145 is 0
9999 mem: location 1172 is 0
9999 mem: location 1169 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy to is 1145
9999 mem: storing 0 in location 1145
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1169 is 1133
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1133
9999 mem: decrementing refcount of 1133: 13 -> 12
9999 mem: storing 1133 in location 1352
9999 mem: incrementing refcount of 1133: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1351 is 1008
9999 mem: location 1352 is 1133
9999 mem: location 1357 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1133
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1306
9999 mem: incrementing refcount of 1008: 58 -> 59
9999 mem: decrementing refcount of 1133: 13 -> 12
9999 mem: storing 1133 in location 1308
9999 mem: incrementing refcount of 1133: 12 -> 13
9999 mem: storing 0 in location 1318
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1459
9999 mem: location 1145 is 0
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 1309
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1459
9999 mem: location 1145 is 0
9999 mem: location 1308 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1310
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1306 is 1008
9999 mem: location 1309 is 2
9999 mem: location 1310 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1146
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1149
9999 mem: incrementing refcount of 1008: 59 -> 60
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1150
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1151
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1149 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1150 is 2
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 1
9999 mem: location 1149 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1149 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1306
9999 mem: incrementing refcount of 1008: 59 -> 60
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1307 is 1300
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1267
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1270
9999 mem: incrementing refcount of 1300: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1270 is 1300
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 2
9999 mem: location 1302 is 1290
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1301
9998 run: its type is "number"
9999 mem: location 1301 is 2
9999 mem: storing 2 in location 1271
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 2
9999 mem: location 1302 is 1290
9999 mem: location 1270 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1302 is 1290
9999 mem: storing 1290 in location 1272
9999 mem: incrementing refcount of 1290: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1272 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 2 in location 1273
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1271 is 2
9999 mem: location 1273 is 2
9999 mem: storing 1 in location 1274
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1274 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1177
9999 mem: storing 1177 in location 1275
9999 mem: incrementing refcount of 1177: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1275 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1270 is 1300
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1300
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: decrementing refcount of 1300: 4 -> 3
9999 mem: storing 1300 in location 1307
9999 mem: incrementing refcount of 1300: 3 -> 4
9999 mem: storing 1 in location 1315
9999 mem: storing 1 in location 1316
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1306 is 1008
9999 mem: location 1307 is 1300
9999 mem: location 1308 is 1133
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1459
9999 mem: location 1145 is 0
9999 mem: location 2 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1141
9998 run: its type is "number"
9999 mem: location 1141 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1133
9999 mem: skipping refcount at 1133
9999 mem: location 1134 is 1152
9999 mem: location 1135 is 1152
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1190
9999 mem: location 1138 is 1
9999 mem: location 1139 is 5
9999 mem: location 1140 is 2
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1459
9999 mem: location 1145 is 0
9999 mem: location 2 is 1133
9999 mem: skipping refcount at 1133
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    . abcd↩    .\n    . ef       .\n    . ┈┈┈┈┈    .\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 1\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
