 102 run: assume-console {"\n    left-click 2, 0\n    press left-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {left-arrow: ()}
9992 load: after rewriting: press {left-arrow: ()}
9999 mem: storing 'left-click' event starting at 1312
9999 mem: storing 'press' event starting at 1316
9999 mem: storing console in 1320
9999 mem: storing console data in 1322
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1320
9999 mem: location 2 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1323
9999 mem: storing 14 in location 1324
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1320 in location 1327
9999 mem: incrementing refcount of 1320: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1328
9999 mem: incrementing refcount of 1145: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1329
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1330
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1326 is 1008
9999 mem: location 1329 is 1
9999 mem: location 1330 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 76 -> 77
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1327 is 1320
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1320 in location 1282
9999 mem: incrementing refcount of 1320: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1320
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9999 mem: location 1321 is 0
9999 mem: location 1322 is 1310
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9998 run: address to copy is 1321
9999 mem: storing 1321 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9999 mem: location 1321 is 0
9999 mem: location 1322 is 1310
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9998 run: address to copy is 1322
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1322 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 2 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 0
9999 mem: location 1285 is 2
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 0
9998 run: address to copy is 1312
9998 run: its type is event
9999 mem: location 1312 is 2
9999 mem: location 1313 is 65513
9999 mem: location 1314 is 2
9999 mem: location 1315 is 0
9999 mem: storing 2 in location 1288
9999 mem: storing 65513 in location 1289
9999 mem: storing 2 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 0
9999 mem: location 1283 is 1321
9999 mem: storing 1 in location 1321
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 2
9999 mem: location 1289 is 65513
9999 mem: location 1290 is 2
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1320
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1320
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1331
9999 mem: storing 65513 in location 1332
9999 mem: storing 2 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: decrementing refcount of 1320: 2 -> 1
9999 mem: storing 1320 in location 1327
9999 mem: incrementing refcount of 1320: 1 -> 2
9999 mem: storing 1 in location 1335
9999 mem: storing 0 in location 1336
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1331 is 2
9999 mem: location 1332 is 65513
9999 mem: location 1333 is 2
9999 mem: location 1334 is 0
9999 mem: storing 1332 in location 1337
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1337 is 1332
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1326 is 1008
9999 mem: location 1328 is 1145
9999 mem: location 1337 is 1332
9999 mem: location 1332 is 65513
9999 mem: location 1333 is 2
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1339
9999 mem: storing 27 in location 1340
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1342
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1343
9999 mem: incrementing refcount of 1145: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1344
9999 mem: storing 2 in location 1345
9999 mem: storing 0 in location 1346
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1343 is 1145
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1344 is 65513
9999 mem: location 1345 is 2
9999 mem: location 1346 is 0
9998 run: address to copy is 1345
9998 run: its type is "number"
9999 mem: location 1345 is 2
9999 mem: storing 2 in location 1347
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1347 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1344 is 65513
9999 mem: location 1345 is 2
9999 mem: location 1346 is 0
9998 run: address to copy is 1346
9998 run: its type is "number"
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1348
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1349
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1350
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1351
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1348 is 0
9999 mem: location 1351 is 9
9999 mem: storing 0 in location 1352
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1353
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1354
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1355
9999 mem: incrementing refcount of 1164: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1342 is 1008
9999 mem: location 1343 is 1145
9999 mem: location 1347 is 2
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1368
9999 mem: storing 26 in location 1369
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1371
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1372
9999 mem: incrementing refcount of 1145: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1373
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1374
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1372 is 1145
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1375
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1376
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1371 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 107 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1377
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1378
9999 mem: incrementing refcount of 1164: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1164
9999 mem: storing 1164 in location 1379
9999 mem: incrementing refcount of 1164: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 14 -> 13
9999 mem: storing 1185 in location 1378
9999 mem: incrementing refcount of 1185: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1380
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1375 is 0
9999 mem: storing 0 in location 1381
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1382
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1382 is 1153
9999 mem: storing 2 in location 1153
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1383
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1374 is 0
9999 mem: location 1383 is 1154
9999 mem: storing 0 in location 1154
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1164
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1372 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1384
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1378 is 1185
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1380 is 1
9999 mem: location 1377 is 5
9999 mem: storing 0 in location 1385
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 1
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1378 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1378 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 97
9999 mem: storing 97 in location 1388
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1388 is 97
9999 mem: storing 0 in location 1389
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1381 is 0
9999 mem: location 1376 is 9
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 15 -> 14
9999 mem: storing 1194 in location 1378
9999 mem: incrementing refcount of 1194: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1192
9999 mem: incrementing refcount of 1164: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1164
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9999 mem: location 1165 is 167
9999 mem: location 1166 is 1185
9999 mem: location 1167 is 0
9999 mem: location 1192 is 1164
9999 mem: skipping refcount at 1164
9998 run: address to copy is 1166
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1166 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1164: 14 -> 13
9999 mem: storing 1185 in location 1379
9999 mem: incrementing refcount of 1185: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1381 is 0
9999 mem: storing 1 in location 1381
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1378 is 1194
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1380 is 1
9999 mem: location 1377 is 5
9999 mem: storing 0 in location 1385
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 1
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1378 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1378 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 98
9999 mem: storing 98 in location 1388
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1388 is 98
9999 mem: storing 0 in location 1389
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1381 is 1
9999 mem: location 1376 is 9
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 15 -> 14
9999 mem: storing 1198 in location 1378
9999 mem: incrementing refcount of 1198: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1185: 17 -> 16
9999 mem: storing 1194 in location 1379
9999 mem: incrementing refcount of 1194: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1381 is 1
9999 mem: storing 2 in location 1381
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1378 is 1198
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1380 is 1
9999 mem: location 1377 is 5
9999 mem: storing 0 in location 1385
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 1
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1378 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1378 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 99
9999 mem: storing 99 in location 1388
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1388 is 99
9999 mem: storing 0 in location 1389
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1381 is 2
9999 mem: location 1376 is 9
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 15 -> 14
9999 mem: storing 1202 in location 1378
9999 mem: incrementing refcount of 1202: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 17 -> 16
9999 mem: storing 1198 in location 1379
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1381 is 2
9999 mem: storing 3 in location 1381
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1378 is 1202
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1380 is 1
9999 mem: location 1377 is 5
9999 mem: storing 0 in location 1385
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 1
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1378 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1378 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1388
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1388 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 1
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1380 is 1
9999 mem: storing 2 in location 1380
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1375 is 0
9999 mem: storing 0 in location 1381
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 15 -> 14
9999 mem: storing 1206 in location 1378
9999 mem: incrementing refcount of 1206: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1193
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1202 in location 1379
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1378 is 1206
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1380 is 2
9999 mem: location 1377 is 5
9999 mem: storing 0 in location 1385
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 2
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 1 in location 1386
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1381 is 0
9999 mem: location 1383 is 1154
9999 mem: location 1154 is 0
9999 mem: storing 1 in location 1387
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1202
9999 mem: location 1384 is 1149
9999 mem: decrementing refcount of 1164: 13 -> 12
9999 mem: storing 1202 in location 1149
9999 mem: incrementing refcount of 1202: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1378 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1378 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1388
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1388 is 100
9999 mem: storing 0 in location 1389
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1381 is 0
9999 mem: location 1376 is 9
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1378 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1192
9999 mem: incrementing refcount of 1206: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1192 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1193
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1206: 14 -> 13
9999 mem: storing 0 in location 1378
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1379 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1193
9999 mem: incrementing refcount of 1206: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1193 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 18 -> 17
9999 mem: storing 1206 in location 1379
9999 mem: incrementing refcount of 1206: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1381 is 0
9999 mem: storing 1 in location 1381
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 2
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 1 in location 1386
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1381 is 1
9999 mem: location 1383 is 1154
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1392
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1386 is 1
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1393
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1380 is 2
9999 mem: location 1382 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1394
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1393 is 0
9999 mem: location 1394 is 0
9999 mem: storing 0 in location 1395
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1372 is 1145
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 9 -> 8
9999 mem: storing 1145 in location 1343
9999 mem: incrementing refcount of 1145: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1356
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1357
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1358
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1343 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1359
9999 mem: incrementing refcount of 1164: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1240
9999 mem: storing 1240 in location 1361
9999 mem: incrementing refcount of 1240: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1353 is 1
9999 mem: location 1354 is 0
9999 mem: location 1355 is 1164
9999 mem: location 1357 is 2
9999 mem: location 1358 is 0
9999 mem: location 1359 is 1164
9999 mem: location 1356 is 0
9999 mem: location 1361 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1361 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1 in location 1241
9999 mem: storing 1 in location 1242
9999 mem: storing 0 in location 1243
9999 mem: storing 1164 in location 1244
9999 mem: storing 2 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 1164 in location 1247
9999 mem: storing 0 in location 1248
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1343 is 1145
9999 mem: location 1361 is 1240
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1182
9999 mem: incrementing refcount of 1240: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1182 is 1240
9999 mem: location 1183 is 1156
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1161
9999 mem: incrementing refcount of 1240: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1162
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1396
9999 mem: storing 1396 in location 1163
9999 mem: incrementing refcount of 1396: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1240
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1396
9999 mem: skipping refcount at 1396
9999 mem: location 1163 is 1396
9999 mem: skipping refcount at 1396
9999 mem: storing 1240 in location 1397
9999 mem: storing 0 in location 1398
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1396
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1396
9999 mem: location 1183 is 1156
9999 mem: storing 1396 in location 1156
9999 mem: incrementing refcount of 1396: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1184 is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1181 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 10 -> 9
9999 mem: storing 1145 in location 1343
9999 mem: incrementing refcount of 1145: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1343 is 1145
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1329
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1330
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1326 is 1008
9999 mem: location 1329 is 2
9999 mem: location 1330 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 80 -> 81
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 80 -> 81
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1327 is 1320
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1320 in location 1282
9999 mem: incrementing refcount of 1320: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1320
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9999 mem: location 1321 is 1
9999 mem: location 1322 is 1310
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9998 run: address to copy is 1321
9999 mem: storing 1321 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9999 mem: location 1321 is 1
9999 mem: location 1322 is 1310
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9998 run: address to copy is 1322
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1322 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 2 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 1
9999 mem: location 1285 is 2
9999 mem: storing 0 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 1
9998 run: address to copy is 1316
9998 run: its type is event
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65515
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1288
9999 mem: storing 65515 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 1
9999 mem: location 1283 is 1321
9999 mem: storing 2 in location 1321
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65515
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1320
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1320
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1331
9999 mem: storing 65515 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: decrementing refcount of 1320: 3 -> 2
9999 mem: storing 1320 in location 1327
9999 mem: incrementing refcount of 1320: 2 -> 3
9999 mem: storing 1 in location 1335
9999 mem: storing 0 in location 1336
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65515
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1337
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1326 is 1008
9999 mem: location 1328 is 1145
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65515
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1399
9999 mem: storing 85 in location 1400
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1402
9999 mem: incrementing refcount of 1008: 81 -> 82
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1403
9999 mem: incrementing refcount of 1145: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1404
9999 mem: storing 65515 in location 1405
9999 mem: storing 0 in location 1406
9999 mem: storing 0 in location 1407
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1408
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1403 is 1145
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1402 is 1008
9999 trace: incrementing callstack depth to 5
9990 schedule: screen-width/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1193
 106 run: return {width: "number"}
9999 mem: location 1193 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1409
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1402 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1192
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1192 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1192 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1193
 106 run: return {height: "number"}
9999 mem: location 1193 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1410
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1411
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1412
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1413
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1414
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1415
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1414 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1416
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1415 is 1154
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1417
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1404 is 1
9999 mem: location 1405 is 65515
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 1418
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1404 is 1
9999 mem: location 1405 is 65515
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: storing 1405 in location 1472
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1472 is 1405
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 0 in location 1435
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 0 in location 1451
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 0 in location 1458
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 0 in location 1459
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1459 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 0 in location 1473
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 0 in location 1474
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1472 is 1405
9999 mem: location 1405 is 65515
9999 mem: storing 1 in location 1475
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1475 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"left arrow": "literal-string"}
  10 app: left arrow 
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1413 is 1149
9999 mem: location 1149 is 1202
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 16 -> 17
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1476
9999 mem: incrementing refcount of 1198: 17 -> 18
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1408
 105 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1476 is 1198
9998 run: jumping to instruction 682
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 2
9999 mem: storing 2 in location 1438
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1439
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1440
9999 mem: incrementing refcount of 1164: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-left {editor: ("address" "shared" "editor-data")}
9999 mem: location 1403 is 1145
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1486
9999 mem: storing 20 in location 1487
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1489
9999 mem: incrementing refcount of 1145: 11 -> 12
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1202
9999 mem: storing 1202 in location 1490
9999 mem: incrementing refcount of 1202: 18 -> 19
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1491
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1492
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 2
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1493
 106 run: {at-left-margin?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {left: "number"}
9999 mem: location 1492 is 1154
9999 mem: location 1154 is 0
9999 mem: location 1493 is 0
9999 mem: storing 1 in location 1494
 106 run: jump-if {at-left-margin?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 1
9998 run: jumping to instruction 13
 106 run: {top-of-screen?: "boolean"} <- equal {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1491 is 1153
9999 mem: location 1153 is 2
9999 mem: storing 0 in location 1496
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1495
 106 run: jump-if {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1496 is 0
9998 run: jump-if fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1491 is 1153
9999 mem: location 1153 is 2
9999 mem: location 1491 is 1153
9999 mem: storing 1 in location 1153
 106 run: jump-unless {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1496 is 0
9998 run: jumping to instruction 32
 106 run: {previous-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1490 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1490 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1500
 106 run: {previous-character-is-newline?: "boolean"} <- equal {previous-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1500 is 10
9999 mem: storing 1 in location 1501
 106 run: jump-unless {previous-character-is-newline?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 1
9998 run: jump-unless fell through
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"switching to previous line": "literal-string"}
  10 app: switching to previous line 
 106 run: {d: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1164
9999 mem: storing 1164 in location 1502
9999 mem: incrementing refcount of 1164: 14 -> 15
 106 run: {end-of-line: "number"} <- previous-line-length {before-cursor: ("address" "shared" "duplex-list" "character")}, {d: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1490 is 1202
9999 mem: location 1502 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1119
9999 mem: incrementing refcount of 1202: 19 -> 20
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1164 in location 1120
9999 mem: incrementing refcount of 1164: 15 -> 16
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1202
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1202
9999 mem: location 1120 is 1164
9999 mem: storing 0 in location 1122
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1202
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1192
9999 mem: incrementing refcount of 1202: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1202
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1192 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1198
9999 mem: storing 1198 in location 1193
9999 mem: incrementing refcount of 1198: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1202: 21 -> 20
9999 mem: storing 1198 in location 1119
9999 mem: incrementing refcount of 1198: 19 -> 20
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1198
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1198
9999 mem: location 1120 is 1164
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1119 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 99
9999 mem: storing 99 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 99
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1198
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1192
9999 mem: incrementing refcount of 1198: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1198
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 99
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1192 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1194
9999 mem: storing 1194 in location 1193
9999 mem: incrementing refcount of 1194: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1198: 21 -> 20
9999 mem: storing 1194 in location 1119
9999 mem: incrementing refcount of 1194: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1194
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1194
9999 mem: location 1120 is 1164
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1119 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 98
9999 mem: storing 98 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 98
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1194
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1192
9999 mem: incrementing refcount of 1194: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1194
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 98
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1185
9999 mem: location 1192 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1185
9999 mem: storing 1185 in location 1193
9999 mem: incrementing refcount of 1185: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1185
9999 mem: decrementing refcount of 1194: 19 -> 18
9999 mem: storing 1185 in location 1119
9999 mem: incrementing refcount of 1185: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1185
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1185
9999 mem: location 1120 is 1164
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1119 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is "character"
9999 mem: location 1186 is 97
9999 mem: storing 97 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 97
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1185
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1192
9999 mem: incrementing refcount of 1185: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1192 is 1185
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 97
9999 mem: location 1187 is 1194
9999 mem: location 1188 is 1164
9999 mem: location 1192 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1164
9999 mem: storing 1164 in location 1193
9999 mem: incrementing refcount of 1164: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1164
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1164
9999 mem: decrementing refcount of 1185: 19 -> 18
9999 mem: storing 1164 in location 1119
9999 mem: incrementing refcount of 1164: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1164
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1164
9999 mem: location 1120 is 1164
9999 mem: storing 1 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1121 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 3
9999 mem: storing 3 in location 1503
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1202
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1489 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 9
9999 mem: storing 9 in location 1504
 106 run: {width: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1504 is 9
9999 mem: location 1493 is 0
9999 mem: storing 9 in location 1505
 106 run: {wrap?: "boolean"} <- greater-than {end-of-line: "number"}, {width: "number"}
9999 mem: location 1503 is 3
9999 mem: location 1505 is 9
9999 mem: storing 0 in location 1506
 106 run: jump-unless {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 0
9998 run: jumping to instruction 47
 106 run: jump-if {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 0
9998 run: jump-if fell through
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {left: "number"}, {end-of-line: "number"}
9999 mem: location 1493 is 0
9999 mem: location 1503 is 3
9999 mem: location 1492 is 1154
9999 mem: storing 3 in location 1154
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1489 is 1145
9999 mem: location 1495 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1145: 12 -> 11
9999 mem: storing 1145 in location 1403
9999 mem: incrementing refcount of 1145: 11 -> 12
9999 mem: storing 0 in location 1408
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1476 is 1198
9999 mem: location 1413 is 1149
9999 mem: decrementing refcount of 1202: 20 -> 19
9999 mem: storing 1198 in location 1149
9999 mem: incrementing refcount of 1198: 20 -> 21
 105 run: {undo-coalesce-tag: "number"} <- copy {1: "literal", "left-arrow": ()}
9999 mem: storing 1 in location 1441
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1442
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1443
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1147
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1147 is 1164
9999 mem: storing 1164 in location 1444
9999 mem: incrementing refcount of 1164: 18 -> 19
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1441 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1403 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1422
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1422 is 1156
9999 mem: location 1156 is 1396
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1422 is 1156
9999 mem: location 1156 is 1396
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1396 in location 1192
9999 mem: incrementing refcount of 1396: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1192 is 1396
9999 mem: skipping refcount at 1396
9999 mem: location 1397 is 1240
9999 mem: location 1398 is 0
9999 mem: location 1192 is 1396
9999 mem: skipping refcount at 1396
9998 run: address to copy is 1397
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1397 is 1240
9999 mem: storing 1240 in location 1193
9999 mem: incrementing refcount of 1240: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1193 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1240
9999 mem: storing 1240 in location 1421
9999 mem: incrementing refcount of 1240: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1421 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 1
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1421 is 1240
9999 mem: skipping refcount at 1240
9999 mem: storing 1242 in location 1427
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1427 is 1242
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1427 is 1242
9999 mem: location 1242 is 1
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1164
9999 mem: location 1245 is 2
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1164
9999 mem: location 1248 is 0
9999 mem: location 1427 is 1242
9998 run: address to copy is 1248
9998 run: its type is "number"
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1445
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1441 is 1
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1446
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 709
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1508
9999 mem: decrementing refcount of 1240: 5 -> 4
9999 mem: storing 1508 in location 1421
9999 mem: incrementing refcount of 1508: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1438 is 2
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1164
9999 mem: location 1442 is 1
9999 mem: location 1443 is 3
9999 mem: location 1444 is 1164
9999 mem: location 1441 is 1
9999 mem: location 1421 is 1508
9999 mem: skipping refcount at 1508
9999 mem: location 1421 is 1508
9999 mem: skipping refcount at 1508
9999 mem: storing 1 in location 1509
9999 mem: storing 2 in location 1510
9999 mem: storing 0 in location 1511
9999 mem: storing 1164 in location 1512
9999 mem: storing 1 in location 1513
9999 mem: storing 3 in location 1514
9999 mem: storing 1164 in location 1515
9999 mem: storing 1 in location 1516
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1403 is 1145
9999 mem: location 1421 is 1508
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1178
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1508 in location 1182
9999 mem: incrementing refcount of 1508: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1396
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1182 is 1508
9999 mem: location 1183 is 1156
9999 mem: location 1156 is 1396
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1158
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1508 in location 1161
9999 mem: incrementing refcount of 1508: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1396 in location 1162
9999 mem: incrementing refcount of 1396: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1520
9999 mem: storing 1520 in location 1163
9999 mem: incrementing refcount of 1520: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1161 is 1508
9999 mem: location 1162 is 1396
9999 mem: location 1163 is 1520
9999 mem: skipping refcount at 1520
9999 mem: location 1163 is 1520
9999 mem: skipping refcount at 1520
9999 mem: storing 1508 in location 1521
9999 mem: storing 1396 in location 1522
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1163 is 1520
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1520
9999 mem: location 1183 is 1156
9999 mem: decrementing refcount of 1396: 4 -> 3
9999 mem: storing 1520 in location 1156
9999 mem: incrementing refcount of 1520: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1520
9999 mem: location 1157 is 0
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1184 is 1157
9999 mem: storing 0 in location 1157
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1181 is 1145
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1145: 13 -> 12
9999 mem: storing 1145 in location 1403
9999 mem: incrementing refcount of 1145: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1402 is 1008
9999 mem: location 1403 is 1145
9999 mem: location 1408 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1145
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 84 -> 83
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: decrementing refcount of 1145: 13 -> 12
9999 mem: storing 1145 in location 1328
9999 mem: incrementing refcount of 1145: 12 -> 13
9999 mem: storing 0 in location 1338
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1520
9999 mem: location 1157 is 0
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1329
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1520
9999 mem: location 1157 is 0
9999 mem: location 1328 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 1330
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1326 is 1008
9999 mem: location 1329 is 1
9999 mem: location 1330 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 84 -> 85
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 85 -> 84
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 84 -> 85
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1327 is 1320
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1279
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1320 in location 1282
9999 mem: incrementing refcount of 1320: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1282 is 1320
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9999 mem: location 1321 is 2
9999 mem: location 1322 is 1310
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9998 run: address to copy is 1321
9999 mem: storing 1321 in location 1283
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9999 mem: location 1321 is 2
9999 mem: location 1322 is 1310
9999 mem: location 1282 is 1320
9999 mem: skipping refcount at 1320
9998 run: address to copy is 1322
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1322 is 1310
9999 mem: storing 1310 in location 1284
9999 mem: incrementing refcount of 1310: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1284 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 2 in location 1285
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1283 is 1321
9999 mem: location 1321 is 2
9999 mem: location 1285 is 2
9999 mem: storing 1 in location 1286
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1189
9999 mem: storing 1189 in location 1287
9999 mem: incrementing refcount of 1189: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1287 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1282 is 1320
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1320
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: decrementing refcount of 1320: 4 -> 3
9999 mem: storing 1320 in location 1327
9999 mem: incrementing refcount of 1320: 3 -> 4
9999 mem: storing 1 in location 1335
9999 mem: storing 1 in location 1336
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1336 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1326 is 1008
9999 mem: location 1327 is 1320
9999 mem: location 1328 is 1145
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1520
9999 mem: location 1157 is 0
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9999 mem: location 1146 is 1164
9999 mem: location 1147 is 1164
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1198
9999 mem: location 1150 is 0
9999 mem: location 1151 is 9
9999 mem: location 1152 is 2
9999 mem: location 1153 is 1
9999 mem: location 1154 is 3
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1520
9999 mem: location 1157 is 0
9999 mem: location 2 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
