 102 run: assume-console {"\n    left-click 3, 0\n    press left-arrow\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {left-arrow: ()}
9992 load: after rewriting: press {left-arrow: ()}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'left-click' event starting at 1322
9999 mem: storing 'press' event starting at 1326
9999 mem: storing 'type' event starting at 1330
9999 mem: storing 'text' tag at 1330
9999 mem: storing character 48 at 1331
9999 mem: storing console in 1334
9999 mem: storing console data in 1336
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1334
9999 mem: location 2 is 1149
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1337
9999 mem: storing 14 in location 1338
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 99 -> 100
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1342
9999 mem: incrementing refcount of 1149: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1343
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1344
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1340 is 1008
9999 mem: location 1343 is 1
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 100 -> 101
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 100 -> 101
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1297
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1300 is 1334
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 0
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is "number"
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1301
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 0
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1336 is 1320
9999 mem: storing 1320 in location 1302
9999 mem: incrementing refcount of 1320: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9999 mem: storing 3 in location 1303
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1301 is 0
9999 mem: location 1303 is 3
9999 mem: storing 0 in location 1304
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9998 run: base address is 1321
9999 mem: location 1301 is 0
9998 run: address to copy is 1322
9998 run: its type is event
9999 mem: location 1322 is 2
9999 mem: location 1323 is 65513
9999 mem: location 1324 is 3
9999 mem: location 1325 is 0
9999 mem: storing 2 in location 1306
9999 mem: storing 65513 in location 1307
9999 mem: storing 3 in location 1308
9999 mem: storing 0 in location 1309
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1301 is 0
9999 mem: storing 1 in location 1301
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 0
9999 mem: location 1336 is 1320
9999 mem: location 1301 is 1
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy to is 1335
9999 mem: storing 1 in location 1335
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1306 is 2
9999 mem: location 1307 is 65513
9999 mem: location 1308 is 3
9999 mem: location 1309 is 0
9999 mem: location 1300 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1345
9999 mem: storing 65513 in location 1346
9999 mem: storing 3 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 2 -> 1
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 1 -> 2
9999 mem: storing 1 in location 1349
9999 mem: storing 0 in location 1350
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1345 is 2
9999 mem: location 1346 is 65513
9999 mem: location 1347 is 3
9999 mem: location 1348 is 0
9999 mem: storing 1346 in location 1351
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1351 is 1346
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1340 is 1008
9999 mem: location 1342 is 1149
9999 mem: location 1351 is 1346
9999 mem: location 1346 is 65513
9999 mem: location 1347 is 3
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1353
9999 mem: storing 27 in location 1354
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 101 -> 102
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1357
9999 mem: incrementing refcount of 1149: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1358
9999 mem: storing 3 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1357 is 1149
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1358 is 65513
9999 mem: location 1359 is 3
9999 mem: location 1360 is 0
9998 run: address to copy is 1359
9998 run: its type is "number"
9999 mem: location 1359 is 3
9999 mem: storing 3 in location 1361
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1361 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1358 is 65513
9999 mem: location 1359 is 3
9999 mem: location 1360 is 0
9998 run: address to copy is 1360
9998 run: its type is "number"
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1362
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1363
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 9
9999 mem: storing 9 in location 1365
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1362 is 0
9999 mem: location 1365 is 9
9999 mem: storing 0 in location 1366
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1367
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1368
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1369
9999 mem: incrementing refcount of 1168: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1149
9999 mem: location 1361 is 3
9999 mem: location 1362 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1382
9999 mem: storing 26 in location 1383
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1385
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1386
9999 mem: incrementing refcount of 1149: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1387
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1388
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1386 is 1149
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1389
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 9
9999 mem: storing 9 in location 1390
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1385 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1197
 107 run: return {height: "number"}
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1391
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1392
9999 mem: incrementing refcount of 1168: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1168
9999 mem: storing 1168 in location 1393
9999 mem: incrementing refcount of 1168: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1168
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-2
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1196
9999 mem: incrementing refcount of 1168: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1168
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1189
9999 mem: location 1171 is 0
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1170 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1168: 14 -> 13
9999 mem: storing 1189 in location 1392
9999 mem: incrementing refcount of 1189: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1394
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1395
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1396
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1387 is 3
9999 mem: location 1396 is 1157
9999 mem: storing 3 in location 1157
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1397
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1388 is 0
9999 mem: location 1397 is 1158
9999 mem: storing 0 in location 1158
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1386 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1398
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1189
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1392 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 97
9999 mem: storing 97 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 97
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 0
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 15 -> 14
9999 mem: storing 1198 in location 1392
9999 mem: incrementing refcount of 1198: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1196
9999 mem: incrementing refcount of 1168: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1168
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1189
9999 mem: location 1171 is 0
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1170 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1168: 14 -> 13
9999 mem: storing 1189 in location 1393
9999 mem: incrementing refcount of 1189: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 0
9999 mem: storing 1 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1198
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1392 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 98
9999 mem: storing 98 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 98
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 1
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 15 -> 14
9999 mem: storing 1202 in location 1392
9999 mem: incrementing refcount of 1202: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 17 -> 16
9999 mem: storing 1198 in location 1393
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 1
9999 mem: storing 2 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1202
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1392 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 99
9999 mem: storing 99 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 99
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 2
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 15 -> 14
9999 mem: storing 1206 in location 1392
9999 mem: incrementing refcount of 1206: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1202 in location 1393
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 2
9999 mem: storing 3 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1206
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1392 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 10
9999 mem: storing 10 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 10
9999 mem: storing 1 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1394 is 1
9999 mem: storing 2 in location 1394
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1395
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 15 -> 14
9999 mem: storing 1210 in location 1392
9999 mem: incrementing refcount of 1210: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 17 -> 16
9999 mem: storing 1206 in location 1393
9999 mem: incrementing refcount of 1206: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1210
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1392 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is "character"
9999 mem: location 1211 is 100
9999 mem: storing 100 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 100
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 0
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 15 -> 14
9999 mem: storing 1214 in location 1392
9999 mem: incrementing refcount of 1214: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 17 -> 16
9999 mem: storing 1210 in location 1393
9999 mem: incrementing refcount of 1210: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 0
9999 mem: storing 1 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1214
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1392 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is "character"
9999 mem: location 1215 is 101
9999 mem: storing 101 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 101
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 1
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1218
9999 mem: decrementing refcount of 1214: 15 -> 14
9999 mem: storing 1218 in location 1392
9999 mem: incrementing refcount of 1218: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 17 -> 16
9999 mem: storing 1214 in location 1393
9999 mem: incrementing refcount of 1214: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 1
9999 mem: storing 2 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1218
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1392 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1219
9998 run: its type is "character"
9999 mem: location 1219 is 102
9999 mem: storing 102 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 102
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 2
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1218
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1218: 15 -> 14
9999 mem: storing 1222 in location 1392
9999 mem: incrementing refcount of 1222: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1218
9999 mem: decrementing refcount of 1214: 17 -> 16
9999 mem: storing 1218 in location 1393
9999 mem: incrementing refcount of 1218: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 2
9999 mem: storing 3 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1222
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1392 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is "character"
9999 mem: location 1223 is 10
9999 mem: storing 10 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 10
9999 mem: storing 1 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1394 is 2
9999 mem: storing 3 in location 1394
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1395
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 15 -> 14
9999 mem: storing 1226 in location 1392
9999 mem: incrementing refcount of 1226: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1218
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1218: 17 -> 16
9999 mem: storing 1222 in location 1393
9999 mem: incrementing refcount of 1222: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 1226
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1394 is 3
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 3
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 1 in location 1400
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1395 is 0
9999 mem: location 1397 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1401
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1222
9999 mem: location 1398 is 1153
9999 mem: decrementing refcount of 1168: 13 -> 12
9999 mem: storing 1222 in location 1153
9999 mem: incrementing refcount of 1222: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1392 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 103
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1392 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is "character"
9999 mem: location 1227 is 103
9999 mem: storing 103 in location 1402
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1402 is 103
9999 mem: storing 0 in location 1403
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1395 is 0
9999 mem: location 1390 is 9
9999 mem: storing 0 in location 1405
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1392 is 1226
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 103
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1197
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1226: 14 -> 13
9999 mem: storing 0 in location 1392
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1393 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 18 -> 17
9999 mem: storing 1226 in location 1393
9999 mem: incrementing refcount of 1226: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1395 is 0
9999 mem: storing 1 in location 1395
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 3
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 1 in location 1400
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1395 is 1
9999 mem: location 1397 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1406
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1400 is 1
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 1407
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1394 is 3
9999 mem: location 1396 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1408
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: storing 0 in location 1409
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1386 is 1149
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 9 -> 8
9999 mem: storing 1149 in location 1357
9999 mem: incrementing refcount of 1149: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1370
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 3
9999 mem: storing 3 in location 1371
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1372
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1373
9999 mem: incrementing refcount of 1168: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1260
9999 mem: storing 1260 in location 1375
9999 mem: incrementing refcount of 1260: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1367 is 1
9999 mem: location 1368 is 0
9999 mem: location 1369 is 1168
9999 mem: location 1371 is 3
9999 mem: location 1372 is 0
9999 mem: location 1373 is 1168
9999 mem: location 1370 is 0
9999 mem: location 1375 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1375 is 1260
9999 mem: skipping refcount at 1260
9999 mem: storing 1 in location 1261
9999 mem: storing 1 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 1168 in location 1264
9999 mem: storing 3 in location 1265
9999 mem: storing 0 in location 1266
9999 mem: storing 1168 in location 1267
9999 mem: storing 0 in location 1268
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1357 is 1149
9999 mem: location 1375 is 1260
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1185
9999 mem: incrementing refcount of 1149: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1186
9999 mem: incrementing refcount of 1260: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1186 is 1260
9999 mem: location 1187 is 1160
9999 mem: location 1160 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1165
9999 mem: incrementing refcount of 1260: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1410
9999 mem: storing 1410 in location 1167
9999 mem: incrementing refcount of 1410: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1165 is 1260
9999 mem: location 1166 is 0
9999 mem: location 1167 is 1410
9999 mem: skipping refcount at 1410
9999 mem: location 1167 is 1410
9999 mem: skipping refcount at 1410
9999 mem: storing 1260 in location 1411
9999 mem: storing 0 in location 1412
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1410
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1410
9999 mem: location 1187 is 1160
9999 mem: storing 1410 in location 1160
9999 mem: incrementing refcount of 1410: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1188
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1188 is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1185 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 10 -> 9
9999 mem: storing 1149 in location 1357
9999 mem: incrementing refcount of 1149: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1357 is 1149
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 3
9999 mem: storing 3 in location 1343
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1344
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1340 is 1008
9999 mem: location 1343 is 3
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 104 -> 105
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 3
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 104 -> 105
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1297
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1300 is 1334
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 1
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is "number"
9999 mem: location 1335 is 1
9999 mem: storing 1 in location 1301
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 1
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1336 is 1320
9999 mem: storing 1320 in location 1302
9999 mem: incrementing refcount of 1320: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9999 mem: storing 3 in location 1303
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1301 is 1
9999 mem: location 1303 is 3
9999 mem: storing 0 in location 1304
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9998 run: base address is 1321
9999 mem: location 1301 is 1
9998 run: address to copy is 1326
9998 run: its type is event
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65515
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 1 in location 1306
9999 mem: storing 65515 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1301 is 1
9999 mem: storing 2 in location 1301
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 1
9999 mem: location 1336 is 1320
9999 mem: location 1301 is 2
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy to is 1335
9999 mem: storing 2 in location 1335
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1306 is 1
9999 mem: location 1307 is 65515
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1300 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1345
9999 mem: storing 65515 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 3 -> 2
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 2 -> 3
9999 mem: storing 1 in location 1349
9999 mem: storing 0 in location 1350
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65515
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1351
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1340 is 1008
9999 mem: location 1342 is 1149
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65515
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1413
9999 mem: storing 85 in location 1414
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1416
9999 mem: incrementing refcount of 1008: 105 -> 106
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1417
9999 mem: incrementing refcount of 1149: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1418
9999 mem: storing 65515 in location 1419
9999 mem: storing 0 in location 1420
9999 mem: storing 0 in location 1421
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1417 is 1149
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1416 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1197
 106 run: return {width: "number"}
9999 mem: location 1197 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1423
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1416 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1197
 106 run: return {height: "number"}
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1424
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1425
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 9
9999 mem: storing 9 in location 1426
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1427
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1428
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1429
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1428 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 3 in location 1430
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1429 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1431
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1418 is 1
9999 mem: location 1419 is 65515
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1432
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1418 is 1
9999 mem: location 1419 is 65515
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 1419 in location 1486
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1486 is 1419
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 0 in location 1449
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 0 in location 1465
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 0 in location 1472
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 0 in location 1473
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 0 in location 1487
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 0 in location 1488
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1486 is 1419
9999 mem: location 1419 is 65515
9999 mem: storing 1 in location 1489
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"left arrow": "literal-string"}
  10 app: left arrow 
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1427 is 1153
9999 mem: location 1153 is 1222
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 16 -> 17
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1218
9999 mem: storing 1218 in location 1490
9999 mem: incrementing refcount of 1218: 17 -> 18
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1490 is 1218
9998 run: jumping to instruction 682
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 3
9999 mem: storing 3 in location 1452
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1453
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1454
9999 mem: incrementing refcount of 1168: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-left {editor: ("address" "shared" "editor-data")}
9999 mem: location 1417 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1500
9999 mem: storing 20 in location 1501
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1503
9999 mem: incrementing refcount of 1149: 11 -> 12
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1222
9999 mem: storing 1222 in location 1504
9999 mem: incrementing refcount of 1222: 18 -> 19
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1505
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1506
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 3
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1507
 106 run: {at-left-margin?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {left: "number"}
9999 mem: location 1506 is 1158
9999 mem: location 1158 is 0
9999 mem: location 1507 is 0
9999 mem: storing 1 in location 1508
 106 run: jump-if {at-left-margin?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 1
9998 run: jumping to instruction 13
 106 run: {top-of-screen?: "boolean"} <- equal {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1505 is 1157
9999 mem: location 1157 is 3
9999 mem: storing 0 in location 1510
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1509
 106 run: jump-if {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jump-if fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1505 is 1157
9999 mem: location 1157 is 3
9999 mem: location 1505 is 1157
9999 mem: storing 2 in location 1157
 106 run: jump-unless {top-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 32
 106 run: {previous-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1504 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1504 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is "character"
9999 mem: location 1223 is 10
9999 mem: storing 10 in location 1514
 106 run: {previous-character-is-newline?: "boolean"} <- equal {previous-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 10
9999 mem: storing 1 in location 1515
 106 run: jump-unless {previous-character-is-newline?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 1
9998 run: jump-unless fell through
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"switching to previous line": "literal-string"}
  10 app: switching to previous line 
 106 run: {d: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1516
9999 mem: incrementing refcount of 1168: 14 -> 15
 106 run: {end-of-line: "number"} <- previous-line-length {before-cursor: ("address" "shared" "duplex-list" "character")}, {d: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1504 is 1222
9999 mem: location 1516 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1119
9999 mem: incrementing refcount of 1222: 19 -> 20
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1120
9999 mem: incrementing refcount of 1168: 15 -> 16
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1222
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1222
9999 mem: location 1120 is 1168
9999 mem: storing 0 in location 1122
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1222
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1218
9999 mem: decrementing refcount of 1222: 21 -> 20
9999 mem: storing 1218 in location 1119
9999 mem: incrementing refcount of 1218: 19 -> 20
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1218
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1218
9999 mem: location 1120 is 1168
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1119 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1219
9998 run: its type is "character"
9999 mem: location 1219 is 102
9999 mem: storing 102 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 102
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1218
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1218: 21 -> 20
9999 mem: storing 1214 in location 1119
9999 mem: incrementing refcount of 1214: 17 -> 18
9990 schedule: previous-line-length/move-cursor-coordinates-left/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-2
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1214
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1214
9999 mem: location 1120 is 1168
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1119 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is "character"
9999 mem: location 1215 is 101
9999 mem: storing 101 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 101
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1214
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1214: 19 -> 18
9999 mem: storing 1210 in location 1119
9999 mem: incrementing refcount of 1210: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1210
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1210
9999 mem: location 1120 is 1168
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1119 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is "character"
9999 mem: location 1211 is 100
9999 mem: storing 100 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 100
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1210
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1210: 19 -> 18
9999 mem: storing 1206 in location 1119
9999 mem: incrementing refcount of 1206: 17 -> 18
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1206
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1206
9999 mem: location 1120 is 1168
9999 mem: storing 0 in location 1122
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1119 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 10
9999 mem: storing 10 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 10
9999 mem: storing 1 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1121 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 3
9999 mem: storing 3 in location 1517
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1503 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 9
9999 mem: storing 9 in location 1518
 106 run: {width: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1518 is 9
9999 mem: location 1507 is 0
9999 mem: storing 9 in location 1519
 106 run: {wrap?: "boolean"} <- greater-than {end-of-line: "number"}, {width: "number"}
9999 mem: location 1517 is 3
9999 mem: location 1519 is 9
9999 mem: storing 0 in location 1520
 106 run: jump-unless {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 47
 106 run: jump-if {wrap?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jump-if fell through
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {left: "number"}, {end-of-line: "number"}
9999 mem: location 1507 is 0
9999 mem: location 1517 is 3
9999 mem: location 1506 is 1158
9999 mem: storing 3 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1503 is 1149
9999 mem: location 1509 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1149: 12 -> 11
9999 mem: storing 1149 in location 1417
9999 mem: incrementing refcount of 1149: 11 -> 12
9999 mem: storing 0 in location 1422
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1490 is 1218
9999 mem: location 1427 is 1153
9999 mem: decrementing refcount of 1222: 20 -> 19
9999 mem: storing 1218 in location 1153
9999 mem: incrementing refcount of 1218: 20 -> 21
 105 run: {undo-coalesce-tag: "number"} <- copy {1: "literal", "left-arrow": ()}
9999 mem: storing 1 in location 1455
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1456
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1457
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1458
9999 mem: incrementing refcount of 1168: 16 -> 17
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1455 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1436
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1436 is 1160
9999 mem: location 1160 is 1410
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1436 is 1160
9999 mem: location 1160 is 1410
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1410 in location 1196
9999 mem: incrementing refcount of 1410: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1196 is 1410
9999 mem: skipping refcount at 1410
9999 mem: location 1411 is 1260
9999 mem: location 1412 is 0
9999 mem: location 1196 is 1410
9999 mem: skipping refcount at 1410
9998 run: address to copy is 1411
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1411 is 1260
9999 mem: storing 1260 in location 1197
9999 mem: incrementing refcount of 1260: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1197 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1260
9999 mem: storing 1260 in location 1435
9999 mem: incrementing refcount of 1260: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1435 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 1
9999 mem: location 1262 is 1
9999 mem: location 1263 is 0
9999 mem: location 1264 is 1168
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1168
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1435 is 1260
9999 mem: skipping refcount at 1260
9999 mem: storing 1262 in location 1441
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1441 is 1262
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1441 is 1262
9999 mem: location 1262 is 1
9999 mem: location 1263 is 0
9999 mem: location 1264 is 1168
9999 mem: location 1265 is 3
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1168
9999 mem: location 1268 is 0
9999 mem: location 1441 is 1262
9998 run: address to copy is 1268
9998 run: its type is "number"
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1459
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1455 is 1
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1460
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 709
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1522
9999 mem: decrementing refcount of 1260: 5 -> 4
9999 mem: storing 1522 in location 1435
9999 mem: incrementing refcount of 1522: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1452 is 3
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1168
9999 mem: location 1456 is 2
9999 mem: location 1457 is 3
9999 mem: location 1458 is 1168
9999 mem: location 1455 is 1
9999 mem: location 1435 is 1522
9999 mem: skipping refcount at 1522
9999 mem: location 1435 is 1522
9999 mem: skipping refcount at 1522
9999 mem: storing 1 in location 1523
9999 mem: storing 3 in location 1524
9999 mem: storing 0 in location 1525
9999 mem: storing 1168 in location 1526
9999 mem: storing 2 in location 1527
9999 mem: storing 3 in location 1528
9999 mem: storing 1168 in location 1529
9999 mem: storing 1 in location 1530
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1417 is 1149
9999 mem: location 1435 is 1522
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1185
9999 mem: incrementing refcount of 1149: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1522 in location 1186
9999 mem: incrementing refcount of 1522: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1410
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1186 is 1522
9999 mem: location 1187 is 1160
9999 mem: location 1160 is 1410
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1522 in location 1165
9999 mem: incrementing refcount of 1522: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1410 in location 1166
9999 mem: incrementing refcount of 1410: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1534
9999 mem: storing 1534 in location 1167
9999 mem: incrementing refcount of 1534: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1165 is 1522
9999 mem: location 1166 is 1410
9999 mem: location 1167 is 1534
9999 mem: skipping refcount at 1534
9999 mem: location 1167 is 1534
9999 mem: skipping refcount at 1534
9999 mem: storing 1522 in location 1535
9999 mem: storing 1410 in location 1536
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1534
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1534
9999 mem: location 1187 is 1160
9999 mem: decrementing refcount of 1410: 4 -> 3
9999 mem: storing 1534 in location 1160
9999 mem: incrementing refcount of 1534: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1188
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1188 is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1185 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 13 -> 12
9999 mem: storing 1149 in location 1417
9999 mem: incrementing refcount of 1149: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1416 is 1008
9999 mem: location 1417 is 1149
9999 mem: location 1422 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1149
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: decrementing refcount of 1149: 13 -> 12
9999 mem: storing 1149 in location 1342
9999 mem: incrementing refcount of 1149: 12 -> 13
9999 mem: storing 0 in location 1352
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1343
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1344
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1340 is 1008
9999 mem: location 1343 is 2
9999 mem: location 1344 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 108 -> 109
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 2
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 3
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 108 -> 109
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1297
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1300 is 1334
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 2
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is "number"
9999 mem: location 1335 is 2
9999 mem: storing 2 in location 1301
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 2
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1336 is 1320
9999 mem: storing 1320 in location 1302
9999 mem: incrementing refcount of 1320: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9999 mem: storing 3 in location 1303
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1301 is 2
9999 mem: location 1303 is 3
9999 mem: storing 0 in location 1304
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9998 run: base address is 1321
9999 mem: location 1301 is 2
9998 run: address to copy is 1330
9998 run: its type is event
9999 mem: location 1330 is 0
9999 mem: location 1331 is 48
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1306
9999 mem: storing 48 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1301 is 2
9999 mem: storing 3 in location 1301
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 2
9999 mem: location 1336 is 1320
9999 mem: location 1301 is 3
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy to is 1335
9999 mem: storing 3 in location 1335
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1306 is 0
9999 mem: location 1307 is 48
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1300 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1345
9999 mem: storing 48 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 4 -> 3
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 3 -> 4
9999 mem: storing 1 in location 1349
9999 mem: storing 0 in location 1350
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1345 is 0
9999 mem: location 1346 is 48
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1351
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1340 is 1008
9999 mem: location 1342 is 1149
9999 mem: location 1345 is 0
9999 mem: location 1346 is 48
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1413
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1416
9999 mem: incrementing refcount of 1008: 109 -> 110
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1417
9999 mem: incrementing refcount of 1149: 13 -> 14
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1418
9999 mem: storing 48 in location 1419
9999 mem: storing 0 in location 1420
9999 mem: storing 0 in location 1421
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1417 is 1149
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1416 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 110 -> 111
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1197
 106 run: return {width: "number"}
9999 mem: location 1197 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1423
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1416 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 111 -> 112
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1197
 106 run: return {height: "number"}
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1424
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1425
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 9
9999 mem: storing 9 in location 1426
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1427
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1428
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1429
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1428 is 1157
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1430
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1429 is 1158
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1431
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1418 is 0
9999 mem: location 1419 is 48
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 1419 in location 1432
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1432 is 1419
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1433
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1444
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1444 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1449
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1465
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1466
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1471
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1472
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1473
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1474
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1478
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 0 in location 1482
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: storing 1 in location 1485
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1422
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1485 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1467
9999 mem: incrementing refcount of 1168: 17 -> 18
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1427 is 1153
9999 mem: location 1153 is 1218
9999 mem: storing 1218 in location 1479
9999 mem: incrementing refcount of 1218: 21 -> 22
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1417 is 1149
9999 mem: location 1432 is 1419
9999 mem: location 1419 is 48
9999 mem: location 1416 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1537
9999 mem: storing 31 in location 1538
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1540
9999 mem: incrementing refcount of 1149: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1541
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1218
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1543
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1541 is 48
9999 mem: location 1543 is 1153
9999 mem: location 1153 is 1218
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1185
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1186
9999 mem: incrementing refcount of 1218: 22 -> 23
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1570
9999 mem: storing 1570 in location 1187
9999 mem: incrementing refcount of 1570: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 0
9999 mem: location 1572 is 0
9999 mem: location 1573 is 0
9999 mem: location 1185 is 48
9999 mem: location 1187 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy to is 1571
9999 mem: storing 48 in location 1571
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1188
9999 mem: incrementing refcount of 1222: 19 -> 20
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1187 is 1570
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy to is 1220
9999 mem: storing 1570 in location 1220
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 48
9999 mem: location 1572 is 0
9999 mem: location 1573 is 0
9999 mem: location 1186 is 1218
9999 mem: location 1187 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy to is 1573
9999 mem: storing 1218 in location 1573
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 48
9999 mem: location 1572 is 0
9999 mem: location 1573 is 1218
9999 mem: location 1188 is 1222
9999 mem: location 1187 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy to is 1572
9999 mem: storing 1222 in location 1572
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1222
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1187 is 1570
9999 mem: location 1188 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy to is 1225
9999 mem: storing 1570 in location 1225
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1218
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1543 is 1153
9999 mem: location 1153 is 1218
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1570
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1570
9999 mem: storing 1570 in location 1197
9999 mem: incrementing refcount of 1570: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1570
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1570
9999 mem: location 1543 is 1153
9999 mem: decrementing refcount of 1218: 24 -> 23
9999 mem: storing 1570 in location 1153
9999 mem: incrementing refcount of 1570: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1544
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1545
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1546
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1540 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 9
9999 mem: storing 9 in location 1547
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1544 is 1157
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1548
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1545 is 1158
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1549
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1542 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1197
 107 run: return {width: "number"}
9999 mem: location 1197 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1550
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1542 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1197
 107 run: return {height: "number"}
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1551
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1547 is 9
9999 mem: storing 8 in location 1552
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1545 is 1158
9999 mem: location 1158 is 3
9999 mem: location 1552 is 8
9999 mem: storing 0 in location 1553
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1553 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1545 is 1158
9999 mem: location 1158 is 3
9999 mem: location 1545 is 1158
9999 mem: storing 4 in location 1158
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1543 is 1153
9999 mem: location 1153 is 1570
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1570 in location 1196
9999 mem: incrementing refcount of 1570: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1570
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 48
9999 mem: location 1572 is 1222
9999 mem: location 1573 is 1218
9999 mem: location 1196 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy is 1572
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1572 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1560
9999 mem: incrementing refcount of 1222: 21 -> 22
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1560 is 1222
9999 mem: storing 0 in location 1561
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1560 is 1222
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1545 is 1158
9999 mem: location 1158 is 4
9999 mem: location 1550 is 10
9999 mem: storing 0 in location 1564
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1543 is 1153
9999 mem: location 1153 is 1570
9999 mem: storing 1570 in location 1566
9999 mem: incrementing refcount of 1570: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1542 is 1008
9999 mem: location 1548 is 2
9999 mem: location 1549 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1166
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 2
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 3
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1549 is 3
9999 mem: storing 3 in location 1567
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1559
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1567 is 3
9999 mem: location 1547 is 9
9999 mem: storing 0 in location 1564
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1566 is 1570
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1566 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 48
9999 mem: location 1572 is 1222
9999 mem: location 1573 is 1218
9999 mem: location 1566 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy is 1571
9998 run: its type is "character"
9999 mem: location 1571 is 48
9999 mem: storing 48 in location 1568
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1568 is 48
9999 mem: storing 0 in location 1569
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1542 is 1008
9999 mem: location 1568 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1277
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 48
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 3
9999 mem: storing 23 in location 1289
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 48
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 23
9999 mem: storing 1062 in location 1294
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 48
9999 mem: location 1277 is 7
9999 mem: location 1294 is 1062
9999 mem: location 1294 is 1062
9999 mem: storing 48 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1295
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1295 is 9
9999 mem: storing 0 in location 1296
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 4
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1567 is 3
9999 mem: storing 4 in location 1567
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1566 is 1570
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1570 in location 1196
9999 mem: incrementing refcount of 1570: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1570
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 48
9999 mem: location 1572 is 1222
9999 mem: location 1573 is 1218
9999 mem: location 1196 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy is 1572
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1572 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1570: 6 -> 5
9999 mem: storing 1222 in location 1566
9999 mem: incrementing refcount of 1222: 23 -> 24
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1559
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1567 is 4
9999 mem: location 1547 is 9
9999 mem: storing 0 in location 1564
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1566 is 1222
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1566 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1570
9999 mem: location 1566 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is "character"
9999 mem: location 1223 is 10
9999 mem: storing 10 in location 1568
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1568 is 10
9999 mem: storing 1 in location 1569
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 1
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1559
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1540 is 1149
9999 mem: location 1542 is 1008
9999 mem: location 1559 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1149: 15 -> 14
9999 mem: storing 1149 in location 1417
9999 mem: incrementing refcount of 1149: 14 -> 15
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1416
9999 mem: incrementing refcount of 1008: 116 -> 117
9999 mem: storing 0 in location 1422
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1469
9999 mem: incrementing refcount of 1168: 18 -> 19
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1417 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1436
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1436 is 1160
9999 mem: location 1160 is 1534
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1436 is 1160
9999 mem: location 1160 is 1534
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1534 in location 1196
9999 mem: incrementing refcount of 1534: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1196 is 1534
9999 mem: skipping refcount at 1534
9999 mem: location 1535 is 1522
9999 mem: location 1536 is 1410
9999 mem: location 1196 is 1534
9999 mem: skipping refcount at 1534
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1535 is 1522
9999 mem: storing 1522 in location 1197
9999 mem: incrementing refcount of 1522: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1197 is 1522
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1522
9999 mem: storing 1522 in location 1435
9999 mem: incrementing refcount of 1522: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1435 is 1522
9999 mem: skipping refcount at 1522
9999 mem: location 1523 is 1
9999 mem: location 1524 is 3
9999 mem: location 1525 is 0
9999 mem: location 1526 is 1168
9999 mem: location 1527 is 2
9999 mem: location 1528 is 3
9999 mem: location 1529 is 1168
9999 mem: location 1530 is 1
9999 mem: location 1531 is 0
9999 mem: location 1532 is 0
9999 mem: location 1533 is 0
9999 mem: location 1435 is 1522
9999 mem: skipping refcount at 1522
9999 mem: storing 0 in location 1442
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1442 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1479 is 1218
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 23 -> 24
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 102
9999 mem: location 1220 is 1570
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1570
9999 mem: storing 1570 in location 1197
9999 mem: incrementing refcount of 1570: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1570
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1570
9999 mem: storing 1570 in location 1443
9999 mem: incrementing refcount of 1570: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1443 is 1570
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1570 in location 1196
9999 mem: incrementing refcount of 1570: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1570
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1570
9999 mem: skipping refcount at 1570
9999 mem: location 1571 is 48
9999 mem: location 1572 is 1222
9999 mem: location 1573 is 1218
9999 mem: location 1196 is 1570
9999 mem: skipping refcount at 1570
9998 run: address to copy is 1572
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1572 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 24 -> 25
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1481
9999 mem: incrementing refcount of 1222: 25 -> 26
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1574
9999 mem: decrementing refcount of 1522: 5 -> 4
9999 mem: storing 1574 in location 1435
9999 mem: incrementing refcount of 1574: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1430 is 2
9999 mem: location 1431 is 3
9999 mem: location 1467 is 1168
9999 mem: location 1428 is 1157
9999 mem: location 1157 is 2
9999 mem: location 1429 is 1158
9999 mem: location 1158 is 4
9999 mem: location 1469 is 1168
9999 mem: location 1443 is 1570
9999 mem: location 1481 is 1222
9999 mem: location 1435 is 1574
9999 mem: skipping refcount at 1574
9999 mem: location 1435 is 1574
9999 mem: skipping refcount at 1574
9999 mem: storing 0 in location 1575
9999 mem: storing 2 in location 1576
9999 mem: storing 3 in location 1577
9999 mem: storing 1168 in location 1578
9999 mem: storing 2 in location 1579
9999 mem: storing 4 in location 1580
9999 mem: storing 1168 in location 1581
9999 mem: storing 1570 in location 1582
9999 mem: storing 1222 in location 1583
9999 mem: storing 1 in location 1584
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1417 is 1149
9999 mem: location 1435 is 1574
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1185
9999 mem: incrementing refcount of 1149: 15 -> 16
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1574 in location 1186
9999 mem: incrementing refcount of 1574: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1534
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1186 is 1574
9999 mem: location 1187 is 1160
9999 mem: location 1160 is 1534
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1574 in location 1165
9999 mem: incrementing refcount of 1574: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1534 in location 1166
9999 mem: incrementing refcount of 1534: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1586
9999 mem: storing 1586 in location 1167
9999 mem: incrementing refcount of 1586: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1165 is 1574
9999 mem: location 1166 is 1534
9999 mem: location 1167 is 1586
9999 mem: skipping refcount at 1586
9999 mem: location 1167 is 1586
9999 mem: skipping refcount at 1586
9999 mem: storing 1574 in location 1587
9999 mem: storing 1534 in location 1588
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1586
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1586
9999 mem: location 1187 is 1160
9999 mem: decrementing refcount of 1534: 4 -> 3
9999 mem: storing 1586 in location 1160
9999 mem: incrementing refcount of 1586: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1586
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1188
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1188 is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1185 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 16 -> 15
9999 mem: storing 1149 in location 1417
9999 mem: incrementing refcount of 1149: 15 -> 16
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1416 is 1008
9999 mem: location 1417 is 1149
9999 mem: location 1422 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1149
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 116 -> 117
9999 mem: decrementing refcount of 1149: 16 -> 15
9999 mem: storing 1149 in location 1342
9999 mem: incrementing refcount of 1149: 15 -> 16
9999 mem: storing 0 in location 1352
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1586
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 2
9999 mem: storing 2 in location 1343
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1570
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
9999 mem: location 1156 is 3
9999 mem: location 1157 is 2
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1586
9999 mem: location 1161 is 0
9999 mem: location 1342 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1344
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1340 is 1008
9999 mem: location 1343 is 2
9999 mem: location 1344 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 117 -> 118
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1167
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 2
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 4
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 118 -> 117
9999 mem: storing 1008 in location 1340
9999 mem: incrementing refcount of 1008: 117 -> 118
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1297
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1300
9999 mem: incrementing refcount of 1334: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1300 is 1334
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 3
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9998 run: its type is "number"
9999 mem: location 1335 is 3
9999 mem: storing 3 in location 1301
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 3
9999 mem: location 1336 is 1320
9999 mem: location 1300 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1336 is 1320
9999 mem: storing 1320 in location 1302
9999 mem: incrementing refcount of 1320: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1302 is 1320
9999 mem: skipping refcount at 1320
9999 mem: storing 3 in location 1303
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1301 is 3
9999 mem: location 1303 is 3
9999 mem: storing 1 in location 1304
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
9999 mem: storing 1193 in location 1305
9999 mem: incrementing refcount of 1193: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1305 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1300 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 5 -> 4
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 4 -> 5
9999 mem: storing 1 in location 1349
9999 mem: storing 1 in location 1350
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1340 is 1008
9999 mem: location 1341 is 1334
9999 mem: location 1342 is 1149
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .def0      .\n    .g         .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
 102 run: check-trace-count-for-label {1: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
