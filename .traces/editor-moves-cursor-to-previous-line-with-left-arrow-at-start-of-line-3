 102 run: assume-console {"\n    left-click 1, 0\n    press left-arrow\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {left-arrow: ()}
9992 load: after rewriting: press {left-arrow: ()}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'left-click' event starting at 1344
9999 mem: storing 'press' event starting at 1348
9999 mem: storing 'type' event starting at 1352
9999 mem: storing 'text' tag at 1352
9999 mem: storing character 48 at 1353
9999 mem: storing console in 1356
9999 mem: storing console data in 1358
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1356
9999 mem: location 2 is 1156
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1359
9999 mem: storing 14 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 99 -> 100
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1356 in location 1363
9999 mem: incrementing refcount of 1356: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1364
9999 mem: incrementing refcount of 1156: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1365
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9998 run: its type is "number"
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1366
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1362 is 1012
9999 mem: location 1365 is 1
9999 mem: location 1366 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1267
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 100 -> 101
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1271
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1271 is 1
9999 mem: location 1273 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 101 -> 100
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 100 -> 101
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1363 is 1356
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1311
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1356 in location 1314
9999 mem: incrementing refcount of 1356: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1314 is 1356
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 0
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1357
9999 mem: storing 1357 in location 1315
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 0
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1358
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1358 is 1342
9999 mem: storing 1342 in location 1316
9999 mem: incrementing refcount of 1342: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9999 mem: storing 3 in location 1317
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1318
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9998 run: base address is 1343
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 0
9998 run: address to copy is 1344
9998 run: its type is event
9999 mem: location 1344 is 2
9999 mem: location 1345 is 65513
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 mem: storing 2 in location 1320
9999 mem: storing 65513 in location 1321
9999 mem: storing 1 in location 1322
9999 mem: storing 0 in location 1323
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 0
9999 mem: location 1315 is 1357
9999 mem: storing 1 in location 1357
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1320 is 2
9999 mem: location 1321 is 65513
9999 mem: location 1322 is 1
9999 mem: location 1323 is 0
9999 mem: location 1314 is 1356
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 0]
9998 run: result 1 is 1356
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1367
9999 mem: storing 65513 in location 1368
9999 mem: storing 1 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: decrementing refcount of 1356: 2 -> 1
9999 mem: storing 1356 in location 1363
9999 mem: incrementing refcount of 1356: 1 -> 2
9999 mem: storing 1 in location 1371
9999 mem: storing 0 in location 1372
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1367 is 2
9999 mem: location 1368 is 65513
9999 mem: location 1369 is 1
9999 mem: location 1370 is 0
9999 mem: storing 1368 in location 1373
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1373 is 1368
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1362 is 1012
9999 mem: location 1364 is 1156
9999 mem: location 1373 is 1368
9999 mem: location 1368 is 65513
9999 mem: location 1369 is 1
9999 mem: location 1370 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1375
9999 mem: storing 27 in location 1376
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1378
9999 mem: incrementing refcount of 1012: 101 -> 102
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1379
9999 mem: incrementing refcount of 1156: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1380
9999 mem: storing 1 in location 1381
9999 mem: storing 0 in location 1382
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1379 is 1156
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1380 is 65513
9999 mem: location 1381 is 1
9999 mem: location 1382 is 0
9998 run: address to copy is 1381
9998 run: its type is "number"
9999 mem: location 1381 is 1
9999 mem: storing 1 in location 1383
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1380 is 65513
9999 mem: location 1381 is 1
9999 mem: location 1382 is 0
9998 run: address to copy is 1382
9998 run: its type is "number"
9999 mem: location 1382 is 0
9999 mem: storing 0 in location 1384
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1385
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1384 is 0
9999 mem: location 1385 is 0
9999 mem: storing 0 in location 1386
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 9
9999 mem: storing 9 in location 1387
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1384 is 0
9999 mem: location 1387 is 9
9999 mem: storing 0 in location 1388
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1389
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9998 run: its type is "number"
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1390
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1158
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1158 is 1175
9999 mem: storing 1175 in location 1391
9999 mem: incrementing refcount of 1175: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1378 is 1012
9999 mem: location 1379 is 1156
9999 mem: location 1383 is 1
9999 mem: location 1384 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1404
9999 mem: storing 26 in location 1405
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1407
9999 mem: incrementing refcount of 1012: 102 -> 103
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1408
9999 mem: incrementing refcount of 1156: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1409
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1410
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1408 is 1156
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1411
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 9
9999 mem: storing 9 in location 1412
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 103 -> 104
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1204
 107 run: return {height: "number"}
9999 mem: location 1204 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1413
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1158
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1158 is 1175
9999 mem: storing 1175 in location 1414
9999 mem: incrementing refcount of 1175: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1175
9999 mem: storing 1175 in location 1415
9999 mem: incrementing refcount of 1175: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1203
9999 mem: incrementing refcount of 1175: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1196
9999 mem: location 1178 is 0
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1196
9999 mem: storing 1196 in location 1204
9999 mem: incrementing refcount of 1196: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1175: 14 -> 13
9999 mem: storing 1196 in location 1414
9999 mem: incrementing refcount of 1196: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1416
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1417
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1418
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1409 is 1
9999 mem: location 1418 is 1164
9999 mem: storing 1 in location 1164
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1419
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1410 is 0
9999 mem: location 1419 is 1165
9999 mem: storing 0 in location 1165
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1408 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1420
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1196
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 1
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 1
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1417 is 0
9999 mem: location 1419 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 1 in location 1423
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1175
9999 mem: location 1420 is 1160
9999 mem: decrementing refcount of 1175: 13 -> 12
9999 mem: storing 1175 in location 1160
9999 mem: incrementing refcount of 1175: 12 -> 13
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 97
9999 mem: location 1198 is 1205
9999 mem: location 1199 is 1175
9999 mem: location 1414 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 97
9999 mem: storing 97 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 97
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 0
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1203
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 97
9999 mem: location 1198 is 1205
9999 mem: location 1199 is 1175
9999 mem: location 1203 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1205
9999 mem: storing 1205 in location 1204
9999 mem: incrementing refcount of 1205: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1196: 15 -> 14
9999 mem: storing 1205 in location 1414
9999 mem: incrementing refcount of 1205: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1203
9999 mem: incrementing refcount of 1175: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1196
9999 mem: location 1178 is 0
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1196
9999 mem: storing 1196 in location 1204
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1175: 14 -> 13
9999 mem: storing 1196 in location 1415
9999 mem: incrementing refcount of 1196: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 1
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 1
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1423
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 98
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1196
9999 mem: location 1414 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 98
9999 mem: storing 98 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 98
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 1
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1203
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 98
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1196
9999 mem: location 1203 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1204
9999 mem: incrementing refcount of 1209: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 15 -> 14
9999 mem: storing 1209 in location 1414
9999 mem: incrementing refcount of 1209: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1203
9999 mem: incrementing refcount of 1196: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 97
9999 mem: location 1198 is 1205
9999 mem: location 1199 is 1175
9999 mem: location 1203 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1205
9999 mem: storing 1205 in location 1204
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1196: 17 -> 16
9999 mem: storing 1205 in location 1415
9999 mem: incrementing refcount of 1205: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 1
9999 mem: storing 2 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 1
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 1
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1417 is 2
9999 mem: location 1419 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1423
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 99
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1414 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 99
9999 mem: storing 99 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 99
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 2
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1203
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 99
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1203 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1204
9999 mem: incrementing refcount of 1213: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 15 -> 14
9999 mem: storing 1213 in location 1414
9999 mem: incrementing refcount of 1213: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1203
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 98
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1196
9999 mem: location 1203 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1204
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 17 -> 16
9999 mem: storing 1209 in location 1415
9999 mem: incrementing refcount of 1209: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 2
9999 mem: storing 3 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 1
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 1
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1423
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 10
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1414 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 10
9999 mem: storing 10 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 10
9999 mem: storing 1 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 1
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1426
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1416 is 1
9999 mem: storing 2 in location 1416
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1417
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1203
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 10
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1203 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1204
9999 mem: incrementing refcount of 1217: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 15 -> 14
9999 mem: storing 1217 in location 1414
9999 mem: incrementing refcount of 1217: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1203
9999 mem: incrementing refcount of 1209: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 99
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1203 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1204
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 17 -> 16
9999 mem: storing 1213 in location 1415
9999 mem: incrementing refcount of 1213: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 2
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 2
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 100
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1414 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 100
9999 mem: storing 100 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 100
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 0
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1203
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 100
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1203 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1204
9999 mem: incrementing refcount of 1221: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 15 -> 14
9999 mem: storing 1221 in location 1414
9999 mem: incrementing refcount of 1221: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1203
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 10
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1203 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1204
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 17 -> 16
9999 mem: storing 1217 in location 1415
9999 mem: incrementing refcount of 1217: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 2
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 2
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 101
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1414 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 101
9999 mem: storing 101 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 101
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 1
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-3
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1203
9999 mem: incrementing refcount of 1221: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 101
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1203 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1204
9999 mem: incrementing refcount of 1225: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 15 -> 14
9999 mem: storing 1225 in location 1414
9999 mem: incrementing refcount of 1225: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1203
9999 mem: incrementing refcount of 1217: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 100
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1203 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1204
9999 mem: incrementing refcount of 1221: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 17 -> 16
9999 mem: storing 1221 in location 1415
9999 mem: incrementing refcount of 1221: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 1
9999 mem: storing 2 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 2
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 2
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 102
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1414 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 102
9999 mem: storing 102 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 102
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 2
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1203
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 102
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1203 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1204
9999 mem: incrementing refcount of 1229: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 15 -> 14
9999 mem: storing 1229 in location 1414
9999 mem: incrementing refcount of 1229: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1203
9999 mem: incrementing refcount of 1221: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 101
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1203 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1204
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 17 -> 16
9999 mem: storing 1225 in location 1415
9999 mem: incrementing refcount of 1225: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 2
9999 mem: storing 3 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 2
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 2
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 10
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1414 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 10
9999 mem: storing 10 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 10
9999 mem: storing 1 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 2
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1416 is 2
9999 mem: storing 3 in location 1416
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1417
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1203
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 10
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1203 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1204
9999 mem: incrementing refcount of 1233: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 15 -> 14
9999 mem: storing 1233 in location 1414
9999 mem: incrementing refcount of 1233: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1203
9999 mem: incrementing refcount of 1225: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 102
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1203 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1204
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 17 -> 16
9999 mem: storing 1229 in location 1415
9999 mem: incrementing refcount of 1229: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1416 is 3
9999 mem: location 1413 is 5
9999 mem: storing 0 in location 1421
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 3
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1414 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 103
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1414 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 103
9999 mem: storing 103 in location 1424
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1424 is 103
9999 mem: storing 0 in location 1425
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1417 is 0
9999 mem: location 1412 is 9
9999 mem: storing 0 in location 1427
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1414 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1203
9999 mem: incrementing refcount of 1233: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 103
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1203 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 0
9999 mem: storing 0 in location 1204
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1233: 14 -> 13
9999 mem: storing 0 in location 1414
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1415 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1203
9999 mem: incrementing refcount of 1229: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 10
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1203 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1204
9999 mem: incrementing refcount of 1233: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 17 -> 16
9999 mem: storing 1233 in location 1415
9999 mem: incrementing refcount of 1233: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1417
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 3
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1422
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1428
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1422 is 0
9999 mem: location 1428 is 0
9999 mem: storing 0 in location 1429
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1416 is 3
9999 mem: location 1418 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 0 in location 1430
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: storing 0 in location 1431
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1408 is 1156
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1156
9999 mem: decrementing refcount of 1156: 9 -> 8
9999 mem: storing 1156 in location 1379
9999 mem: incrementing refcount of 1156: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1392
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1393
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9998 run: its type is "number"
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1394
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1379 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1158
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1158 is 1175
9999 mem: storing 1175 in location 1395
9999 mem: incrementing refcount of 1175: 13 -> 14
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1397
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1389 is 1
9999 mem: location 1390 is 0
9999 mem: location 1391 is 1175
9999 mem: location 1393 is 1
9999 mem: location 1394 is 0
9999 mem: location 1395 is 1175
9999 mem: location 1392 is 0
9999 mem: location 1397 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1397 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1175 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1175 in location 1007
9999 mem: storing 0 in location 1008
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1379 is 1156
9999 mem: location 1397 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1189
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1192
9999 mem: incrementing refcount of 1156: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1193
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1194
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1193 is 1000
9999 mem: location 1194 is 1167
9999 mem: location 1167 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1169
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1172
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1173
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1432
9999 mem: storing 1432 in location 1174
9999 mem: incrementing refcount of 1432: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1172 is 1000
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1174 is 1432
9999 mem: skipping refcount at 1432
9999 mem: storing 1000 in location 1433
9999 mem: storing 0 in location 1434
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1174 is 1432
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1432
9999 mem: location 1194 is 1167
9999 mem: storing 1432 in location 1167
9999 mem: incrementing refcount of 1432: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1195
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1195 is 1168
9999 mem: storing 0 in location 1168
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1192 is 1156
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1156
9999 mem: decrementing refcount of 1156: 10 -> 9
9999 mem: storing 1156 in location 1379
9999 mem: incrementing refcount of 1156: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1379 is 1156
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1365
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9998 run: its type is "number"
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1366
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1362 is 1012
9999 mem: location 1365 is 1
9999 mem: location 1366 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1267
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 104 -> 105
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1271
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1271 is 1
9999 mem: location 1273 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 105 -> 104
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 104 -> 105
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1363 is 1356
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1311
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1356 in location 1314
9999 mem: incrementing refcount of 1356: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1314 is 1356
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 1
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1357
9999 mem: storing 1357 in location 1315
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 1
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1358
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1358 is 1342
9999 mem: storing 1342 in location 1316
9999 mem: incrementing refcount of 1342: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9999 mem: storing 3 in location 1317
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1318
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9998 run: base address is 1343
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 1
9998 run: address to copy is 1348
9998 run: its type is event
9999 mem: location 1348 is 1
9999 mem: location 1349 is 65515
9999 mem: location 1350 is 0
9999 mem: location 1351 is 0
9999 mem: storing 1 in location 1320
9999 mem: storing 65515 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 1
9999 mem: location 1315 is 1357
9999 mem: storing 2 in location 1357
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1320 is 1
9999 mem: location 1321 is 65515
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: location 1314 is 1356
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1356
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1367
9999 mem: storing 65515 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: decrementing refcount of 1356: 3 -> 2
9999 mem: storing 1356 in location 1363
9999 mem: incrementing refcount of 1356: 2 -> 3
9999 mem: storing 1 in location 1371
9999 mem: storing 0 in location 1372
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1367 is 1
9999 mem: location 1368 is 65515
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: storing 0 in location 1373
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1362 is 1012
9999 mem: location 1364 is 1156
9999 mem: location 1367 is 1
9999 mem: location 1368 is 65515
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1435
9999 mem: storing 85 in location 1436
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 105 -> 106
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1439
9999 mem: incrementing refcount of 1156: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1440
9999 mem: storing 65515 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1444
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1439 is 1156
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 106 -> 107
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1204
 106 run: return {width: "number"}
9999 mem: location 1204 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1445
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 107 -> 108
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1204
 106 run: return {height: "number"}
9999 mem: location 1204 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1446
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1447
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 9
9999 mem: storing 9 in location 1448
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1449
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1450
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1451
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1450 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1452
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1451 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1453
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1440 is 1
9999 mem: location 1441 is 65515
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: storing 0 in location 1454
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1440 is 1
9999 mem: location 1441 is 65515
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: storing 1441 in location 1508
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1508 is 1441
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 0 in location 1471
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 0 in location 1487
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 0 in location 1494
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 0 in location 1495
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1495 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 0 in location 1509
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 0 in location 1510
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65515
9999 mem: storing 1 in location 1511
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"left arrow": "literal-string"}
  10 app: left arrow 
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1449 is 1160
9999 mem: location 1160 is 1175
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1203
9999 mem: incrementing refcount of 1175: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1175
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1196
9999 mem: location 1178 is 0
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1178
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1204
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1204 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1512
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1444
 105 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1512 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1438 is 1012
9999 mem: location 1439 is 1156
9999 mem: location 1444 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1156
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 108 -> 107
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 107 -> 108
9999 mem: decrementing refcount of 1156: 11 -> 10
9999 mem: storing 1156 in location 1364
9999 mem: incrementing refcount of 1156: 10 -> 11
9999 mem: storing 0 in location 1374
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1365
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9998 run: its type is "number"
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1366
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1362 is 1012
9999 mem: location 1365 is 1
9999 mem: location 1366 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1267
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 108 -> 109
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1271
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1271 is 1
9999 mem: location 1273 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 109 -> 108
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 108 -> 109
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1363 is 1356
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1311
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1356 in location 1314
9999 mem: incrementing refcount of 1356: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1314 is 1356
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 2
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1357
9999 mem: storing 1357 in location 1315
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 2
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1358
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1358 is 1342
9999 mem: storing 1342 in location 1316
9999 mem: incrementing refcount of 1342: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9999 mem: storing 3 in location 1317
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1318
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9998 run: base address is 1343
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 2
9998 run: address to copy is 1352
9998 run: its type is event
9999 mem: location 1352 is 0
9999 mem: location 1353 is 48
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1320
9999 mem: storing 48 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 2
9999 mem: location 1315 is 1357
9999 mem: storing 3 in location 1357
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1320 is 0
9999 mem: location 1321 is 48
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: location 1314 is 1356
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1356
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1367
9999 mem: storing 48 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: decrementing refcount of 1356: 4 -> 3
9999 mem: storing 1356 in location 1363
9999 mem: incrementing refcount of 1356: 3 -> 4
9999 mem: storing 1 in location 1371
9999 mem: storing 0 in location 1372
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1367 is 0
9999 mem: location 1368 is 48
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: storing 0 in location 1373
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1362 is 1012
9999 mem: location 1364 is 1156
9999 mem: location 1367 is 0
9999 mem: location 1368 is 48
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1435
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 109 -> 110
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1439
9999 mem: incrementing refcount of 1156: 11 -> 12
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1440
9999 mem: storing 48 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1444
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1439 is 1156
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 110 -> 111
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1204
 106 run: return {width: "number"}
9999 mem: location 1204 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1445
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 111 -> 112
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1204
 106 run: return {height: "number"}
9999 mem: location 1204 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1446
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1447
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 9
9999 mem: storing 9 in location 1448
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1449
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1450
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1451
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1450 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1452
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1451 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1453
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1440 is 0
9999 mem: location 1441 is 48
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: storing 1441 in location 1454
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1454 is 1441
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1455
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1466
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1471
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1487
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1488
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1493
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1494
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1495
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1495 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1496
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1496 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1500
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1504
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1504 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 1 in location 1507
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1444
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1507 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1158
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1158 is 1175
9999 mem: storing 1175 in location 1489
9999 mem: incrementing refcount of 1175: 15 -> 16
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1449 is 1160
9999 mem: location 1160 is 1175
9999 mem: storing 1175 in location 1501
9999 mem: incrementing refcount of 1175: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1439 is 1156
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1522
9999 mem: storing 31 in location 1523
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1525
9999 mem: incrementing refcount of 1156: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1526
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1527
9999 mem: incrementing refcount of 1012: 112 -> 113
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1175
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1528
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 48
9999 mem: location 1528 is 1160
9999 mem: location 1160 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1189
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1192
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1193
9999 mem: incrementing refcount of 1175: 17 -> 18
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1555
9999 mem: storing 1555 in location 1194
9999 mem: incrementing refcount of 1555: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1194 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1192 is 48
9999 mem: location 1194 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1556
9999 mem: storing 48 in location 1556
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1196
9999 mem: location 1178 is 0
9999 mem: location 1193 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1196
9999 mem: storing 1196 in location 1195
9999 mem: incrementing refcount of 1196: 16 -> 17
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1196
9999 mem: location 1178 is 0
9999 mem: location 1194 is 1555
9999 mem: location 1193 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy to is 1177
9999 mem: storing 1555 in location 1177
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1194 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1193 is 1175
9999 mem: location 1194 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1558
9999 mem: storing 1175 in location 1558
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1194 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1175
9999 mem: location 1195 is 1196
9999 mem: location 1194 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1557
9999 mem: storing 1196 in location 1557
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1195 is 1196
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 97
9999 mem: location 1198 is 1205
9999 mem: location 1199 is 1175
9999 mem: location 1194 is 1555
9999 mem: location 1195 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy to is 1199
9999 mem: storing 1555 in location 1199
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1193 is 1175
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1528 is 1160
9999 mem: location 1160 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1203
9999 mem: incrementing refcount of 1175: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1555
9999 mem: location 1178 is 0
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1555
9999 mem: storing 1555 in location 1204
9999 mem: incrementing refcount of 1555: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1555
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1555
9999 mem: location 1528 is 1160
9999 mem: decrementing refcount of 1175: 19 -> 18
9999 mem: storing 1555 in location 1160
9999 mem: incrementing refcount of 1555: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1529
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1530
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1531
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1525 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 9
9999 mem: storing 9 in location 1532
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1529 is 1164
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1533
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1530 is 1165
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1534
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1527 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 113 -> 114
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1204
 107 run: return {width: "number"}
9999 mem: location 1204 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1535
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1527 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 114 -> 115
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1203 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1203 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1204
 107 run: return {height: "number"}
9999 mem: location 1204 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1536
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1532 is 9
9999 mem: storing 8 in location 1537
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1530 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1537 is 8
9999 mem: storing 0 in location 1538
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1538 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1530 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1530 is 1165
9999 mem: storing 1 in location 1165
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1528 is 1160
9999 mem: location 1160 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1203
9999 mem: incrementing refcount of 1555: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1555
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1196
9999 mem: location 1558 is 1175
9999 mem: location 1203 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 1196
9999 mem: storing 1196 in location 1204
9999 mem: incrementing refcount of 1196: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1545
9999 mem: incrementing refcount of 1196: 18 -> 19
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1545 is 1196
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1545 is 1196
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1530 is 1165
9999 mem: location 1165 is 1
9999 mem: location 1535 is 10
9999 mem: storing 0 in location 1549
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1549 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1528 is 1160
9999 mem: location 1160 is 1555
9999 mem: storing 1555 in location 1551
9999 mem: incrementing refcount of 1555: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1527 is 1012
9999 mem: location 1533 is 1
9999 mem: location 1534 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1267
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 115 -> 116
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1271
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1272
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1271 is 1
9999 mem: location 1273 is 1015
9999 mem: storing 1 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1534 is 0
9999 mem: storing 0 in location 1552
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1544
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1552 is 0
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1549
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1551 is 1555
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1551 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1196
9999 mem: location 1558 is 1175
9999 mem: location 1551 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1556
9998 run: its type is "character"
9999 mem: location 1556 is 48
9999 mem: storing 48 in location 1553
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1553 is 48
9999 mem: storing 0 in location 1554
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1554 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1527 is 1012
9999 mem: location 1553 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1275
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 116 -> 117
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1279
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1280
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1282
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1279 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1278 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1284
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1285
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1286
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1288
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 29
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-cursor-to-previous-line-with-left-arrow-at-start-of-line-3
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1284 is 10
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1279 is 48
9999 mem: storing 0 in location 1289
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1284 is 10
9999 mem: storing 10 in location 1292
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1292 is 10
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1292
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1293
9999 mem: incrementing refcount of 1018: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1294
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1279 is 48
9999 mem: storing 0 in location 1295
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1292 is 10
9999 mem: storing 1040 in location 1297
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1297 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1297 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1298
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1279 is 48
9999 mem: location 1298 is 1040
9999 mem: storing 48 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1297 is 1040
9999 mem: location 1040 is 48
9999 mem: location 1041 is 7
9999 mem: location 1297 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1299
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1299 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1284 is 10
9999 mem: storing 9 in location 1300
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1300 is 9
9999 mem: storing 0 in location 1301
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1288 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1552 is 0
9999 mem: storing 1 in location 1552
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1551 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1203
9999 mem: incrementing refcount of 1555: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1555
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1196
9999 mem: location 1558 is 1175
9999 mem: location 1203 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 1196
9999 mem: storing 1196 in location 1204
9999 mem: incrementing refcount of 1196: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1555: 6 -> 5
9999 mem: storing 1196 in location 1551
9999 mem: incrementing refcount of 1196: 20 -> 21
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1544
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1552 is 1
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1549
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1551 is 1196
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1551 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 97
9999 mem: location 1198 is 1205
9999 mem: location 1199 is 1555
9999 mem: location 1551 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 97
9999 mem: storing 97 in location 1553
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1553 is 97
9999 mem: storing 0 in location 1554
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1554 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1527 is 1012
9999 mem: location 1553 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1275
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 117 -> 118
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1279
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1280
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1282
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1279 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1278 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1284
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1285
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1286
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1288
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1284 is 10
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1279 is 97
9999 mem: storing 0 in location 1289
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1284 is 10
9999 mem: storing 10 in location 1292
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1292 is 10
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1292
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1293
9999 mem: incrementing refcount of 1018: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1294
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1279 is 97
9999 mem: storing 0 in location 1295
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1292 is 11
9999 mem: storing 1042 in location 1297
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1297 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1297 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1298
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1279 is 97
9999 mem: location 1298 is 1042
9999 mem: storing 97 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1297 is 1042
9999 mem: location 1042 is 97
9999 mem: location 1043 is 7
9999 mem: location 1297 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1299
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1299 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1284 is 10
9999 mem: storing 9 in location 1300
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1300 is 9
9999 mem: storing 0 in location 1301
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1288 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1552 is 1
9999 mem: storing 2 in location 1552
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1551 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1203
9999 mem: incrementing refcount of 1196: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 97
9999 mem: location 1198 is 1205
9999 mem: location 1199 is 1555
9999 mem: location 1203 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1205
9999 mem: storing 1205 in location 1204
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1196: 22 -> 21
9999 mem: storing 1205 in location 1551
9999 mem: incrementing refcount of 1205: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1544
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1552 is 2
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1549
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1551 is 1205
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1551 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 98
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1196
9999 mem: location 1551 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 98
9999 mem: storing 98 in location 1553
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1553 is 98
9999 mem: storing 0 in location 1554
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1554 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1527 is 1012
9999 mem: location 1553 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1275
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 118 -> 119
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1279
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1280
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1282
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1279 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1278 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1284
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1285
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1286
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1288
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1284 is 10
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1279 is 98
9999 mem: storing 0 in location 1289
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1284 is 10
9999 mem: storing 10 in location 1292
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1292 is 10
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1292
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1293
9999 mem: incrementing refcount of 1018: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1294
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1279 is 98
9999 mem: storing 0 in location 1295
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1292 is 12
9999 mem: storing 1044 in location 1297
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1297 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1297 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1298
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1279 is 98
9999 mem: location 1298 is 1044
9999 mem: storing 98 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1297 is 1044
9999 mem: location 1044 is 98
9999 mem: location 1045 is 7
9999 mem: location 1297 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1299
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1299 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1284 is 10
9999 mem: storing 9 in location 1300
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1300 is 9
9999 mem: storing 0 in location 1301
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1288 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1552 is 2
9999 mem: storing 3 in location 1552
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1551 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1203
9999 mem: incrementing refcount of 1205: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 98
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1196
9999 mem: location 1203 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1204
9999 mem: incrementing refcount of 1209: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 19 -> 18
9999 mem: storing 1209 in location 1551
9999 mem: incrementing refcount of 1209: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1544
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1552 is 3
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1549
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1551 is 1209
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1551 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 99
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1551 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 99
9999 mem: storing 99 in location 1553
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1553 is 99
9999 mem: storing 0 in location 1554
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1554 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1527 is 1012
9999 mem: location 1553 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1275
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1278
9999 mem: incrementing refcount of 1012: 119 -> 120
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1279
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1280
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1282
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1279 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1278 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1284
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1285
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1286
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1288
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1284 is 10
9999 mem: storing 1 in location 1287
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1279 is 99
9999 mem: storing 0 in location 1289
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1286 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1284 is 10
9999 mem: storing 10 in location 1292
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1292 is 10
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1292
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1278 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1293
9999 mem: incrementing refcount of 1018: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1294
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1279 is 99
9999 mem: storing 0 in location 1295
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1293 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1292 is 13
9999 mem: storing 1046 in location 1297
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1297 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1297 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1298
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1279 is 99
9999 mem: location 1298 is 1046
9999 mem: storing 99 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1297 is 1046
9999 mem: location 1046 is 99
9999 mem: location 1047 is 7
9999 mem: location 1297 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1299
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1299 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1284 is 10
9999 mem: storing 9 in location 1300
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1300 is 9
9999 mem: storing 0 in location 1301
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1288 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1278 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1552 is 3
9999 mem: storing 4 in location 1552
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1551 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1203
9999 mem: incrementing refcount of 1209: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 99
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1203 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1204
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 19 -> 18
9999 mem: storing 1213 in location 1551
9999 mem: incrementing refcount of 1213: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1544
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1552 is 4
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1549
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1551 is 1213
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1551 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 10
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1551 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 10
9999 mem: storing 10 in location 1553
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1553 is 10
9999 mem: storing 1 in location 1554
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1554 is 1
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1544
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1525 is 1156
9999 mem: location 1527 is 1012
9999 mem: location 1544 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1156
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1156: 13 -> 12
9999 mem: storing 1156 in location 1439
9999 mem: incrementing refcount of 1156: 12 -> 13
9999 mem: decrementing refcount of 1012: 120 -> 119
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 119 -> 120
9999 mem: storing 0 in location 1444
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1158
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1158 is 1175
9999 mem: storing 1175 in location 1491
9999 mem: incrementing refcount of 1175: 18 -> 19
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1439 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1458
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1458 is 1167
9999 mem: location 1167 is 1432
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1458 is 1167
9999 mem: location 1167 is 1432
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1203
9999 mem: incrementing refcount of 1432: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1203 is 1432
9999 mem: skipping refcount at 1432
9999 mem: location 1433 is 1000
9999 mem: location 1434 is 0
9999 mem: location 1203 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1433 is 1000
9999 mem: storing 1000 in location 1204
9999 mem: incrementing refcount of 1000: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1204 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1457
9999 mem: incrementing refcount of 1000: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1175
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1175
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1464
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1501 is 1175
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1203
9999 mem: incrementing refcount of 1175: 19 -> 20
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1175
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1555
9999 mem: location 1178 is 0
9999 mem: location 1203 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1555
9999 mem: storing 1555 in location 1204
9999 mem: incrementing refcount of 1555: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1555
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1555
9999 mem: storing 1555 in location 1465
9999 mem: incrementing refcount of 1555: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1465 is 1555
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1203
9999 mem: incrementing refcount of 1555: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1203 is 1555
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1203 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1196
9999 mem: location 1558 is 1175
9999 mem: location 1203 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 1196
9999 mem: storing 1196 in location 1204
9999 mem: incrementing refcount of 1196: 21 -> 22
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1204 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1503
9999 mem: incrementing refcount of 1196: 22 -> 23
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: decrementing refcount of 1000: 5 -> 4
9999 mem: storing 1120 in location 1457
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1452 is 1
9999 mem: location 1453 is 0
9999 mem: location 1489 is 1175
9999 mem: location 1450 is 1164
9999 mem: location 1164 is 1
9999 mem: location 1451 is 1165
9999 mem: location 1165 is 1
9999 mem: location 1491 is 1175
9999 mem: location 1465 is 1555
9999 mem: location 1503 is 1196
9999 mem: location 1457 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1457 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1175 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 1 in location 1126
9999 mem: storing 1175 in location 1127
9999 mem: storing 1555 in location 1128
9999 mem: storing 1196 in location 1129
9999 mem: storing 1 in location 1130
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1439 is 1156
9999 mem: location 1457 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1189
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1156 in location 1192
9999 mem: incrementing refcount of 1156: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1193
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1432
9999 mem: location 1168 is 0
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1194
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1193 is 1120
9999 mem: location 1194 is 1167
9999 mem: location 1167 is 1432
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1169
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1172
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1173
9999 mem: incrementing refcount of 1432: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1559
9999 mem: storing 1559 in location 1174
9999 mem: incrementing refcount of 1559: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1172 is 1120
9999 mem: location 1173 is 1432
9999 mem: location 1174 is 1559
9999 mem: skipping refcount at 1559
9999 mem: location 1174 is 1559
9999 mem: skipping refcount at 1559
9999 mem: storing 1120 in location 1560
9999 mem: storing 1432 in location 1561
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1174 is 1559
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1559
9999 mem: location 1194 is 1167
9999 mem: decrementing refcount of 1432: 4 -> 3
9999 mem: storing 1559 in location 1167
9999 mem: incrementing refcount of 1559: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1559
9999 mem: location 1168 is 0
9999 mem: location 1192 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1195
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1195 is 1168
9999 mem: storing 0 in location 1168
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1192 is 1156
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1156
9999 mem: decrementing refcount of 1156: 14 -> 13
9999 mem: storing 1156 in location 1439
9999 mem: incrementing refcount of 1156: 13 -> 14
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1438 is 1012
9999 mem: location 1439 is 1156
9999 mem: location 1444 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1156
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 120 -> 119
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 119 -> 120
9999 mem: decrementing refcount of 1156: 14 -> 13
9999 mem: storing 1156 in location 1364
9999 mem: incrementing refcount of 1156: 13 -> 14
9999 mem: storing 0 in location 1374
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1559
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 1
9999 mem: storing 1 in location 1365
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 1175
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1555
9999 mem: location 1161 is 0
9999 mem: location 1162 is 9
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: location 1167 is 1559
9999 mem: location 1168 is 0
9999 mem: location 1364 is 1156
9999 mem: skipping refcount at 1156
9998 run: address to copy is 1165
9998 run: its type is "number"
9999 mem: location 1165 is 1
9999 mem: storing 1 in location 1366
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1362 is 1012
9999 mem: location 1365 is 1
9999 mem: location 1366 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1267
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
9999 mem: incrementing refcount of 1012: 120 -> 121
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1271
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1272
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1273
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1271 is 1
9999 mem: location 1273 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1272 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 121 -> 120
9999 mem: storing 1012 in location 1362
9999 mem: incrementing refcount of 1012: 120 -> 121
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1363 is 1356
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1311
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1356 in location 1314
9999 mem: incrementing refcount of 1356: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1314 is 1356
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 3
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1357
9999 mem: storing 1357 in location 1315
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9999 mem: location 1357 is 3
9999 mem: location 1358 is 1342
9999 mem: location 1314 is 1356
9999 mem: skipping refcount at 1356
9998 run: address to copy is 1358
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1358 is 1342
9999 mem: storing 1342 in location 1316
9999 mem: incrementing refcount of 1342: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1316 is 1342
9999 mem: skipping refcount at 1342
9999 mem: storing 3 in location 1317
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1315 is 1357
9999 mem: location 1357 is 3
9999 mem: location 1317 is 3
9999 mem: storing 1 in location 1318
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1200
9999 mem: storing 1200 in location 1319
9999 mem: incrementing refcount of 1200: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1319 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1314 is 1356
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1356
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: decrementing refcount of 1356: 5 -> 4
9999 mem: storing 1356 in location 1363
9999 mem: incrementing refcount of 1356: 4 -> 5
9999 mem: storing 1 in location 1371
9999 mem: storing 1 in location 1372
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1362 is 1012
9999 mem: location 1363 is 1356
9999 mem: location 1364 is 1156
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .0abc      .\n    .def       .\n    .g         .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
 102 run: check-trace-count-for-label {4: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
