 102 run: assume-console {"\n    left-click 1, 1\n    press end\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {1: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {1: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {end: ()}
9992 load: after rewriting: press {end: ()}
9999 mem: storing 'left-click' event starting at 1334
9999 mem: storing 'press' event starting at 1338
9999 mem: storing console in 1342
9999 mem: storing console data in 1344
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1342
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1345
9999 mem: storing 14 in location 1346
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1348
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1342 in location 1349
9999 mem: incrementing refcount of 1342: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1350
9999 mem: incrementing refcount of 1154: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1351
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1352
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1348 is 1012
9999 mem: location 1351 is 1
9999 mem: location 1352 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1264 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1348
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1349 is 1342
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1342 in location 1304
9999 mem: incrementing refcount of 1342: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1342
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1343 is 0
9999 mem: location 1344 is 1332
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9998 run: address to copy is 1343
9999 mem: storing 1343 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1343 is 0
9999 mem: location 1344 is 1332
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9998 run: address to copy is 1344
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1344 is 1332
9999 mem: storing 1332 in location 1306
9999 mem: incrementing refcount of 1332: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9999 mem: storing 2 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1307 is 2
9999 mem: storing 0 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9998 run: base address is 1333
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 0
9998 run: address to copy is 1334
9998 run: its type is event
9999 mem: location 1334 is 2
9999 mem: location 1335 is 65513
9999 mem: location 1336 is 1
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1310
9999 mem: storing 65513 in location 1311
9999 mem: storing 1 in location 1312
9999 mem: storing 1 in location 1313
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1305 is 1343
9999 mem: storing 1 in location 1343
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1310 is 2
9999 mem: location 1311 is 65513
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1
9999 mem: location 1304 is 1342
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 1]
9998 run: result 1 is 1342
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1353
9999 mem: storing 65513 in location 1354
9999 mem: storing 1 in location 1355
9999 mem: storing 1 in location 1356
9999 mem: decrementing refcount of 1342: 2 -> 1
9999 mem: storing 1342 in location 1349
9999 mem: incrementing refcount of 1342: 1 -> 2
9999 mem: storing 1 in location 1357
9999 mem: storing 0 in location 1358
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1353 is 2
9999 mem: location 1354 is 65513
9999 mem: location 1355 is 1
9999 mem: location 1356 is 1
9999 mem: storing 1354 in location 1359
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1359 is 1354
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1348 is 1012
9999 mem: location 1350 is 1154
9999 mem: location 1359 is 1354
9999 mem: location 1354 is 65513
9999 mem: location 1355 is 1
9999 mem: location 1356 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1361
9999 mem: storing 27 in location 1362
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1364
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1365
9999 mem: incrementing refcount of 1154: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1366
9999 mem: storing 1 in location 1367
9999 mem: storing 1 in location 1368
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1365 is 1154
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1366 is 65513
9999 mem: location 1367 is 1
9999 mem: location 1368 is 1
9998 run: address to copy is 1367
9998 run: its type is "number"
9999 mem: location 1367 is 1
9999 mem: storing 1 in location 1369
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1369 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1366 is 65513
9999 mem: location 1367 is 1
9999 mem: location 1368 is 1
9998 run: address to copy is 1368
9998 run: its type is "number"
9999 mem: location 1368 is 1
9999 mem: storing 1 in location 1370
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1371
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1370 is 1
9999 mem: location 1371 is 0
9999 mem: storing 0 in location 1372
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1373
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1370 is 1
9999 mem: location 1373 is 9
9999 mem: storing 0 in location 1374
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1375
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1376
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1377
9999 mem: incrementing refcount of 1173: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1364 is 1012
9999 mem: location 1365 is 1154
9999 mem: location 1369 is 1
9999 mem: location 1370 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1390
9999 mem: storing 26 in location 1391
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1393
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1394
9999 mem: incrementing refcount of 1154: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1395
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1396
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1394 is 1154
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1397
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1398
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1393 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 81 -> 82
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 107 run: return {height: "number"}
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1399
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1400
9999 mem: incrementing refcount of 1173: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1173
9999 mem: storing 1173 in location 1401
9999 mem: incrementing refcount of 1173: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1201
9999 mem: incrementing refcount of 1173: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1173
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1194
9999 mem: location 1176 is 0
9999 mem: location 1201 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1173: 14 -> 13
9999 mem: storing 1194 in location 1400
9999 mem: incrementing refcount of 1194: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1402
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1397 is 0
9999 mem: storing 0 in location 1403
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1404
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1395 is 1
9999 mem: location 1404 is 1162
9999 mem: storing 1 in location 1162
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1405
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1396 is 1
9999 mem: location 1405 is 1163
9999 mem: storing 1 in location 1163
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1394 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1406
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1194
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 1
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1403 is 0
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1409
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 49
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1173
9999 mem: location 1400 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 49
9999 mem: storing 49 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 49
9999 mem: storing 0 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1403 is 0
9999 mem: location 1398 is 9
9999 mem: storing 0 in location 1413
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 49
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1173
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 15 -> 14
9999 mem: storing 1203 in location 1400
9999 mem: incrementing refcount of 1203: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1201
9999 mem: incrementing refcount of 1173: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1173
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1194
9999 mem: location 1176 is 0
9999 mem: location 1201 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1173: 14 -> 13
9999 mem: storing 1194 in location 1401
9999 mem: incrementing refcount of 1194: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1403 is 0
9999 mem: storing 1 in location 1403
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1203
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 1
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1403 is 1
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1409
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1194
9999 mem: location 1406 is 1158
9999 mem: decrementing refcount of 1173: 13 -> 12
9999 mem: storing 1194 in location 1158
9999 mem: incrementing refcount of 1194: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 50
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1400 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 50
9999 mem: storing 50 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 50
9999 mem: storing 0 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1403 is 1
9999 mem: location 1398 is 9
9999 mem: storing 0 in location 1413
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 50
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 15 -> 14
9999 mem: storing 1207 in location 1400
9999 mem: incrementing refcount of 1207: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 49
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1173
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 18 -> 17
9999 mem: storing 1203 in location 1401
9999 mem: incrementing refcount of 1203: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1403 is 1
9999 mem: storing 2 in location 1403
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1207
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 1
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1403 is 2
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1409
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 51
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1400 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 51
9999 mem: storing 51 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 51
9999 mem: storing 0 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1403 is 2
9999 mem: location 1398 is 9
9999 mem: storing 0 in location 1413
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 51
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 15 -> 14
9999 mem: storing 1211 in location 1400
9999 mem: incrementing refcount of 1211: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 50
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 17 -> 16
9999 mem: storing 1207 in location 1401
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1403 is 2
9999 mem: storing 3 in location 1403
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1211
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 1
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1403 is 3
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1409
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1400 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 10
9999 mem: storing 1 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1403 is 3
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1412
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1402 is 1
9999 mem: storing 2 in location 1402
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1397 is 0
9999 mem: storing 0 in location 1403
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 15 -> 14
9999 mem: storing 1215 in location 1400
9999 mem: incrementing refcount of 1215: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 51
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 17 -> 16
9999 mem: storing 1211 in location 1401
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1215
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 2
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 52
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1400 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 52
9999 mem: storing 52 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 52
9999 mem: storing 0 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1403 is 0
9999 mem: location 1398 is 9
9999 mem: storing 0 in location 1413
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 52
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 15 -> 14
9999 mem: storing 1219 in location 1400
9999 mem: incrementing refcount of 1219: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1215 in location 1401
9999 mem: incrementing refcount of 1215: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1403 is 0
9999 mem: storing 1 in location 1403
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1219
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 2
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 53
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1400 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 53
9999 mem: storing 53 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 53
9999 mem: storing 0 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1403 is 1
9999 mem: location 1398 is 9
9999 mem: storing 0 in location 1413
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 53
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 15 -> 14
9999 mem: storing 1223 in location 1400
9999 mem: incrementing refcount of 1223: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 52
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 17 -> 16
9999 mem: storing 1219 in location 1401
9999 mem: incrementing refcount of 1219: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1403 is 1
9999 mem: storing 2 in location 1403
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 1223
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1402 is 2
9999 mem: location 1399 is 5
9999 mem: storing 0 in location 1407
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1408
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1400 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 54
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1400 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 54
9999 mem: storing 54 in location 1410
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1410 is 54
9999 mem: storing 0 in location 1411
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1403 is 2
9999 mem: location 1398 is 9
9999 mem: storing 0 in location 1413
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-to-end-of-line-with-end
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1400 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 54
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1202
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1223: 14 -> 13
9999 mem: storing 0 in location 1400
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 53
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 17 -> 16
9999 mem: storing 1223 in location 1401
9999 mem: incrementing refcount of 1223: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1403 is 2
9999 mem: storing 3 in location 1403
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1408
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1403 is 3
9999 mem: location 1405 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1414
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1408 is 0
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1415
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 2
9999 mem: location 1404 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1416
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: storing 0 in location 1417
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1394 is 1154
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 9 -> 8
9999 mem: storing 1154 in location 1365
9999 mem: incrementing refcount of 1154: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1378
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1379
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1380
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1365 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1381
9999 mem: incrementing refcount of 1173: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1383
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1376 is 0
9999 mem: location 1377 is 1173
9999 mem: location 1379 is 1
9999 mem: location 1380 is 1
9999 mem: location 1381 is 1173
9999 mem: location 1378 is 0
9999 mem: location 1383 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1383 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1173 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1173 in location 1007
9999 mem: storing 0 in location 1008
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1365 is 1154
9999 mem: location 1383 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1187
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1190
9999 mem: incrementing refcount of 1154: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1191
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1192
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1191 is 1000
9999 mem: location 1192 is 1165
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1167
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1170
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1171
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1418
9999 mem: storing 1418 in location 1172
9999 mem: incrementing refcount of 1418: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1000
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1418
9999 mem: skipping refcount at 1418
9999 mem: location 1172 is 1418
9999 mem: skipping refcount at 1418
9999 mem: storing 1000 in location 1419
9999 mem: storing 0 in location 1420
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1172 is 1418
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1418
9999 mem: location 1192 is 1165
9999 mem: storing 1418 in location 1165
9999 mem: incrementing refcount of 1418: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1193
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1193 is 1166
9999 mem: storing 0 in location 1166
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1190 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 10 -> 9
9999 mem: storing 1154 in location 1365
9999 mem: incrementing refcount of 1154: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1365 is 1154
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1351
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1352
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1348 is 1012
9999 mem: location 1351 is 1
9999 mem: location 1352 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 1
9999 mem: location 1264 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1348
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1349 is 1342
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1342 in location 1304
9999 mem: incrementing refcount of 1342: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1342
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1343 is 1
9999 mem: location 1344 is 1332
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9998 run: address to copy is 1343
9999 mem: storing 1343 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1343 is 1
9999 mem: location 1344 is 1332
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9998 run: address to copy is 1344
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1344 is 1332
9999 mem: storing 1332 in location 1306
9999 mem: incrementing refcount of 1332: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9999 mem: storing 2 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 1
9999 mem: location 1307 is 2
9999 mem: storing 0 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9998 run: base address is 1333
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 1
9998 run: address to copy is 1338
9998 run: its type is event
9999 mem: location 1338 is 1
9999 mem: location 1339 is 65520
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: storing 1 in location 1310
9999 mem: storing 65520 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 1
9999 mem: location 1305 is 1343
9999 mem: storing 2 in location 1343
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1310 is 1
9999 mem: location 1311 is 65520
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1304 is 1342
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65520, 0, 0]
9998 run: result 1 is 1342
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1353
9999 mem: storing 65520 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: decrementing refcount of 1342: 3 -> 2
9999 mem: storing 1342 in location 1349
9999 mem: incrementing refcount of 1342: 2 -> 3
9999 mem: storing 1 in location 1357
9999 mem: storing 0 in location 1358
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1353 is 1
9999 mem: location 1354 is 65520
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: storing 0 in location 1359
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1348 is 1012
9999 mem: location 1350 is 1154
9999 mem: location 1353 is 1
9999 mem: location 1354 is 65520
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1421
9999 mem: storing 85 in location 1422
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1424
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1425
9999 mem: incrementing refcount of 1154: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1426
9999 mem: storing 65520 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1430
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1425 is 1154
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1424 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1202
 106 run: return {width: "number"}
9999 mem: location 1202 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1431
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1424 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 85 -> 86
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 106 run: return {height: "number"}
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1432
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1433
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1434
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1435
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1436
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1437
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1436 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1438
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1437 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1439
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1426 is 1
9999 mem: location 1427 is 65520
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: storing 0 in location 1440
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1440 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1426 is 1
9999 mem: location 1427 is 65520
9999 mem: location 1428 is 0
9999 mem: location 1429 is 0
9999 mem: storing 1427 in location 1494
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1494 is 1427
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1494 is 1427
9999 mem: location 1427 is 65520
9999 mem: storing 0 in location 1457
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1457 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1494 is 1427
9999 mem: location 1427 is 65520
9999 mem: storing 0 in location 1473
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1494 is 1427
9999 mem: location 1427 is 65520
9999 mem: storing 1 in location 1480
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1480 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1460
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1461
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1462
9999 mem: incrementing refcount of 1173: 13 -> 14
 105 run: move-to-end-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1425 is 1154
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1292
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1295
9999 mem: incrementing refcount of 1154: 11 -> 12
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1295 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1295 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1296
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1295 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1295 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1297
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1296 is 1158
9999 mem: location 1158 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 49
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1173
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1298
9999 mem: incrementing refcount of 1203: 17 -> 18
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1298 is 1203
9998 run: jump-unless fell through
 106 run: {nextc: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1298 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 50
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1298 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 50
9999 mem: storing 50 in location 1299
 106 run: {at-end-of-line?: "boolean"} <- equal {nextc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1299 is 50
9999 mem: storing 0 in location 1300
 106 run: jump-if {at-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1298 is 1203
9999 mem: location 1296 is 1158
9999 mem: decrementing refcount of 1194: 18 -> 17
9999 mem: storing 1203 in location 1158
9999 mem: incrementing refcount of 1203: 18 -> 19
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1297 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1297 is 1163
9999 mem: storing 2 in location 1163
 106 run: jump {: "offset"}
9998 run: jumping to instruction 5
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1296 is 1158
9999 mem: location 1158 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 50
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 20 -> 19
9999 mem: storing 1207 in location 1298
9999 mem: incrementing refcount of 1207: 17 -> 18
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1298 is 1207
9998 run: jump-unless fell through
 106 run: {nextc: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1298 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 51
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1298 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 51
9999 mem: storing 51 in location 1299
 106 run: {at-end-of-line?: "boolean"} <- equal {nextc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1299 is 51
9999 mem: storing 0 in location 1300
 106 run: jump-if {at-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1298 is 1207
9999 mem: location 1296 is 1158
9999 mem: decrementing refcount of 1203: 19 -> 18
9999 mem: storing 1207 in location 1158
9999 mem: incrementing refcount of 1207: 18 -> 19
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1297 is 1163
9999 mem: location 1163 is 2
9999 mem: location 1297 is 1163
9999 mem: storing 3 in location 1163
 106 run: jump {: "offset"}
9998 run: jumping to instruction 5
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1296 is 1158
9999 mem: location 1158 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 51
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 20 -> 19
9999 mem: storing 1211 in location 1298
9999 mem: incrementing refcount of 1211: 17 -> 18
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1298 is 1211
9998 run: jump-unless fell through
 106 run: {nextc: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1298 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1298 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1299
 106 run: {at-end-of-line?: "boolean"} <- equal {nextc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1299 is 10
9999 mem: storing 1 in location 1300
 106 run: jump-if {at-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jumping to instruction 13
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1295 is 1154
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1463
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1464
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1465
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1425 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1466
9999 mem: incrementing refcount of 1173: 14 -> 15
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 553
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: storing 1120 in location 1443
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1460 is 1
9999 mem: location 1461 is 1
9999 mem: location 1462 is 1173
9999 mem: location 1464 is 1
9999 mem: location 1465 is 3
9999 mem: location 1466 is 1173
9999 mem: location 1463 is 0
9999 mem: location 1443 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1443 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 1 in location 1123
9999 mem: storing 1173 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 3 in location 1126
9999 mem: storing 1173 in location 1127
9999 mem: storing 0 in location 1128
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1425 is 1154
9999 mem: location 1443 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1187
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1190
9999 mem: incrementing refcount of 1154: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1191
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1418
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1192
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1191 is 1120
9999 mem: location 1192 is 1165
9999 mem: location 1165 is 1418
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1167
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1170
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1418 in location 1171
9999 mem: incrementing refcount of 1418: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1508
9999 mem: storing 1508 in location 1172
9999 mem: incrementing refcount of 1508: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1120
9999 mem: location 1171 is 1418
9999 mem: location 1172 is 1508
9999 mem: skipping refcount at 1508
9999 mem: location 1172 is 1508
9999 mem: skipping refcount at 1508
9999 mem: storing 1120 in location 1509
9999 mem: storing 1418 in location 1510
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1172 is 1508
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1508
9999 mem: location 1192 is 1165
9999 mem: decrementing refcount of 1418: 3 -> 2
9999 mem: storing 1508 in location 1165
9999 mem: incrementing refcount of 1508: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1508
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1193
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1193 is 1166
9999 mem: storing 0 in location 1166
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1190 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 13 -> 12
9999 mem: storing 1154 in location 1425
9999 mem: incrementing refcount of 1154: 12 -> 13
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1430
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1424 is 1012
9999 mem: location 1425 is 1154
9999 mem: location 1430 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1348
9999 mem: incrementing refcount of 1012: 85 -> 86
9999 mem: decrementing refcount of 1154: 13 -> 12
9999 mem: storing 1154 in location 1350
9999 mem: incrementing refcount of 1154: 12 -> 13
9999 mem: storing 0 in location 1360
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1508
9999 mem: location 1166 is 0
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1351
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1508
9999 mem: location 1166 is 0
9999 mem: location 1350 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1352
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1348 is 1012
9999 mem: location 1351 is 1
9999 mem: location 1352 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 3
9999 mem: location 1264 is 1016
9999 mem: storing 3 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1348
9999 mem: incrementing refcount of 1012: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1349 is 1342
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1342 in location 1304
9999 mem: incrementing refcount of 1342: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1342
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1343 is 2
9999 mem: location 1344 is 1332
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9998 run: address to copy is 1343
9999 mem: storing 1343 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9999 mem: location 1343 is 2
9999 mem: location 1344 is 1332
9999 mem: location 1304 is 1342
9999 mem: skipping refcount at 1342
9998 run: address to copy is 1344
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1344 is 1332
9999 mem: storing 1332 in location 1306
9999 mem: incrementing refcount of 1332: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9999 mem: storing 2 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1343
9999 mem: location 1343 is 2
9999 mem: location 1307 is 2
9999 mem: storing 1 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
9999 mem: storing 1198 in location 1309
9999 mem: incrementing refcount of 1198: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1309 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1304 is 1342
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1342
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: decrementing refcount of 1342: 4 -> 3
9999 mem: storing 1342 in location 1349
9999 mem: incrementing refcount of 1342: 3 -> 4
9999 mem: storing 1 in location 1357
9999 mem: storing 1 in location 1358
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1348 is 1012
9999 mem: location 1349 is 1342
9999 mem: location 1350 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1508
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1508
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
