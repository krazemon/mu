 102 run: assume-console {"\n    left-click 2, 1\n    press end\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {1: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {1: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {end: ()}
9992 load: after rewriting: press {end: ()}
9999 mem: storing 'left-click' event starting at 1297
9999 mem: storing 'press' event starting at 1301
9999 mem: storing console in 1305
9999 mem: storing console data in 1307
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1305
9999 mem: location 2 is 1134
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1308
9999 mem: storing 14 in location 1309
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1311
9999 mem: incrementing refcount of 1008: 77 -> 78
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1313
9999 mem: incrementing refcount of 1134: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1314
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1315
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1311 is 1008
9999 mem: location 1314 is 1
9999 mem: location 1315 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1147
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1150
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1151
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1152
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1150 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 1
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1152 is 0
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1150 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1311
9999 mem: incrementing refcount of 1008: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1312 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1272
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1275
9999 mem: incrementing refcount of 1305: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1275 is 1305
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1295
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1306
9998 run: its type is "number"
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1276
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1295
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1307 is 1295
9999 mem: storing 1295 in location 1277
9999 mem: incrementing refcount of 1295: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1277 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 2 in location 1278
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1276 is 0
9999 mem: location 1278 is 2
9999 mem: storing 0 in location 1279
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1277 is 1295
9999 mem: skipping refcount at 1295
9998 run: base address is 1296
9999 mem: location 1276 is 0
9998 run: address to copy is 1297
9998 run: its type is event
9999 mem: location 1297 is 2
9999 mem: location 1298 is 65513
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1281
9999 mem: storing 65513 in location 1282
9999 mem: storing 2 in location 1283
9999 mem: storing 1 in location 1284
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1276 is 0
9999 mem: storing 1 in location 1276
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1295
9999 mem: location 1276 is 1
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy to is 1306
9999 mem: storing 1 in location 1306
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1281 is 2
9999 mem: location 1282 is 65513
9999 mem: location 1283 is 2
9999 mem: location 1284 is 1
9999 mem: location 1275 is 1305
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 1]
9998 run: result 1 is 1305
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1316
9999 mem: storing 65513 in location 1317
9999 mem: storing 2 in location 1318
9999 mem: storing 1 in location 1319
9999 mem: decrementing refcount of 1305: 2 -> 1
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 1 -> 2
9999 mem: storing 1 in location 1320
9999 mem: storing 0 in location 1321
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1316 is 2
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 2
9999 mem: location 1319 is 1
9999 mem: storing 1317 in location 1322
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1322 is 1317
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1311 is 1008
9999 mem: location 1313 is 1134
9999 mem: location 1322 is 1317
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 2
9999 mem: location 1319 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1324
9999 mem: storing 24 in location 1325
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1327
9999 mem: incrementing refcount of 1008: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1328
9999 mem: incrementing refcount of 1134: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1329
9999 mem: storing 2 in location 1330
9999 mem: storing 1 in location 1331
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1328 is 1134
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1329 is 65513
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1
9998 run: address to copy is 1330
9998 run: its type is "number"
9999 mem: location 1330 is 2
9999 mem: storing 2 in location 1332
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1332 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1329 is 65513
9999 mem: location 1330 is 2
9999 mem: location 1331 is 1
9998 run: address to copy is 1331
9998 run: its type is "number"
9999 mem: location 1331 is 1
9999 mem: storing 1 in location 1333
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1334
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
9999 mem: storing 0 in location 1335
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 9
9999 mem: storing 9 in location 1336
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1333 is 1
9999 mem: location 1336 is 9
9999 mem: storing 0 in location 1337
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1338
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1339
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1153
9999 mem: storing 1153 in location 1340
9999 mem: incrementing refcount of 1153: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1327 is 1008
9999 mem: location 1328 is 1134
9999 mem: location 1332 is 2
9999 mem: location 1333 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1207
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1210
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1211
9999 mem: incrementing refcount of 1134: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1212
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1213
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1211 is 1134
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1214
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 9
9999 mem: storing 9 in location 1215
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1210 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1181
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1181 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1181 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1181 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1182
 107 run: return {height: "number"}
9999 mem: location 1182 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1216
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1153
9999 mem: storing 1153 in location 1217
9999 mem: incrementing refcount of 1153: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1153
9999 mem: storing 1153 in location 1218
9999 mem: incrementing refcount of 1153: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1181
9999 mem: incrementing refcount of 1153: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1153
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1174
9999 mem: location 1156 is 0
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1174
9999 mem: storing 1174 in location 1182
9999 mem: incrementing refcount of 1174: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1174
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1174
9999 mem: decrementing refcount of 1153: 14 -> 13
9999 mem: storing 1174 in location 1217
9999 mem: incrementing refcount of 1174: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1219
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1214 is 0
9999 mem: storing 0 in location 1220
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1212 is 2
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1142
9999 mem: storing 2 in location 1142
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1212 is 2
9999 mem: storing 2 in location 1221
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1213 is 1
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1143
9999 mem: storing 1 in location 1143
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1213 is 1
9999 mem: storing 1 in location 1222
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1138 is 1153
9999 mem: storing 1153 in location 1223
9999 mem: incrementing refcount of 1153: 13 -> 14
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1174
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-to-end-of-line-with-end-2
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 2
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1174
9999 mem: skipping refcount at 1174
9999 mem: location 1175 is 49
9999 mem: location 1176 is 1183
9999 mem: location 1177 is 1153
9999 mem: location 1217 is 1174
9999 mem: skipping refcount at 1174
9998 run: address to copy is 1175
9998 run: its type is "character"
9999 mem: location 1175 is 49
9999 mem: storing 49 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 49
9999 mem: storing 0 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1215 is 9
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1174
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1174 in location 1181
9999 mem: incrementing refcount of 1174: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1174
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1174
9999 mem: skipping refcount at 1174
9999 mem: location 1175 is 49
9999 mem: location 1176 is 1183
9999 mem: location 1177 is 1153
9999 mem: location 1181 is 1174
9999 mem: skipping refcount at 1174
9998 run: address to copy is 1176
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1176 is 1183
9999 mem: storing 1183 in location 1182
9999 mem: incrementing refcount of 1183: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1174: 15 -> 14
9999 mem: storing 1183 in location 1217
9999 mem: incrementing refcount of 1183: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1181
9999 mem: incrementing refcount of 1153: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1153
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1174
9999 mem: location 1156 is 0
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1174
9999 mem: storing 1174 in location 1182
9999 mem: incrementing refcount of 1174: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1174
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1174
9999 mem: decrementing refcount of 1153: 15 -> 14
9999 mem: storing 1174 in location 1218
9999 mem: incrementing refcount of 1174: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1183
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 2
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 50
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1174
9999 mem: location 1217 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 50
9999 mem: storing 50 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 50
9999 mem: storing 0 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1215 is 9
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
9999 mem: incrementing refcount of 1183: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 50
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1174
9999 mem: location 1181 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1182
9999 mem: incrementing refcount of 1187: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1187
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: decrementing refcount of 1183: 15 -> 14
9999 mem: storing 1187 in location 1217
9999 mem: incrementing refcount of 1187: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1174
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1174 in location 1181
9999 mem: incrementing refcount of 1174: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1174
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1174
9999 mem: skipping refcount at 1174
9999 mem: location 1175 is 49
9999 mem: location 1176 is 1183
9999 mem: location 1177 is 1153
9999 mem: location 1181 is 1174
9999 mem: skipping refcount at 1174
9998 run: address to copy is 1176
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1176 is 1183
9999 mem: storing 1183 in location 1182
9999 mem: incrementing refcount of 1183: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1174: 17 -> 16
9999 mem: storing 1183 in location 1218
9999 mem: incrementing refcount of 1183: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 1
9999 mem: storing 2 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1187
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 2
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 51
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1183
9999 mem: location 1217 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 51
9999 mem: storing 51 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 51
9999 mem: storing 0 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1215 is 9
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1187 in location 1181
9999 mem: incrementing refcount of 1187: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1187
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 51
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1183
9999 mem: location 1181 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1182
9999 mem: incrementing refcount of 1191: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1187: 15 -> 14
9999 mem: storing 1191 in location 1217
9999 mem: incrementing refcount of 1191: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1181
9999 mem: incrementing refcount of 1183: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 50
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1174
9999 mem: location 1181 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1182
9999 mem: incrementing refcount of 1187: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1187
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: decrementing refcount of 1183: 17 -> 16
9999 mem: storing 1187 in location 1218
9999 mem: incrementing refcount of 1187: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1191
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 2
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 10
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1217 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 10
9999 mem: storing 10 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 10
9999 mem: storing 1 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 2
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 2 in location 1219
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1214 is 0
9999 mem: storing 0 in location 1220
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1181
9999 mem: incrementing refcount of 1191: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1191
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 10
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1181 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1182
9999 mem: incrementing refcount of 1195: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1191: 15 -> 14
9999 mem: storing 1195 in location 1217
9999 mem: incrementing refcount of 1195: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1187 in location 1181
9999 mem: incrementing refcount of 1187: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1187
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 51
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1183
9999 mem: location 1181 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: storing 1191 in location 1182
9999 mem: incrementing refcount of 1191: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1187: 17 -> 16
9999 mem: storing 1191 in location 1218
9999 mem: incrementing refcount of 1191: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1195
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 2
9999 mem: storing 1 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1
9999 mem: storing 0 in location 1226
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 52
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1217 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 52
9999 mem: storing 52 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 52
9999 mem: storing 0 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1215 is 9
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
9999 mem: incrementing refcount of 1195: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 52
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1181 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1182
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 15 -> 14
9999 mem: storing 1199 in location 1217
9999 mem: incrementing refcount of 1199: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1181
9999 mem: incrementing refcount of 1191: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1191
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 10
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1181 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1182
9999 mem: incrementing refcount of 1195: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1191: 17 -> 16
9999 mem: storing 1195 in location 1218
9999 mem: incrementing refcount of 1195: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1199
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 2
9999 mem: storing 1 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1
9999 mem: storing 1 in location 1226
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1195
9999 mem: decrementing refcount of 1153: 14 -> 13
9999 mem: storing 1195 in location 1223
9999 mem: incrementing refcount of 1195: 16 -> 17
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1223 is 1195
9999 mem: location 1211 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1138
9999 mem: storing 1195 in location 1138
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 53
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1217 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 53
9999 mem: storing 53 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 53
9999 mem: storing 0 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1215 is 9
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1181
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1199
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 53
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1181 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1182
9999 mem: incrementing refcount of 1203: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 15 -> 14
9999 mem: storing 1203 in location 1217
9999 mem: incrementing refcount of 1203: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
9999 mem: incrementing refcount of 1195: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 52
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1181 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1182
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 18 -> 17
9999 mem: storing 1199 in location 1218
9999 mem: incrementing refcount of 1199: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 1
9999 mem: storing 2 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 1203
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1216 is 5
9999 mem: storing 0 in location 1224
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 2
9999 mem: storing 1 in location 1225
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1222 is 1
9999 mem: storing 0 in location 1226
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1226 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1217 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 54
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1217 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 54
9999 mem: storing 54 in location 1227
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1227 is 54
9999 mem: storing 0 in location 1228
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1215 is 9
9999 mem: storing 0 in location 1230
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1230 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1217 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1181
9999 mem: incrementing refcount of 1203: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 54
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1181 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1182
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1203: 14 -> 13
9999 mem: storing 0 in location 1217
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1181
9999 mem: incrementing refcount of 1199: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1199
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 53
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1181 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1182
9999 mem: incrementing refcount of 1203: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 17 -> 16
9999 mem: storing 1203 in location 1218
9999 mem: incrementing refcount of 1203: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1220 is 2
9999 mem: storing 3 in location 1220
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1217 is 0
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 2
9999 mem: storing 1 in location 1225
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1222 is 1
9999 mem: storing 0 in location 1231
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1225 is 1
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1232
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 2
9999 mem: storing 0 in location 1233
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1234
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1211 is 1134
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1134
9999 mem: decrementing refcount of 1134: 9 -> 8
9999 mem: storing 1134 in location 1328
9999 mem: incrementing refcount of 1134: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1341
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1153
9999 mem: storing 1153 in location 1342
9999 mem: incrementing refcount of 1153: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 1343
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1328 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 1344
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 41
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1235
9999 mem: storing 1235 in location 1346
9999 mem: incrementing refcount of 1235: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1338 is 1
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1153
9999 mem: location 1343 is 2
9999 mem: location 1344 is 1
9999 mem: location 1342 is 1153
9999 mem: location 1341 is 0
9999 mem: location 1346 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1346 is 1235
9999 mem: skipping refcount at 1235
9999 mem: storing 1 in location 1236
9999 mem: storing 1 in location 1237
9999 mem: storing 0 in location 1238
9999 mem: storing 1153 in location 1239
9999 mem: storing 2 in location 1240
9999 mem: storing 1 in location 1241
9999 mem: storing 1153 in location 1242
9999 mem: storing 0 in location 1243
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1328 is 1134
9999 mem: location 1346 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1167
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1170
9999 mem: incrementing refcount of 1134: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1171
9999 mem: incrementing refcount of 1235: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1172
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1171 is 1235
9999 mem: location 1172 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1147
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1150
9999 mem: incrementing refcount of 1235: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1151
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1350
9999 mem: storing 1350 in location 1152
9999 mem: incrementing refcount of 1350: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1150 is 1235
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1152 is 1350
9999 mem: skipping refcount at 1350
9999 mem: storing 1235 in location 1351
9999 mem: storing 0 in location 1352
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1152 is 1350
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1350
9999 mem: storing 1350 in location 1172
9999 mem: incrementing refcount of 1350: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1172 is 1350
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1145
9999 mem: storing 1350 in location 1145
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1173
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1173
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1173 is 0
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1146
9999 mem: storing 0 in location 1146
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1170 is 1134
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1134
9999 mem: decrementing refcount of 1134: 10 -> 9
9999 mem: storing 1134 in location 1328
9999 mem: incrementing refcount of 1134: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1328 is 1134
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 1314
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 1315
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1311 is 1008
9999 mem: location 1314 is 2
9999 mem: location 1315 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1147
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1150
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1151
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1152
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1150 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 2
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1152 is 1
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1150 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1311
9999 mem: incrementing refcount of 1008: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1312 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1272
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1275
9999 mem: incrementing refcount of 1305: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1275 is 1305
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1295
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1306
9998 run: its type is "number"
9999 mem: location 1306 is 1
9999 mem: storing 1 in location 1276
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1295
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1307 is 1295
9999 mem: storing 1295 in location 1277
9999 mem: incrementing refcount of 1295: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1277 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 2 in location 1278
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1276 is 1
9999 mem: location 1278 is 2
9999 mem: storing 0 in location 1279
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1277 is 1295
9999 mem: skipping refcount at 1295
9998 run: base address is 1296
9999 mem: location 1276 is 1
9998 run: address to copy is 1301
9998 run: its type is event
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65520
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 1 in location 1281
9999 mem: storing 65520 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1276 is 1
9999 mem: storing 2 in location 1276
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 1
9999 mem: location 1307 is 1295
9999 mem: location 1276 is 2
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy to is 1306
9999 mem: storing 2 in location 1306
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1281 is 1
9999 mem: location 1282 is 65520
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1275 is 1305
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65520, 0, 0]
9998 run: result 1 is 1305
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1316
9999 mem: storing 65520 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: decrementing refcount of 1305: 3 -> 2
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 2 -> 3
9999 mem: storing 1 in location 1320
9999 mem: storing 0 in location 1321
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65520
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1322
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1311 is 1008
9999 mem: location 1313 is 1134
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65520
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1353
9999 mem: storing 74 in location 1354
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1357
9999 mem: incrementing refcount of 1134: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1358
9999 mem: storing 65520 in location 1359
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1362
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1357 is 1134
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1356 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1181
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1181 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1181 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1181 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1182
 106 run: return {width: "number"}
9999 mem: location 1182 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1363
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1356 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1181
9999 mem: incrementing refcount of 1008: 85 -> 86
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1181 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1181 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1181 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1182
 106 run: return {height: "number"}
9999 mem: location 1182 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1364
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1139
9998 run: its type is "number"
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1365
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1140
9998 run: its type is "number"
9999 mem: location 1140 is 9
9999 mem: storing 9 in location 1366
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1138 is 1195
9999 mem: storing 1195 in location 1367
9999 mem: incrementing refcount of 1195: 17 -> 18
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 1368
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 1369
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1368 is 2
9999 mem: storing 2 in location 1370
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1369 is 1
9999 mem: storing 1 in location 1371
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1358 is 1
9999 mem: location 1359 is 65520
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: storing 0 in location 1372
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1358 is 1
9999 mem: location 1359 is 65520
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: storing 1359 in location 1416
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1416 is 1359
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1416 is 1359
9999 mem: location 1359 is 65520
9999 mem: storing 0 in location 1389
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1416 is 1359
9999 mem: location 1359 is 65520
9999 mem: storing 0 in location 1400
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1416 is 1359
9999 mem: location 1359 is 65520
9999 mem: storing 1 in location 1405
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 1391
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 1392
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1153
9999 mem: storing 1153 in location 1393
9999 mem: incrementing refcount of 1153: 14 -> 15
 105 run: move-to-end-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1357 is 1134
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1119
9999 mem: incrementing refcount of 1134: 11 -> 12
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1138
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1138 is 1195
9999 mem: storing 1195 in location 1120
9999 mem: incrementing refcount of 1195: 18 -> 19
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 1
9999 mem: storing 1 in location 1121
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1181
9999 mem: incrementing refcount of 1195: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1195
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 52
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1181 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1182
9999 mem: incrementing refcount of 1199: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1122
9999 mem: incrementing refcount of 1199: 17 -> 18
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1122 is 1199
9998 run: jump-unless fell through
 106 run: {nextc: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1122 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 53
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1122 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 53
9999 mem: storing 53 in location 1123
 106 run: {at-end-of-line?: "boolean"} <- equal {nextc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 53
9999 mem: storing 0 in location 1124
 106 run: jump-if {at-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 1199
9999 mem: decrementing refcount of 1195: 20 -> 19
9999 mem: storing 1199 in location 1120
9999 mem: incrementing refcount of 1199: 18 -> 19
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1195
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1120 is 1199
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1138
9999 mem: storing 1199 in location 1138
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1199
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 1
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1121 is 2
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1143
9999 mem: storing 2 in location 1143
 106 run: jump {: "offset"}
9998 run: jumping to instruction 5
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1181
9999 mem: incrementing refcount of 1199: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1199
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 53
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1181 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1182
9999 mem: incrementing refcount of 1203: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 20 -> 19
9999 mem: storing 1203 in location 1122
9999 mem: incrementing refcount of 1203: 16 -> 17
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1122 is 1203
9998 run: jump-unless fell through
 106 run: {nextc: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1122 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 54
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1122 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 54
9999 mem: storing 54 in location 1123
 106 run: {at-end-of-line?: "boolean"} <- equal {nextc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 54
9999 mem: storing 0 in location 1124
 106 run: jump-if {at-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 1203
9999 mem: decrementing refcount of 1199: 19 -> 18
9999 mem: storing 1203 in location 1120
9999 mem: incrementing refcount of 1203: 17 -> 18
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1199
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 2
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1120 is 1203
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1138
9999 mem: storing 1203 in location 1138
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 2
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1121 is 3
9999 mem: location 1119 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1143
9999 mem: storing 3 in location 1143
 106 run: jump {: "offset"}
9998 run: jumping to instruction 5
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1181
9999 mem: incrementing refcount of 1203: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1181 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 54
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1181 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1182
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1182 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1203: 19 -> 18
9999 mem: storing 0 in location 1122
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 15
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1134
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1394
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1136
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1136 is 1153
9999 mem: storing 1153 in location 1395
9999 mem: incrementing refcount of 1153: 15 -> 16
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 1368
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1357 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 3
9999 mem: storing 3 in location 1369
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 555
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1429
9999 mem: storing 1429 in location 1375
9999 mem: incrementing refcount of 1429: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1391 is 2
9999 mem: location 1392 is 1
9999 mem: location 1393 is 1153
9999 mem: location 1368 is 2
9999 mem: location 1369 is 3
9999 mem: location 1395 is 1153
9999 mem: location 1394 is 0
9999 mem: location 1375 is 1429
9999 mem: skipping refcount at 1429
9999 mem: location 1375 is 1429
9999 mem: skipping refcount at 1429
9999 mem: storing 1 in location 1430
9999 mem: storing 2 in location 1431
9999 mem: storing 1 in location 1432
9999 mem: storing 1153 in location 1433
9999 mem: storing 2 in location 1434
9999 mem: storing 3 in location 1435
9999 mem: storing 1153 in location 1436
9999 mem: storing 0 in location 1437
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1357 is 1134
9999 mem: location 1375 is 1429
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1167
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1134 in location 1170
9999 mem: incrementing refcount of 1134: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1429 in location 1171
9999 mem: incrementing refcount of 1429: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1145 is 1350
9999 mem: storing 1350 in location 1172
9999 mem: incrementing refcount of 1350: 2 -> 3
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1171 is 1429
9999 mem: location 1172 is 1350
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1147
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1429 in location 1150
9999 mem: incrementing refcount of 1429: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1151
9999 mem: incrementing refcount of 1350: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1441
9999 mem: storing 1441 in location 1152
9999 mem: incrementing refcount of 1441: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1150 is 1429
9999 mem: location 1151 is 1350
9999 mem: location 1152 is 1441
9999 mem: skipping refcount at 1441
9999 mem: location 1152 is 1441
9999 mem: skipping refcount at 1441
9999 mem: storing 1429 in location 1442
9999 mem: storing 1350 in location 1443
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1152 is 1441
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1441
9999 mem: decrementing refcount of 1350: 4 -> 3
9999 mem: storing 1441 in location 1172
9999 mem: incrementing refcount of 1441: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1350
9999 mem: location 1146 is 0
9999 mem: location 1172 is 1441
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1145
9999 mem: storing 1441 in location 1145
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1441
9999 mem: location 1146 is 0
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1173
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1173
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1441
9999 mem: location 1146 is 0
9999 mem: location 1173 is 0
9999 mem: location 1170 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy to is 1146
9999 mem: storing 0 in location 1146
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1170 is 1134
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1134
9999 mem: decrementing refcount of 1134: 13 -> 12
9999 mem: storing 1134 in location 1357
9999 mem: incrementing refcount of 1134: 12 -> 13
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1362
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1134
9999 mem: location 1362 is 0
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1134
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1311
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: decrementing refcount of 1134: 13 -> 12
9999 mem: storing 1134 in location 1313
9999 mem: incrementing refcount of 1134: 12 -> 13
9999 mem: storing 0 in location 1323
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1441
9999 mem: location 1146 is 0
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 1314
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1441
9999 mem: location 1146 is 0
9999 mem: location 1313 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 3
9999 mem: storing 3 in location 1315
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1311 is 1008
9999 mem: location 1314 is 2
9999 mem: location 1315 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1147
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1150
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1151
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1152
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1150 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1151 is 2
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1152 is 3
9999 mem: location 1150 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1150 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1311
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1312 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1272
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1275
9999 mem: incrementing refcount of 1305: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1275 is 1305
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 2
9999 mem: location 1307 is 1295
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1306
9998 run: its type is "number"
9999 mem: location 1306 is 2
9999 mem: storing 2 in location 1276
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 2
9999 mem: location 1307 is 1295
9999 mem: location 1275 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1307 is 1295
9999 mem: storing 1295 in location 1277
9999 mem: incrementing refcount of 1295: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1277 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 2 in location 1278
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1276 is 2
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1178
9999 mem: storing 1178 in location 1280
9999 mem: incrementing refcount of 1178: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1280 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1275 is 1305
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1305
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: decrementing refcount of 1305: 4 -> 3
9999 mem: storing 1305 in location 1312
9999 mem: incrementing refcount of 1305: 3 -> 4
9999 mem: storing 1 in location 1320
9999 mem: storing 1 in location 1321
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1311 is 1008
9999 mem: location 1312 is 1305
9999 mem: location 1313 is 1134
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1441
9999 mem: location 1146 is 0
9999 mem: location 2 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1142
9998 run: its type is "number"
9999 mem: location 1142 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 1153
9999 mem: location 1136 is 1153
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1203
9999 mem: location 1139 is 0
9999 mem: location 1140 is 9
9999 mem: location 1141 is 2
9999 mem: location 1142 is 2
9999 mem: location 1143 is 3
9999 mem: location 1144 is 1
9999 mem: location 1145 is 1441
9999 mem: location 1146 is 0
9999 mem: location 2 is 1134
9999 mem: skipping refcount at 1134
9998 run: address to copy is 1143
9998 run: its type is "number"
9999 mem: location 1143 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
